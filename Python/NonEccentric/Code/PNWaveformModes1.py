# File produced automatically by PNCodeGen.ipynb
import numpy as np
from numpy import dot, log, sqrt, pi
from numpy import euler_gamma as EulerGamma
from numba import jit, njit, float64, complex128
from numba.experimental import jitclass
import quaternionic

qmul = njit(quaternionic.algebra.multiply)
qexp=njit(quaternionic.algebra.exp)
qconj=njit(quaternionic.algebra.conj)
I=1j

@njit(cache=True)
def mul(A,B):
    C=np.empty(4)
    qmul(A,B,C)
    return C
    
@njit(cache=True)
def exp(A):
    B=np.empty(4)
    qexp(A,B)
    return B
    
@njit(cache=True)
def conjugate(A):
    B=np.empty(4)
    qconj(A,B)
    return B
    
@njit(cache=True)
def normalized(A):
    return A/np.linalg.norm(A)

ConsSpec=[('wHat', float64[:]),('xHat', float64[:]),('yHat', float64[:]),('zHat', float64[:]),('M1', float64[:]),('M2', float64[:]),('S_chi1', float64[:]),('S_chi2', float64[:]),('M', float64[:]),('delta', float64[:]),('nu', float64[:]),('hHat_2_1_1', complex128[:]),('hHat_2_1_3', complex128[:]),('hHat_2_1_4', complex128[:]),('hHat_2_1_5', complex128[:]),('hHat_2_1_6', complex128[:]),('hHat_2_2_0', complex128[:]),('hHat_2_2_2', complex128[:]),('hHat_2_2_3', complex128[:]),('hHat_2_2_4', complex128[:]),('hHat_2_2_5', complex128[:]),('hHat_2_2_6', complex128[:]),('hHat_2_2_lnv_6', complex128[:]),('hHat_2_2_7', complex128[:]),('hHat_3_0_5', complex128[:]),('hHat_3_1_1', complex128[:]),('hHat_3_1_3', complex128[:]),('hHat_3_1_4', complex128[:]),('hHat_3_1_5', complex128[:]),('hHat_3_1_6', complex128[:]),('hHat_3_1_lnv_7', complex128[:]),('hHat_3_1_7', complex128[:]),('hHat_3_2_2', complex128[:]),('hHat_3_2_4', complex128[:]),('hHat_3_2_5', complex128[:]),('hHat_3_2_6', complex128[:]),('hHat_3_3_1', complex128[:]),('hHat_3_3_3', complex128[:]),('hHat_3_3_4', complex128[:]),('hHat_3_3_5', complex128[:]),('hHat_3_3_6', complex128[:]),('hHat_3_3_lnv_7', complex128[:]),('hHat_3_3_7', complex128[:]),('hHat_4_1_3', complex128[:]),('hHat_4_1_5', complex128[:]),('hHat_4_1_6', complex128[:]),('hHat_4_2_2', complex128[:]),('hHat_4_2_4', complex128[:]),('hHat_4_2_5', complex128[:]),('hHat_4_2_6', complex128[:]),('hHat_4_3_3', complex128[:]),('hHat_4_3_5', complex128[:]),('hHat_4_3_6', complex128[:]),('hHat_4_4_2', complex128[:]),('hHat_4_4_4', complex128[:]),('hHat_4_4_5', complex128[:]),('hHat_4_4_6', complex128[:]),('hHat_5_1_3', complex128[:]),('hHat_5_1_5', complex128[:]),('hHat_5_1_6', complex128[:]),('hHat_5_2_4', complex128[:]),('hHat_5_2_6', complex128[:]),('hHat_5_3_3', complex128[:]),('hHat_5_3_5', complex128[:]),('hHat_5_3_6', complex128[:]),('hHat_5_4_4', complex128[:]),('hHat_5_4_6', complex128[:]),('hHat_5_5_3', complex128[:]),('hHat_5_5_5', complex128[:]),('hHat_5_5_6', complex128[:]),('hHat_6_1_5', complex128[:]),('hHat_6_2_4', complex128[:]),('hHat_6_2_6', complex128[:]),('hHat_6_3_5', complex128[:]),('hHat_6_4_4', complex128[:]),('hHat_6_4_6', complex128[:]),('hHat_6_5_5', complex128[:]),('hHat_6_6_4', complex128[:]),('hHat_6_6_6', complex128[:]),('hHat_7_1_5', complex128[:]),('hHat_7_2_6', complex128[:]),('hHat_7_3_5', complex128[:]),('hHat_7_4_6', complex128[:]),('hHat_7_5_5', complex128[:]),('hHat_7_6_6', complex128[:]),('hHat_7_7_5', complex128[:]),('hHat_8_2_6', complex128[:]),('hHat_8_4_6', complex128[:]),('hHat_8_6_6', complex128[:]),('hHat_8_8_6', complex128[:]),('hHat_2_0_0', complex128[:]),('hHat_2_0_2', complex128[:]),('hHat_2_0_4', complex128[:]),('hHat_2_0_5', complex128[:]),('hHat_2_0_6', complex128[:]),('hHat_4_0_0', complex128[:]),('hHat_4_0_2', complex128[:]),('hHat_4_0_4', complex128[:]),('hHat_4_0_5', complex128[:]),('hHat_4_0_6', complex128[:]),('hHat_6_0_0', complex128[:]),('hHat_6_0_2', complex128[:]),('hHat_6_0_4', complex128[:]),('hHat_6_0_5', complex128[:]),('hHat_6_0_6', complex128[:]),('hHat_8_0_0', complex128[:]),('hHat_8_0_2', complex128[:]),('hHat_8_0_4', complex128[:]),('hHat_8_0_6', complex128[:])]
@jitclass(ConsSpec)
class Constants:
    def __init__(self,wHat,xHat,yHat,zHat,M1,M2,S_chi1,S_chi2,M,delta,nu,hHat_2_1_1,hHat_2_1_3,hHat_2_1_4,hHat_2_1_5,hHat_2_1_6,hHat_2_2_0,hHat_2_2_2,hHat_2_2_3,hHat_2_2_4,hHat_2_2_5,hHat_2_2_6,hHat_2_2_lnv_6,hHat_2_2_7,hHat_3_0_5,hHat_3_1_1,hHat_3_1_3,hHat_3_1_4,hHat_3_1_5,hHat_3_1_6,hHat_3_1_lnv_7,hHat_3_1_7,hHat_3_2_2,hHat_3_2_4,hHat_3_2_5,hHat_3_2_6,hHat_3_3_1,hHat_3_3_3,hHat_3_3_4,hHat_3_3_5,hHat_3_3_6,hHat_3_3_lnv_7,hHat_3_3_7,hHat_4_1_3,hHat_4_1_5,hHat_4_1_6,hHat_4_2_2,hHat_4_2_4,hHat_4_2_5,hHat_4_2_6,hHat_4_3_3,hHat_4_3_5,hHat_4_3_6,hHat_4_4_2,hHat_4_4_4,hHat_4_4_5,hHat_4_4_6,hHat_5_1_3,hHat_5_1_5,hHat_5_1_6,hHat_5_2_4,hHat_5_2_6,hHat_5_3_3,hHat_5_3_5,hHat_5_3_6,hHat_5_4_4,hHat_5_4_6,hHat_5_5_3,hHat_5_5_5,hHat_5_5_6,hHat_6_1_5,hHat_6_2_4,hHat_6_2_6,hHat_6_3_5,hHat_6_4_4,hHat_6_4_6,hHat_6_5_5,hHat_6_6_4,hHat_6_6_6,hHat_7_1_5,hHat_7_2_6,hHat_7_3_5,hHat_7_4_6,hHat_7_5_5,hHat_7_6_6,hHat_7_7_5,hHat_8_2_6,hHat_8_4_6,hHat_8_6_6,hHat_8_8_6,hHat_2_0_0,hHat_2_0_2,hHat_2_0_4,hHat_2_0_5,hHat_2_0_6,hHat_4_0_0,hHat_4_0_2,hHat_4_0_4,hHat_4_0_5,hHat_4_0_6,hHat_6_0_0,hHat_6_0_2,hHat_6_0_4,hHat_6_0_5,hHat_6_0_6,hHat_8_0_0,hHat_8_0_2,hHat_8_0_4,hHat_8_0_6):
        self.wHat=wHat
        self.xHat=xHat
        self.yHat=yHat
        self.zHat=zHat
        self.M1=M1
        self.M2=M2
        self.S_chi1=S_chi1
        self.S_chi2=S_chi2
        self.M=M
        self.delta=delta
        self.nu=nu
        self.hHat_2_1_1=hHat_2_1_1
        self.hHat_2_1_3=hHat_2_1_3
        self.hHat_2_1_4=hHat_2_1_4
        self.hHat_2_1_5=hHat_2_1_5
        self.hHat_2_1_6=hHat_2_1_6
        self.hHat_2_2_0=hHat_2_2_0
        self.hHat_2_2_2=hHat_2_2_2
        self.hHat_2_2_3=hHat_2_2_3
        self.hHat_2_2_4=hHat_2_2_4
        self.hHat_2_2_5=hHat_2_2_5
        self.hHat_2_2_6=hHat_2_2_6
        self.hHat_2_2_lnv_6=hHat_2_2_lnv_6
        self.hHat_2_2_7=hHat_2_2_7
        self.hHat_3_0_5=hHat_3_0_5
        self.hHat_3_1_1=hHat_3_1_1
        self.hHat_3_1_3=hHat_3_1_3
        self.hHat_3_1_4=hHat_3_1_4
        self.hHat_3_1_5=hHat_3_1_5
        self.hHat_3_1_6=hHat_3_1_6
        self.hHat_3_1_lnv_7=hHat_3_1_lnv_7
        self.hHat_3_1_7=hHat_3_1_7
        self.hHat_3_2_2=hHat_3_2_2
        self.hHat_3_2_4=hHat_3_2_4
        self.hHat_3_2_5=hHat_3_2_5
        self.hHat_3_2_6=hHat_3_2_6
        self.hHat_3_3_1=hHat_3_3_1
        self.hHat_3_3_3=hHat_3_3_3
        self.hHat_3_3_4=hHat_3_3_4
        self.hHat_3_3_5=hHat_3_3_5
        self.hHat_3_3_6=hHat_3_3_6
        self.hHat_3_3_lnv_7=hHat_3_3_lnv_7
        self.hHat_3_3_7=hHat_3_3_7
        self.hHat_4_1_3=hHat_4_1_3
        self.hHat_4_1_5=hHat_4_1_5
        self.hHat_4_1_6=hHat_4_1_6
        self.hHat_4_2_2=hHat_4_2_2
        self.hHat_4_2_4=hHat_4_2_4
        self.hHat_4_2_5=hHat_4_2_5
        self.hHat_4_2_6=hHat_4_2_6
        self.hHat_4_3_3=hHat_4_3_3
        self.hHat_4_3_5=hHat_4_3_5
        self.hHat_4_3_6=hHat_4_3_6
        self.hHat_4_4_2=hHat_4_4_2
        self.hHat_4_4_4=hHat_4_4_4
        self.hHat_4_4_5=hHat_4_4_5
        self.hHat_4_4_6=hHat_4_4_6
        self.hHat_5_1_3=hHat_5_1_3
        self.hHat_5_1_5=hHat_5_1_5
        self.hHat_5_1_6=hHat_5_1_6
        self.hHat_5_2_4=hHat_5_2_4
        self.hHat_5_2_6=hHat_5_2_6
        self.hHat_5_3_3=hHat_5_3_3
        self.hHat_5_3_5=hHat_5_3_5
        self.hHat_5_3_6=hHat_5_3_6
        self.hHat_5_4_4=hHat_5_4_4
        self.hHat_5_4_6=hHat_5_4_6
        self.hHat_5_5_3=hHat_5_5_3
        self.hHat_5_5_5=hHat_5_5_5
        self.hHat_5_5_6=hHat_5_5_6
        self.hHat_6_1_5=hHat_6_1_5
        self.hHat_6_2_4=hHat_6_2_4
        self.hHat_6_2_6=hHat_6_2_6
        self.hHat_6_3_5=hHat_6_3_5
        self.hHat_6_4_4=hHat_6_4_4
        self.hHat_6_4_6=hHat_6_4_6
        self.hHat_6_5_5=hHat_6_5_5
        self.hHat_6_6_4=hHat_6_6_4
        self.hHat_6_6_6=hHat_6_6_6
        self.hHat_7_1_5=hHat_7_1_5
        self.hHat_7_2_6=hHat_7_2_6
        self.hHat_7_3_5=hHat_7_3_5
        self.hHat_7_4_6=hHat_7_4_6
        self.hHat_7_5_5=hHat_7_5_5
        self.hHat_7_6_6=hHat_7_6_6
        self.hHat_7_7_5=hHat_7_7_5
        self.hHat_8_2_6=hHat_8_2_6
        self.hHat_8_4_6=hHat_8_4_6
        self.hHat_8_6_6=hHat_8_6_6
        self.hHat_8_8_6=hHat_8_8_6
        self.hHat_2_0_0=hHat_2_0_0
        self.hHat_2_0_2=hHat_2_0_2
        self.hHat_2_0_4=hHat_2_0_4
        self.hHat_2_0_5=hHat_2_0_5
        self.hHat_2_0_6=hHat_2_0_6
        self.hHat_4_0_0=hHat_4_0_0
        self.hHat_4_0_2=hHat_4_0_2
        self.hHat_4_0_4=hHat_4_0_4
        self.hHat_4_0_5=hHat_4_0_5
        self.hHat_4_0_6=hHat_4_0_6
        self.hHat_6_0_0=hHat_6_0_0
        self.hHat_6_0_2=hHat_6_0_2
        self.hHat_6_0_4=hHat_6_0_4
        self.hHat_6_0_5=hHat_6_0_5
        self.hHat_6_0_6=hHat_6_0_6
        self.hHat_8_0_0=hHat_8_0_0
        self.hHat_8_0_2=hHat_8_0_2
        self.hHat_8_0_4=hHat_8_0_4
        self.hHat_8_0_6=hHat_8_0_6

VarsSpec=[('v', float64[:]),('rfrak_chi1', float64[:]),('rfrak_chi2', float64[:]),('R', float64[:]),('R_S1', float64[:]),('R_S2', float64[:]),('chiVec1', float64[:]),('chiVec2', float64[:]),('chi1_n', float64[:]),('chi1_lambda', float64[:]),('chi1_ell', float64[:]),('chi2_n', float64[:]),('chi2_lambda', float64[:]),('chi2_ell', float64[:]),('S_ell', float64[:]),('S_n', float64[:]),('S_lambda', float64[:]),('Sigma_ell', float64[:]),('Sigma_n', float64[:]),('Sigma_lambda', float64[:]),('x', float64[:]),('logv', float64[:]),('rhOverM_coeff', float64[:]),('hHat_spin_Symm_2_2_3', complex128[:]),('hHat_spin_Symm_2_2_4', complex128[:]),('hHat_spin_Symm_2_1_2', complex128[:]),('hHat_spin_Symm_2_1_4', complex128[:]),('hHat_spin_Symm_2_0_3', complex128[:]),('hHat_spin_Symm_2_0_4', complex128[:]),('hHat_spin_Symm_2_0_5', complex128[:]),('hHat_spin_Symm_2_0_6', complex128[:]),('hHat_spin_Symm_2_0_7', complex128[:]),('hHat_spin_Symm_3_3_4', complex128[:]),('hHat_spin_Symm_3_2_3', complex128[:]),('hHat_spin_Symm_3_1_4', complex128[:]),('hHat_spin_Symm_3_3_7', complex128[:]),('hHat_spin_Symm_3_1_7', complex128[:]),('hHat_spin_Symm_4_3_4', complex128[:]),('hHat_spin_Symm_4_1_4', complex128[:]),('hHat_spin_Symm_4_0_3', complex128[:]),('hHat_spin_Symm_4_0_4', complex128[:]),('hHat_spin_Symm_4_0_5', complex128[:]),('hHat_spin_Symm_4_0_6', complex128[:]),('hHat_spin_Symm_4_0_7', complex128[:]),('hHat_spin_Symm_6_0_5', complex128[:]),('hHat_spin_Symm_6_0_6', complex128[:]),('hHat_spin_Symm_6_0_7', complex128[:]),('hHat_spin_Symm_8_0_7', complex128[:]),('hHat_spin_Asymm_2_2_2', complex128[:]),('hHat_spin_Asymm_2_2_4', complex128[:]),('hHat_spin_Asymm_2_1_3', complex128[:]),('hHat_spin_Asymm_2_1_4', complex128[:]),('hHat_spin_Asymm_2_0_2', complex128[:]),('hHat_spin_Asymm_2_0_4', complex128[:]),('hHat_spin_Asymm_3_3_3', complex128[:]),('hHat_spin_Asymm_3_2_4', complex128[:]),('hHat_spin_Asymm_3_1_3', complex128[:]),('hHat_spin_Asymm_3_0_4', complex128[:]),('hHat_spin_Asymm_4_4_4', complex128[:]),('hHat_spin_Asymm_4_2_4', complex128[:]),('hHat_spin_Asymm_4_1_3', complex128[:]),('hHat_spin_Asymm_4_1_4', complex128[:]),('hHat_spin_Asymm_4_0_4', complex128[:])]
@jitclass(VarsSpec)
class Variables:
    def __init__(self,v,rfrak_chi1,rfrak_chi2,R,R_S1,R_S2,chiVec1,chiVec2,chi1_n,chi1_lambda,chi1_ell,chi2_n,chi2_lambda,chi2_ell,S_ell,S_n,S_lambda,Sigma_ell,Sigma_n,Sigma_lambda,x,logv,rhOverM_coeff,hHat_spin_Symm_2_2_3,hHat_spin_Symm_2_2_4,hHat_spin_Symm_2_1_2,hHat_spin_Symm_2_1_4,hHat_spin_Symm_2_0_3,hHat_spin_Symm_2_0_4,hHat_spin_Symm_2_0_5,hHat_spin_Symm_2_0_6,hHat_spin_Symm_2_0_7,hHat_spin_Symm_3_3_4,hHat_spin_Symm_3_2_3,hHat_spin_Symm_3_1_4,hHat_spin_Symm_3_3_7,hHat_spin_Symm_3_1_7,hHat_spin_Symm_4_3_4,hHat_spin_Symm_4_1_4,hHat_spin_Symm_4_0_3,hHat_spin_Symm_4_0_4,hHat_spin_Symm_4_0_5,hHat_spin_Symm_4_0_6,hHat_spin_Symm_4_0_7,hHat_spin_Symm_6_0_5,hHat_spin_Symm_6_0_6,hHat_spin_Symm_6_0_7,hHat_spin_Symm_8_0_7,hHat_spin_Asymm_2_2_2,hHat_spin_Asymm_2_2_4,hHat_spin_Asymm_2_1_3,hHat_spin_Asymm_2_1_4,hHat_spin_Asymm_2_0_2,hHat_spin_Asymm_2_0_4,hHat_spin_Asymm_3_3_3,hHat_spin_Asymm_3_2_4,hHat_spin_Asymm_3_1_3,hHat_spin_Asymm_3_0_4,hHat_spin_Asymm_4_4_4,hHat_spin_Asymm_4_2_4,hHat_spin_Asymm_4_1_3,hHat_spin_Asymm_4_1_4,hHat_spin_Asymm_4_0_4):
        self.v=v
        self.rfrak_chi1=rfrak_chi1
        self.rfrak_chi2=rfrak_chi2
        self.R=R
        self.R_S1=R_S1
        self.R_S2=R_S2
        self.chiVec1=chiVec1
        self.chiVec2=chiVec2
        self.chi1_n=chi1_n
        self.chi1_lambda=chi1_lambda
        self.chi1_ell=chi1_ell
        self.chi2_n=chi2_n
        self.chi2_lambda=chi2_lambda
        self.chi2_ell=chi2_ell
        self.S_ell=S_ell
        self.S_n=S_n
        self.S_lambda=S_lambda
        self.Sigma_ell=Sigma_ell
        self.Sigma_n=Sigma_n
        self.Sigma_lambda=Sigma_lambda
        self.x=x
        self.logv=logv
        self.rhOverM_coeff=rhOverM_coeff
        self.hHat_spin_Symm_2_2_3=hHat_spin_Symm_2_2_3
        self.hHat_spin_Symm_2_2_4=hHat_spin_Symm_2_2_4
        self.hHat_spin_Symm_2_1_2=hHat_spin_Symm_2_1_2
        self.hHat_spin_Symm_2_1_4=hHat_spin_Symm_2_1_4
        self.hHat_spin_Symm_2_0_3=hHat_spin_Symm_2_0_3
        self.hHat_spin_Symm_2_0_4=hHat_spin_Symm_2_0_4
        self.hHat_spin_Symm_2_0_5=hHat_spin_Symm_2_0_5
        self.hHat_spin_Symm_2_0_6=hHat_spin_Symm_2_0_6
        self.hHat_spin_Symm_2_0_7=hHat_spin_Symm_2_0_7
        self.hHat_spin_Symm_3_3_4=hHat_spin_Symm_3_3_4
        self.hHat_spin_Symm_3_2_3=hHat_spin_Symm_3_2_3
        self.hHat_spin_Symm_3_1_4=hHat_spin_Symm_3_1_4
        self.hHat_spin_Symm_3_3_7=hHat_spin_Symm_3_3_7
        self.hHat_spin_Symm_3_1_7=hHat_spin_Symm_3_1_7
        self.hHat_spin_Symm_4_3_4=hHat_spin_Symm_4_3_4
        self.hHat_spin_Symm_4_1_4=hHat_spin_Symm_4_1_4
        self.hHat_spin_Symm_4_0_3=hHat_spin_Symm_4_0_3
        self.hHat_spin_Symm_4_0_4=hHat_spin_Symm_4_0_4
        self.hHat_spin_Symm_4_0_5=hHat_spin_Symm_4_0_5
        self.hHat_spin_Symm_4_0_6=hHat_spin_Symm_4_0_6
        self.hHat_spin_Symm_4_0_7=hHat_spin_Symm_4_0_7
        self.hHat_spin_Symm_6_0_5=hHat_spin_Symm_6_0_5
        self.hHat_spin_Symm_6_0_6=hHat_spin_Symm_6_0_6
        self.hHat_spin_Symm_6_0_7=hHat_spin_Symm_6_0_7
        self.hHat_spin_Symm_8_0_7=hHat_spin_Symm_8_0_7
        self.hHat_spin_Asymm_2_2_2=hHat_spin_Asymm_2_2_2
        self.hHat_spin_Asymm_2_2_4=hHat_spin_Asymm_2_2_4
        self.hHat_spin_Asymm_2_1_3=hHat_spin_Asymm_2_1_3
        self.hHat_spin_Asymm_2_1_4=hHat_spin_Asymm_2_1_4
        self.hHat_spin_Asymm_2_0_2=hHat_spin_Asymm_2_0_2
        self.hHat_spin_Asymm_2_0_4=hHat_spin_Asymm_2_0_4
        self.hHat_spin_Asymm_3_3_3=hHat_spin_Asymm_3_3_3
        self.hHat_spin_Asymm_3_2_4=hHat_spin_Asymm_3_2_4
        self.hHat_spin_Asymm_3_1_3=hHat_spin_Asymm_3_1_3
        self.hHat_spin_Asymm_3_0_4=hHat_spin_Asymm_3_0_4
        self.hHat_spin_Asymm_4_4_4=hHat_spin_Asymm_4_4_4
        self.hHat_spin_Asymm_4_2_4=hHat_spin_Asymm_4_2_4
        self.hHat_spin_Asymm_4_1_3=hHat_spin_Asymm_4_1_3
        self.hHat_spin_Asymm_4_1_4=hHat_spin_Asymm_4_1_4
        self.hHat_spin_Asymm_4_0_4=hHat_spin_Asymm_4_0_4

@njit(cache=True)
def Initialization(Cons, wHat_i, xHat_i, yHat_i, zHat_i, M1_i, M2_i, v_i, S_chi1_i, S_chi2_i): 
    Cons.wHat=wHat_i
    Cons.xHat=xHat_i
    Cons.yHat=yHat_i
    Cons.zHat=zHat_i
    Cons.M1=np.array([M1_i])
    Cons.M2=np.array([M2_i])
    Cons.S_chi1=S_chi1_i
    Cons.S_chi2=S_chi2_i
    Cons.M=Cons.M1 + Cons.M2
    Cons.delta=(Cons.M1 - Cons.M2)/Cons.M
    Cons.nu=Cons.M1*Cons.M2/Cons.M**2
    Cons.hHat_2_1_1=I*Cons.delta/3
    Cons.hHat_2_1_3=I*Cons.delta*(20*Cons.nu - 17)/84
    Cons.hHat_2_1_4=Cons.delta*(1 + log(16) + 2*I*pi)/6
    Cons.hHat_2_1_5=I*Cons.delta*(Cons.nu*(237*Cons.nu - 2036) - 172)/1512
    Cons.hHat_2_1_6=Cons.delta*(2*Cons.nu*(log(4096) + 353 + 6*I*pi) - 17*log(16) - 17 - 34*I*pi)/168
    Cons.hHat_2_2_0=np.array([1 + 0.0*I])
    Cons.hHat_2_2_2=55*Cons.nu/42 - 107/42 + 0.0*I
    Cons.hHat_2_2_3=np.array([2*pi + 0.0*I])
    Cons.hHat_2_2_4=Cons.nu*(2047*Cons.nu - 7483)/1512 - 2173/1512 + 0.0*I
    Cons.hHat_2_2_5=-24*I*Cons.nu + pi*(34*Cons.nu - 107)/21
    Cons.hHat_2_2_6=Cons.nu*(Cons.nu*(114635*Cons.nu - 729396) - 834555)/99792 + 41*Cons.nu*pi**2/96 - 428*log(16)/105 - 856*EulerGamma/105 + 27027409/646800 + 2*pi*(35*pi + 214*I)/105
    Cons.hHat_2_2_lnv_6=np.array([-856/105 + 0.0*I])
    Cons.hHat_2_2_7=-I*Cons.nu*(24396*Cons.nu - 501655)/5670 + pi*(30*Cons.nu*(560*Cons.nu - 2459) - 32595)/11340
    Cons.hHat_3_0_5=-0.370328039909021*I*Cons.nu
    Cons.hHat_3_1_1=sqrt(14)*I*Cons.delta/168
    Cons.hHat_3_1_3=-sqrt(14)*I*Cons.delta*(Cons.nu + 4)/252
    Cons.hHat_3_1_4=sqrt(14)*Cons.delta*(log(1024) + 7 + 5*I*pi)/840
    Cons.hHat_3_1_5=-sqrt(14)*I*Cons.delta*(Cons.nu*(247*Cons.nu + 272) - 607)/33264
    Cons.hHat_3_1_6=-0.192063492063492*sqrt(14)*Cons.delta*Cons.nu + sqrt(14)*Cons.delta*(2*Cons.nu - 5*I*pi*(7*Cons.nu + 16) - 2*(35*Cons.nu + 80)*log(2) - 112)/5040
    Cons.hHat_3_1_lnv_7=-13*sqrt(14)*I*Cons.delta/1764
    Cons.hHat_3_1_7=sqrt(14)*I*Cons.delta*(-17525*Cons.nu**3/15444 + 327059*Cons.nu**2/30888 + Cons.nu*(-1738843/19305 + 41*pi**2/8)/8 - 2*(log(2) + 212/105)*log(2) - 26*EulerGamma/21 + pi**2/6 + 10753397/1513512 - 2*I*pi*(41/105 + log(2)))/168
    Cons.hHat_3_2_2=sqrt(35)*(1 - 3*Cons.nu)/21 + 0.0*I
    Cons.hHat_3_2_4=sqrt(35)*(Cons.nu*(725 - 365*Cons.nu) - 193)/1890 + 0.0*I
    Cons.hHat_3_2_5=sqrt(35)*(-30*Cons.nu*pi + 66*I*Cons.nu + 10*pi - 15*I)/105
    Cons.hHat_3_2_6=sqrt(35)*(Cons.nu*(Cons.nu*(100026 - 16023*Cons.nu) - 17387) - 1451)/83160 + 0.0*I
    Cons.hHat_3_3_1=-3*sqrt(210)*I*Cons.delta/56
    Cons.hHat_3_3_3=-3*sqrt(210)*I*Cons.delta*(Cons.nu - 2)/28
    Cons.hHat_3_3_4=9*sqrt(210)*Cons.delta*(-7 + 10*log(3/2) - 5*I*pi)/280
    Cons.hHat_3_3_5=-sqrt(210)*I*Cons.delta*(Cons.nu*(887*Cons.nu - 3676) + 369)/6160
    Cons.hHat_3_3_6=0.00194003527336861*sqrt(210)*Cons.delta*Cons.nu + sqrt(210)*Cons.delta*(-96206*Cons.nu - 3645*I*pi*(3*Cons.nu - 8) + 2*(10935*Cons.nu - 29160)*log(3/2) + 40824)/45360
    Cons.hHat_3_3_lnv_7=117*sqrt(210)*I*Cons.delta*log(4)/196
    Cons.hHat_3_3_7=-3*sqrt(210)*I*Cons.delta*(8237*Cons.nu**3/2860 - 318841*Cons.nu**2/17160 + Cons.nu*(-7055/429 + 41*pi**2/8)/8 - 78*EulerGamma/7 - 18*log(3/2)**2 + 492*log(3/2)/35 + 3*pi**2/2 + 19388147/280280 + 6*I*pi*(-41/35 + 3*log(3/2)))/56
    Cons.hHat_4_1_3=sqrt(10)*I*Cons.delta*(1 - 2*Cons.nu)/840
    Cons.hHat_4_1_5=-sqrt(10)*I*Cons.delta*(Cons.nu*(332*Cons.nu - 1011) + 404)/110880
    Cons.hHat_4_1_6=sqrt(10)*Cons.delta*(-1661*Cons.nu + (60 - 120*Cons.nu)*log(2) - 30*I*pi*(2*Cons.nu - 1) + 64)/25200
    Cons.hHat_4_2_2=sqrt(5)*(1 - 3*Cons.nu)/63 + 0.0*I
    Cons.hHat_4_2_4=sqrt(5)*(Cons.nu*(4025 - 285*Cons.nu) - 1311)/20790 + 0.0*I
    Cons.hHat_4_2_5=sqrt(5)*(Cons.nu*(-30*pi + 84*I) + 10*pi - 21*I)/315
    Cons.hHat_4_2_6=sqrt(5)*(7*Cons.nu*(115*Cons.nu*(3363*Cons.nu + 34822) - 5460759) + 9342351)/113513400 + 0.0*I
    Cons.hHat_4_3_3=9*sqrt(70)*I*Cons.delta*(2*Cons.nu - 1)/280
    Cons.hHat_4_3_5=3*sqrt(70)*I*Cons.delta*(Cons.nu*(524*Cons.nu - 1267) + 468)/12320
    Cons.hHat_4_3_6=sqrt(70)*Cons.delta*(16301*Cons.nu + (4860 - 9720*Cons.nu)*log(3/2) + 2430*I*pi*(2*Cons.nu - 1) - 5184)/25200
    Cons.hHat_4_4_2=8*sqrt(35)*(3*Cons.nu - 1)/63 + 0.0*I
    Cons.hHat_4_4_4=sqrt(35)*(20*Cons.nu*(525*Cons.nu - 1273) + 7116)/10395 + 0.0*I
    Cons.hHat_4_4_5=0.00317460317460317*sqrt(35)*I*Cons.nu + sqrt(35)*(pi*(480*Cons.nu - 160) + I*(-1193*Cons.nu + (960*Cons.nu - 320)*log(2) + 336))/315
    Cons.hHat_4_4_6=sqrt(35)*(7*Cons.nu*(5*Cons.nu*(678291*Cons.nu - 3231338) + 9793071) - 9618039)/14189175 + 0.0*I
    Cons.hHat_5_1_3=sqrt(385)*I*Cons.delta*(1 - 2*Cons.nu)/110880
    Cons.hHat_5_1_5=-sqrt(385)*I*Cons.delta*(Cons.nu*(4*Cons.nu - 352) + 179)/4324320
    Cons.hHat_5_1_6=-0.000535971964543393*sqrt(385)*Cons.delta*Cons.nu + sqrt(385)*Cons.delta*(-28*Cons.nu*(log(1024) + 313) - 70*I*pi*(2*Cons.nu - 1) + 140*log(2) + 181)/7761600
    Cons.hHat_5_2_4=sqrt(55)*(2*Cons.nu*(5*Cons.nu - 5) + 2)/1485 + 0.0*I
    Cons.hHat_5_2_6=sqrt(55)*(7*Cons.nu*(35*Cons.nu*(33*Cons.nu - 118) + 3079) - 3911)/675675 + 0.0*I
    Cons.hHat_5_3_3=9*sqrt(330)*I*Cons.delta*(2*Cons.nu - 1)/3520
    Cons.hHat_5_3_5=3*sqrt(330)*I*Cons.delta*(8*Cons.nu*(11*Cons.nu - 58) + 207)/45760
    Cons.hHat_5_3_6=-1.60333493666827e-5*sqrt(330)*Cons.delta*Cons.nu + sqrt(330)*Cons.delta*(1171828*Cons.nu + 153090*I*pi*(2*Cons.nu - 1) - (612360*Cons.nu - 306180)*log(3/2) - 395847)/19958400
    Cons.hHat_5_4_4=sqrt(165)*(-32*Cons.nu*(5*Cons.nu - 5) - 32)/1485 + 0.0*I
    Cons.hHat_5_4_6=sqrt(165)*(-112*Cons.nu*(5*Cons.nu*(339*Cons.nu - 1042) + 3619) + 71216)/675675 + 0.0*I
    Cons.hHat_5_5_3=-625*sqrt(66)*I*Cons.delta*(2*Cons.nu - 1)/6336
    Cons.hHat_5_5_5=-625*sqrt(66)*I*Cons.delta*(16*Cons.nu*(16*Cons.nu - 43) + 263)/247104
    Cons.hHat_5_5_6=0.0038961038961039*sqrt(66)*Cons.delta*Cons.nu + sqrt(66)*Cons.delta*(-1481676*Cons.nu - 218750*I*pi*(2*Cons.nu - 1) + (875000*Cons.nu - 437500)*log(5/2) + 565625)/443520
    Cons.hHat_6_1_5=sqrt(26)*I*Cons.delta*(Cons.nu - 1)*(3*Cons.nu - 1)/216216
    Cons.hHat_6_2_4=sqrt(65)*(2*Cons.nu*(5*Cons.nu - 5) + 2)/19305 + 0.0*I
    Cons.hHat_6_2_6=sqrt(65)*(7*Cons.nu*(Cons.nu*(7*Cons.nu - 64) + 59) - 81)/135135 + 0.0*I
    Cons.hHat_6_3_5=-81*sqrt(65)*I*Cons.delta*(Cons.nu - 1)*(3*Cons.nu - 1)/40040
    Cons.hHat_6_4_4=-128*sqrt(78)*(Cons.nu*(5*Cons.nu - 5) + 1)/19305 + 0.0*I
    Cons.hHat_6_4_6=-64*sqrt(78)*(7*Cons.nu*(Cons.nu*(19*Cons.nu - 88) + 71) - 93)/135135 + 0.0*I
    Cons.hHat_6_5_5=3125*sqrt(429)*I*Cons.delta*(Cons.nu - 1)*(3*Cons.nu - 1)/216216
    Cons.hHat_6_6_4=sqrt(143)*(54*Cons.nu*(5*Cons.nu - 5) + 54)/715 + 0.0*I
    Cons.hHat_6_6_6=sqrt(143)*(189*Cons.nu*(Cons.nu*(39*Cons.nu - 128) + 91) - 3051)/5005 + 0.0*I
    Cons.hHat_7_1_5=sqrt(2)*I*Cons.delta*(Cons.nu - 1)*(3*Cons.nu - 1)/1729728
    Cons.hHat_7_2_6=sqrt(3)*(-7*Cons.nu*(Cons.nu - 1)**2 + 1)/9009 + 0.0*I
    Cons.hHat_7_3_5=-243*sqrt(6)*I*Cons.delta*(Cons.nu - 1)*(3*Cons.nu - 1)/320320
    Cons.hHat_7_4_6=128*sqrt(66)*(7*Cons.nu*(Cons.nu - 1)**2 - 1)/45045 + 0.0*I
    Cons.hHat_7_5_5=15625*sqrt(66)*I*Cons.delta*(Cons.nu - 1)*(3*Cons.nu - 1)/1729728
    Cons.hHat_7_6_6=-81*sqrt(429)*(7*Cons.nu*(Cons.nu - 1)**2 - 1)/5005 + 0.0*I
    Cons.hHat_7_7_5=-16807*sqrt(6006)*I*Cons.delta*(Cons.nu - 1)*(3*Cons.nu - 1)/1235520
    Cons.hHat_8_2_6=sqrt(85)*(-7*Cons.nu*(Cons.nu - 1)**2 + 1)/765765 + 0.0*I
    Cons.hHat_8_4_6=128*sqrt(374)*(7*Cons.nu*(Cons.nu - 1)**2 - 1)/765765 + 0.0*I
    Cons.hHat_8_6_6=-243*sqrt(51051)*(7*Cons.nu*(Cons.nu - 1)**2 - 1)/595595 + 0.0*I
    Cons.hHat_8_8_6=16384*sqrt(170170)*(7*Cons.nu*(Cons.nu - 1)**2 - 1)/5360355 + 0.0*I
    Cons.hHat_2_0_0=np.array([-0.0652050663696626*sqrt(5) + 0.0*I])
    Cons.hHat_2_0_2=-0.455077025704937*Cons.nu + 0.065900457702474*sqrt(5) + 0.0*I
    Cons.hHat_2_0_4=-0.0379745414936956*sqrt(5)*Cons.nu**2 + 0.182029340110024*sqrt(5)*Cons.nu + 0.147675673640822*sqrt(5) + 0.0*I
    Cons.hHat_2_0_5=-0.196391449899103*sqrt(5)*Cons.nu*pi + 0.0490978624747757*sqrt(5)*pi + 0.0*I
    Cons.hHat_2_0_6=-0.0145350167750611*sqrt(5)*Cons.nu**3 - 0.0273018278229152*sqrt(5)*Cons.nu**2 - 0.228217732293819*Cons.nu*(-205*sqrt(5)*pi**2/336 + 700464542023*sqrt(5)/48819843072) + 0.53842237253322*sqrt(5) + 0.0*I
    Cons.hHat_4_0_0=np.array([-sqrt(2)/1008 + 0.0*I])
    Cons.hHat_4_0_2=-sqrt(2)*(27227*Cons.nu/44352 - 0.14502567125335)/24 + 0.0*I
    Cons.hHat_4_0_4=-sqrt(2)*(844951*Cons.nu**2/1153152 - 34829479*Cons.nu/18162144 + 0.330678707853645)/24 + 0.0*I
    Cons.hHat_4_0_5=-sqrt(2)*(13565*Cons.nu*pi/12936 - 13565*pi/51744)/24 + 0.0*I
    Cons.hHat_4_0_6=-sqrt(2)*(221405645*Cons.nu**3/498161664 - 4174614175*Cons.nu**2/1549836288 + Cons.nu*(-0.878864423125315 - 205*pi**2/4032) + 0.464550058346122)/24 + 0.0*I
    Cons.hHat_6_0_0=np.array([0 + 0.0*I])
    Cons.hHat_6_0_2=-sqrt(21)*(215*sqrt(13)*Cons.nu/27456 - 4195*sqrt(13)/2306304)/7056 + 0.0*I
    Cons.hHat_6_0_4=-sqrt(21)*(17185*sqrt(13)*Cons.nu**2/164736 - 253535*sqrt(13)*Cons.nu/3459456 + 4151051*sqrt(13)/317011968)/7056 + 0.0*I
    Cons.hHat_6_0_5=-sqrt(21)*(0.0108225108225108*sqrt(13)*Cons.nu*pi - 5*sqrt(13)*pi/1848)/7056 + 0.0*I
    Cons.hHat_6_0_6=-sqrt(21)*(17709755*sqrt(13)*Cons.nu**3/134424576 - 941405305*sqrt(13)*Cons.nu**2/1613094912 + 27653500031*sqrt(13)*Cons.nu/105388867584 - 3012132889099*sqrt(13)/79673983893504)/7056 + 0.0*I
    Cons.hHat_8_0_0=np.array([0 + 0.0*I])
    Cons.hHat_8_0_2=np.array([0 + 0.0*I])
    Cons.hHat_8_0_4=-sqrt(7)*(3395*sqrt(17)*Cons.nu**2/700128 - 25115*sqrt(17)*Cons.nu/8401536 + 75601*sqrt(17)/151227648)/7056 + 0.0*I
    Cons.hHat_8_0_6=-sqrt(7)*(9677185*sqrt(17)*Cons.nu**3/212838912 - 80280125*sqrt(17)*Cons.nu**2/1277033472 + 18177898147*sqrt(17)*Cons.nu/643624869888 - 265361599*sqrt(17)/67749986304)/7056 + 0.0*I

@njit(cache=True)
def Recalculate_0(Cons,Vars,y):
    Vars.v = np.array([y[0]])
    Vars.rfrak_chi1 = np.array([y[1],y[2]])
    Vars.rfrak_chi2 = np.array([y[3],y[4]])
    Vars.R_S1 = exp(Vars.rfrak_chi1[0]*Cons.xHat + Vars.rfrak_chi1[1]*Cons.yHat)
    Vars.R_S2 = exp(Vars.rfrak_chi2[0]*Cons.xHat + Vars.rfrak_chi2[1]*Cons.yHat)
    Vars.rhOverM_coeff = -8*sqrt(5)*Cons.nu*Vars.v**2*sqrt(pi)/5

@njit(cache=True)
def Modes_0(modes,Cons,Vars):
    # (ell, m) = (2, +/- 0)
    Symm = Cons.hHat_2_0_0*Vars.rhOverM_coeff
    Asymm = 0
    modes[2] = (Symm + Asymm)[0]
    # (ell, m) = (2, +/- 2)
    Symm = Cons.hHat_2_2_0*Vars.rhOverM_coeff
    Asymm = 0
    modes[4] = (Symm + Asymm)[0]
    modes[0] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (4, +/- 0)
    Symm = Cons.hHat_4_0_0*Vars.rhOverM_coeff
    Asymm = 0
    modes[16] = (Symm + Asymm)[0]
    # (ell, m) = (6, +/- 0)
    Symm = Cons.hHat_6_0_0*Vars.rhOverM_coeff
    Asymm = 0
    modes[38] = (Symm + Asymm)[0]
    # (ell, m) = (8, +/- 0)
    Symm = Cons.hHat_8_0_0*Vars.rhOverM_coeff
    Asymm = 0
    modes[68] = (Symm + Asymm)[0]

@njit(cache=True)
def Recalculate_0p50(Cons,Vars,y):
    Vars.v = np.array([y[0]])
    Vars.rfrak_chi1 = np.array([y[1],y[2]])
    Vars.rfrak_chi2 = np.array([y[3],y[4]])
    Vars.R_S1 = exp(Vars.rfrak_chi1[0]*Cons.xHat + Vars.rfrak_chi1[1]*Cons.yHat)
    Vars.R_S2 = exp(Vars.rfrak_chi2[0]*Cons.xHat + Vars.rfrak_chi2[1]*Cons.yHat)
    Vars.rhOverM_coeff = -8*sqrt(5)*Cons.nu*Vars.v**2*sqrt(pi)/5

@njit(cache=True)
def Modes_0p50(modes,Cons,Vars):
    # (ell, m) = (2, +/- 0)
    Symm = Cons.hHat_2_0_0*Vars.rhOverM_coeff
    Asymm = 0
    modes[2] = (Symm + Asymm)[0]
    # (ell, m) = (2, +/- 1)
    Symm = Cons.hHat_2_1_1*Vars.rhOverM_coeff*Vars.v
    Asymm = 0
    modes[3] = (Symm + Asymm)[0]
    modes[1] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (2, +/- 2)
    Symm = Cons.hHat_2_2_0*Vars.rhOverM_coeff
    Asymm = 0
    modes[4] = (Symm + Asymm)[0]
    modes[0] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (3, +/- 1)
    Symm = Cons.hHat_3_1_1*Vars.rhOverM_coeff*Vars.v
    Asymm = 0
    modes[9] = (Symm + Asymm)[0]
    modes[7] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (3, +/- 3)
    Symm = Cons.hHat_3_3_1*Vars.rhOverM_coeff*Vars.v
    Asymm = 0
    modes[11] = (Symm + Asymm)[0]
    modes[5] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (4, +/- 0)
    Symm = Cons.hHat_4_0_0*Vars.rhOverM_coeff
    Asymm = 0
    modes[16] = (Symm + Asymm)[0]
    # (ell, m) = (6, +/- 0)
    Symm = Cons.hHat_6_0_0*Vars.rhOverM_coeff
    Asymm = 0
    modes[38] = (Symm + Asymm)[0]
    # (ell, m) = (8, +/- 0)
    Symm = Cons.hHat_8_0_0*Vars.rhOverM_coeff
    Asymm = 0
    modes[68] = (Symm + Asymm)[0]

@njit(cache=True)
def Recalculate_1p0(Cons,Vars,y):
    Vars.v = np.array([y[0]])
    Vars.rfrak_chi1 = np.array([y[1],y[2]])
    Vars.rfrak_chi2 = np.array([y[3],y[4]])
    Vars.R = y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat
    Vars.R_S1 = exp(Vars.rfrak_chi1[0]*Cons.xHat + Vars.rfrak_chi1[1]*Cons.yHat)
    Vars.R_S2 = exp(Vars.rfrak_chi2[0]*Cons.xHat + Vars.rfrak_chi2[1]*Cons.yHat)
    Vars.chiVec1 = mul(mul(conjugate(normalized(y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat)),mul(mul(mul(Cons.S_chi1,Vars.R_S1),Cons.zHat),mul(conjugate(Vars.R_S1),conjugate(Cons.S_chi1)))),normalized(y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat))
    Vars.chiVec2 = mul(mul(conjugate(normalized(y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat)),mul(mul(mul(Cons.S_chi2,Vars.R_S2),Cons.zHat),mul(conjugate(Vars.R_S2),conjugate(Cons.S_chi2)))),normalized(y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat))
    Vars.chi1_n = np.array([Vars.chiVec1[1]])
    Vars.chi1_lambda = np.array([Vars.chiVec1[2]])
    Vars.chi1_ell = np.array([Vars.chiVec1[3]])
    Vars.chi2_n = np.array([Vars.chiVec2[1]])
    Vars.chi2_lambda = np.array([Vars.chiVec2[2]])
    Vars.chi2_ell = np.array([Vars.chiVec2[3]])
    Vars.Sigma_ell = Cons.M*(-Cons.M1*Vars.chi1_ell + Cons.M2*Vars.chi2_ell)
    Vars.Sigma_n = Cons.M*(-Cons.M1*Vars.chi1_n + Cons.M2*Vars.chi2_n)
    Vars.Sigma_lambda = Cons.M*(-Cons.M1*Vars.chi1_lambda + Cons.M2*Vars.chi2_lambda)
    Vars.rhOverM_coeff = -8*sqrt(5)*Cons.nu*Vars.v**2*sqrt(pi)/5
    Vars.hHat_spin_Symm_2_1_2 = I*Vars.Sigma_ell/(2*Cons.M**2)
    Vars.hHat_spin_Asymm_2_2_2 = (-Vars.Sigma_lambda - I*Vars.Sigma_n)/(2*Cons.M**2)
    Vars.hHat_spin_Asymm_2_0_2 = sqrt(6)*I*Vars.Sigma_n/(6*Cons.M**2)

@njit(cache=True)
def Modes_1p0(modes,Cons,Vars):
    # (ell, m) = (2, +/- 0)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_2_0_0 + Cons.hHat_2_0_2*Vars.v**2)
    Asymm = Vars.hHat_spin_Asymm_2_0_2*Vars.rhOverM_coeff*Vars.v**2
    modes[2] = (Symm + Asymm)[0]
    # (ell, m) = (2, +/- 1)
    Symm = Vars.rhOverM_coeff*Vars.v*(Cons.hHat_2_1_1 + Vars.hHat_spin_Symm_2_1_2*Vars.v)
    Asymm = 0
    modes[3] = (Symm + Asymm)[0]
    modes[1] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (2, +/- 2)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_2_2_0 + Cons.hHat_2_2_2*Vars.v**2)
    Asymm = Vars.hHat_spin_Asymm_2_2_2*Vars.rhOverM_coeff*Vars.v**2
    modes[4] = (Symm + Asymm)[0]
    modes[0] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (3, +/- 1)
    Symm = Cons.hHat_3_1_1*Vars.rhOverM_coeff*Vars.v
    Asymm = 0
    modes[9] = (Symm + Asymm)[0]
    modes[7] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (3, +/- 2)
    Symm = Cons.hHat_3_2_2*Vars.rhOverM_coeff*Vars.v**2
    Asymm = 0
    modes[10] = (Symm + Asymm)[0]
    modes[6] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (3, +/- 3)
    Symm = Cons.hHat_3_3_1*Vars.rhOverM_coeff*Vars.v
    Asymm = 0
    modes[11] = (Symm + Asymm)[0]
    modes[5] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (4, +/- 0)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_4_0_0 + Cons.hHat_4_0_2*Vars.v**2)
    Asymm = 0
    modes[16] = (Symm + Asymm)[0]
    # (ell, m) = (4, +/- 2)
    Symm = Cons.hHat_4_2_2*Vars.rhOverM_coeff*Vars.v**2
    Asymm = 0
    modes[18] = (Symm + Asymm)[0]
    modes[14] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (4, +/- 4)
    Symm = Cons.hHat_4_4_2*Vars.rhOverM_coeff*Vars.v**2
    Asymm = 0
    modes[20] = (Symm + Asymm)[0]
    modes[12] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (6, +/- 0)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_6_0_0 + Cons.hHat_6_0_2*Vars.v**2)
    Asymm = 0
    modes[38] = (Symm + Asymm)[0]
    # (ell, m) = (8, +/- 0)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_8_0_0 + Cons.hHat_8_0_2*Vars.v**2)
    Asymm = 0
    modes[68] = (Symm + Asymm)[0]

@njit(cache=True)
def Recalculate_1p5(Cons,Vars,y):
    Vars.v = np.array([y[0]])
    Vars.rfrak_chi1 = np.array([y[1],y[2]])
    Vars.rfrak_chi2 = np.array([y[3],y[4]])
    Vars.R = y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat
    Vars.R_S1 = exp(Vars.rfrak_chi1[0]*Cons.xHat + Vars.rfrak_chi1[1]*Cons.yHat)
    Vars.R_S2 = exp(Vars.rfrak_chi2[0]*Cons.xHat + Vars.rfrak_chi2[1]*Cons.yHat)
    Vars.chiVec1 = mul(mul(conjugate(normalized(y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat)),mul(mul(mul(Cons.S_chi1,Vars.R_S1),Cons.zHat),mul(conjugate(Vars.R_S1),conjugate(Cons.S_chi1)))),normalized(y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat))
    Vars.chiVec2 = mul(mul(conjugate(normalized(y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat)),mul(mul(mul(Cons.S_chi2,Vars.R_S2),Cons.zHat),mul(conjugate(Vars.R_S2),conjugate(Cons.S_chi2)))),normalized(y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat))
    Vars.chi1_n = np.array([Vars.chiVec1[1]])
    Vars.chi1_lambda = np.array([Vars.chiVec1[2]])
    Vars.chi1_ell = np.array([Vars.chiVec1[3]])
    Vars.chi2_n = np.array([Vars.chiVec2[1]])
    Vars.chi2_lambda = np.array([Vars.chiVec2[2]])
    Vars.chi2_ell = np.array([Vars.chiVec2[3]])
    Vars.S_ell = Cons.M1**2*Vars.chi1_ell + Cons.M2**2*Vars.chi2_ell
    Vars.S_n = Cons.M1**2*Vars.chi1_n + Cons.M2**2*Vars.chi2_n
    Vars.S_lambda = Cons.M1**2*Vars.chi1_lambda + Cons.M2**2*Vars.chi2_lambda
    Vars.Sigma_ell = Cons.M*(-Cons.M1*Vars.chi1_ell + Cons.M2*Vars.chi2_ell)
    Vars.Sigma_n = Cons.M*(-Cons.M1*Vars.chi1_n + Cons.M2*Vars.chi2_n)
    Vars.Sigma_lambda = Cons.M*(-Cons.M1*Vars.chi1_lambda + Cons.M2*Vars.chi2_lambda)
    Vars.rhOverM_coeff = -8*sqrt(5)*Cons.nu*Vars.v**2*sqrt(pi)/5
    Vars.hHat_spin_Symm_2_2_3 = (-6*Vars.S_ell - 2*Vars.Sigma_ell*Cons.delta)/(3*Cons.M**2) + 0.0*I
    Vars.hHat_spin_Symm_2_1_2 = I*Vars.Sigma_ell/(2*Cons.M**2)
    Vars.hHat_spin_Symm_2_0_3 = -0.347760353971534*sqrt(5)*Vars.S_ell/Cons.M**2 - 0.170755767555554*sqrt(5)*Vars.Sigma_ell*Cons.delta/Cons.M**2 + 0.0*I
    Vars.hHat_spin_Symm_3_2_3 = 2*sqrt(35)*(Vars.S_ell + Vars.Sigma_ell*Cons.delta)/(21*Cons.M**2) + 0.0*I
    Vars.hHat_spin_Symm_4_0_3 = -sqrt(2)*(5*Vars.S_ell/(21*Cons.M**2) + 19*Vars.Sigma_ell*Cons.delta/(112*Cons.M**2))/24 + 0.0*I
    Vars.hHat_spin_Asymm_2_2_2 = (-Vars.Sigma_lambda - I*Vars.Sigma_n)/(2*Cons.M**2)
    Vars.hHat_spin_Asymm_2_1_3 = 0.139508928571429*Cons.delta*(-I*Vars.Sigma_lambda + Vars.Sigma_n)/Cons.M**2 + 0.000543375553080522*sqrt(30)*(-61*I*Vars.S_lambda + 61*Vars.S_n)/Cons.M**2 + (4*I*Vars.S_lambda + 25*Vars.S_n + 4*I*Vars.Sigma_lambda*Cons.delta + 13*Vars.Sigma_n*Cons.delta)/(6*Cons.M**2)
    Vars.hHat_spin_Asymm_2_0_2 = sqrt(6)*I*Vars.Sigma_n/(6*Cons.M**2)
    Vars.hHat_spin_Asymm_3_3_3 = sqrt(210)*I*(Vars.S_lambda + I*Vars.S_n + Cons.delta*(Vars.Sigma_lambda + I*Vars.Sigma_n))/(21*Cons.M**2)
    Vars.hHat_spin_Asymm_3_1_3 = sqrt(14)*(I*Vars.S_lambda + Vars.S_n + Cons.delta*(I*Vars.Sigma_lambda + Vars.Sigma_n))/(21*Cons.M**2)
    Vars.hHat_spin_Asymm_4_1_3 = -sqrt(2)*(-17*sqrt(5)*Cons.delta*(-I*Vars.Sigma_lambda + Vars.Sigma_n)/(420*Cons.M**2) - sqrt(5)*(-13*I*Vars.S_lambda + 13*Vars.S_n)/(280*Cons.M**2))/24

@njit(cache=True)
def Modes_1p5(modes,Cons,Vars):
    # (ell, m) = (2, +/- 0)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_2_0_0 + Vars.v**2*(Cons.hHat_2_0_2 + Vars.hHat_spin_Symm_2_0_3*Vars.v))
    Asymm = Vars.hHat_spin_Asymm_2_0_2*Vars.rhOverM_coeff*Vars.v**2
    modes[2] = (Symm + Asymm)[0]
    # (ell, m) = (2, +/- 1)
    Symm = Vars.rhOverM_coeff*Vars.v*(Cons.hHat_2_1_1 + Vars.v*(Cons.hHat_2_1_3*Vars.v + Vars.hHat_spin_Symm_2_1_2))
    Asymm = Vars.hHat_spin_Asymm_2_1_3*Vars.rhOverM_coeff*Vars.v**3
    modes[3] = (Symm + Asymm)[0]
    modes[1] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (2, +/- 2)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_2_2_0 + Vars.v**2*(Cons.hHat_2_2_2 + Vars.v*(Cons.hHat_2_2_3 + Vars.hHat_spin_Symm_2_2_3)))
    Asymm = Vars.hHat_spin_Asymm_2_2_2*Vars.rhOverM_coeff*Vars.v**2
    modes[4] = (Symm + Asymm)[0]
    modes[0] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (3, +/- 1)
    Symm = Vars.rhOverM_coeff*Vars.v*(Cons.hHat_3_1_1 + Cons.hHat_3_1_3*Vars.v**2)
    Asymm = Vars.hHat_spin_Asymm_3_1_3*Vars.rhOverM_coeff*Vars.v**3
    modes[9] = (Symm + Asymm)[0]
    modes[7] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (3, +/- 2)
    Symm = Vars.rhOverM_coeff*Vars.v**2*(Cons.hHat_3_2_2 + Vars.hHat_spin_Symm_3_2_3*Vars.v)
    Asymm = 0
    modes[10] = (Symm + Asymm)[0]
    modes[6] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (3, +/- 3)
    Symm = Vars.rhOverM_coeff*Vars.v*(Cons.hHat_3_3_1 + Cons.hHat_3_3_3*Vars.v**2)
    Asymm = Vars.hHat_spin_Asymm_3_3_3*Vars.rhOverM_coeff*Vars.v**3
    modes[11] = (Symm + Asymm)[0]
    modes[5] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (4, +/- 0)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_4_0_0 + Vars.v**2*(Cons.hHat_4_0_2 + Vars.hHat_spin_Symm_4_0_3*Vars.v))
    Asymm = 0
    modes[16] = (Symm + Asymm)[0]
    # (ell, m) = (4, +/- 1)
    Symm = Cons.hHat_4_1_3*Vars.rhOverM_coeff*Vars.v**3
    Asymm = Vars.hHat_spin_Asymm_4_1_3*Vars.rhOverM_coeff*Vars.v**3
    modes[17] = (Symm + Asymm)[0]
    modes[15] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (4, +/- 2)
    Symm = Cons.hHat_4_2_2*Vars.rhOverM_coeff*Vars.v**2
    Asymm = 0
    modes[18] = (Symm + Asymm)[0]
    modes[14] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (4, +/- 3)
    Symm = Cons.hHat_4_3_3*Vars.rhOverM_coeff*Vars.v**3
    Asymm = 0
    modes[19] = (Symm + Asymm)[0]
    modes[13] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (4, +/- 4)
    Symm = Cons.hHat_4_4_2*Vars.rhOverM_coeff*Vars.v**2
    Asymm = 0
    modes[20] = (Symm + Asymm)[0]
    modes[12] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (5, +/- 1)
    Symm = Cons.hHat_5_1_3*Vars.rhOverM_coeff*Vars.v**3
    Asymm = 0
    modes[27] = (Symm + Asymm)[0]
    modes[25] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (5, +/- 3)
    Symm = Cons.hHat_5_3_3*Vars.rhOverM_coeff*Vars.v**3
    Asymm = 0
    modes[29] = (Symm + Asymm)[0]
    modes[23] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (5, +/- 5)
    Symm = Cons.hHat_5_5_3*Vars.rhOverM_coeff*Vars.v**3
    Asymm = 0
    modes[31] = (Symm + Asymm)[0]
    modes[21] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (6, +/- 0)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_6_0_0 + Cons.hHat_6_0_2*Vars.v**2)
    Asymm = 0
    modes[38] = (Symm + Asymm)[0]
    # (ell, m) = (8, +/- 0)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_8_0_0 + Cons.hHat_8_0_2*Vars.v**2)
    Asymm = 0
    modes[68] = (Symm + Asymm)[0]

@njit(cache=True)
def Recalculate_2p0(Cons,Vars,y):
    Vars.v = np.array([y[0]])
    Vars.rfrak_chi1 = np.array([y[1],y[2]])
    Vars.rfrak_chi2 = np.array([y[3],y[4]])
    Vars.R = y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat
    Vars.R_S1 = exp(Vars.rfrak_chi1[0]*Cons.xHat + Vars.rfrak_chi1[1]*Cons.yHat)
    Vars.R_S2 = exp(Vars.rfrak_chi2[0]*Cons.xHat + Vars.rfrak_chi2[1]*Cons.yHat)
    Vars.chiVec1 = mul(mul(conjugate(normalized(y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat)),mul(mul(mul(Cons.S_chi1,Vars.R_S1),Cons.zHat),mul(conjugate(Vars.R_S1),conjugate(Cons.S_chi1)))),normalized(y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat))
    Vars.chiVec2 = mul(mul(conjugate(normalized(y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat)),mul(mul(mul(Cons.S_chi2,Vars.R_S2),Cons.zHat),mul(conjugate(Vars.R_S2),conjugate(Cons.S_chi2)))),normalized(y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat))
    Vars.chi1_n = np.array([Vars.chiVec1[1]])
    Vars.chi1_lambda = np.array([Vars.chiVec1[2]])
    Vars.chi1_ell = np.array([Vars.chiVec1[3]])
    Vars.chi2_n = np.array([Vars.chiVec2[1]])
    Vars.chi2_lambda = np.array([Vars.chiVec2[2]])
    Vars.chi2_ell = np.array([Vars.chiVec2[3]])
    Vars.S_ell = Cons.M1**2*Vars.chi1_ell + Cons.M2**2*Vars.chi2_ell
    Vars.S_n = Cons.M1**2*Vars.chi1_n + Cons.M2**2*Vars.chi2_n
    Vars.S_lambda = Cons.M1**2*Vars.chi1_lambda + Cons.M2**2*Vars.chi2_lambda
    Vars.Sigma_ell = Cons.M*(-Cons.M1*Vars.chi1_ell + Cons.M2*Vars.chi2_ell)
    Vars.Sigma_n = Cons.M*(-Cons.M1*Vars.chi1_n + Cons.M2*Vars.chi2_n)
    Vars.Sigma_lambda = Cons.M*(-Cons.M1*Vars.chi1_lambda + Cons.M2*Vars.chi2_lambda)
    Vars.rhOverM_coeff = -8*sqrt(5)*Cons.nu*Vars.v**2*sqrt(pi)/5
    Vars.hHat_spin_Symm_2_2_3 = (-6*Vars.S_ell - 2*Vars.Sigma_ell*Cons.delta)/(3*Cons.M**2) + 0.0*I
    Vars.hHat_spin_Symm_2_2_4 = -(-336*Vars.S_ell**2 - 336*Vars.S_ell*Vars.Sigma_ell*Cons.delta - 280*Vars.S_lambda**2 + 840*I*Vars.S_lambda*Vars.S_n + 616*Vars.S_n**2 + 14*Cons.delta*(-6*Vars.Sigma_ell**2*Cons.delta - 5*Vars.Sigma_lambda**2*Cons.delta + 5*I*Vars.Sigma_lambda*(4*I*Vars.S_lambda + 6*Vars.S_n + 3*Vars.Sigma_n*Cons.delta) + Vars.Sigma_n*(30*I*Vars.S_lambda + 44*Vars.S_n + 11*Vars.Sigma_n*Cons.delta)))/(4*84**Cons.M)
    Vars.hHat_spin_Symm_2_1_2 = I*Vars.Sigma_ell/(2*Cons.M**2)
    Vars.hHat_spin_Symm_2_1_4 = -I*(86*Vars.S_ell*Cons.delta + Vars.Sigma_ell*(79 - 139*Cons.nu))/(42*Cons.M**2)
    Vars.hHat_spin_Symm_2_0_3 = -0.347760353971534*sqrt(5)*Vars.S_ell/Cons.M**2 - 0.170755767555554*sqrt(5)*Vars.Sigma_ell*Cons.delta/Cons.M**2 + 0.0*I
    Vars.hHat_spin_Symm_2_0_4 = 0.0869400884928835*sqrt(5)*Cons.delta*(3*Vars.S_ell*Vars.Sigma_ell + Vars.S_lambda*Vars.Sigma_lambda + Vars.S_n*Vars.Sigma_n)/Cons.M**4 - 0.0869400884928835*sqrt(5)*Cons.nu*(3*Vars.Sigma_ell**2 + Vars.Sigma_lambda**2 + Vars.Sigma_n**2)/Cons.M**4 + sqrt(6)*(-42*Vars.S_lambda + 42*Vars.S_n - 21*Cons.delta*(Vars.Sigma_lambda - Vars.Sigma_n))*(2*Vars.S_lambda + 2*Vars.S_n + Cons.delta*(Vars.Sigma_lambda + Vars.Sigma_n))/(126*Cons.M**4) + 0.000679219441350652*sqrt(5)*(384*Vars.S_ell**2 + 128*Vars.S_lambda**2 + 128*Vars.S_n**2 + 99*Vars.Sigma_ell**2 + 24*Vars.Sigma_lambda**2 + 24*Vars.Sigma_n**2)/Cons.M**4 + 0.0*I
    Vars.hHat_spin_Symm_3_3_4 = 3*sqrt(210)*I*(7*Vars.S_ell*Cons.delta - 3*Vars.Sigma_ell*(3*Cons.nu - 1))/(112*Cons.M**2)
    Vars.hHat_spin_Symm_3_2_3 = 2*sqrt(35)*(Vars.S_ell + Vars.Sigma_ell*Cons.delta)/(21*Cons.M**2) + 0.0*I
    Vars.hHat_spin_Symm_3_1_4 = sqrt(14)*I*(Vars.S_ell*Cons.delta - 5*Vars.Sigma_ell*(3*Cons.nu - 1))/(336*Cons.M**2)
    Vars.hHat_spin_Symm_4_3_4 = 9*sqrt(70)*I*(-Vars.S_ell*Cons.delta + 3*Vars.Sigma_ell*Cons.nu - Vars.Sigma_ell)/(112*Cons.M**2)
    Vars.hHat_spin_Symm_4_1_4 = sqrt(10)*I*(Vars.S_ell*Cons.delta - 3*Vars.Sigma_ell*Cons.nu + Vars.Sigma_ell)/(336*Cons.M**2)
    Vars.hHat_spin_Symm_4_0_3 = -sqrt(2)*(5*Vars.S_ell/(21*Cons.M**2) + 19*Vars.Sigma_ell*Cons.delta/(112*Cons.M**2))/24 + 0.0*I
    Vars.hHat_spin_Symm_4_0_4 = -sqrt(2)*(-2*Cons.delta*(3*Vars.S_ell*Vars.Sigma_ell + Vars.S_lambda*Vars.Sigma_lambda + Vars.S_n*Vars.Sigma_n)/(63*Cons.M**4) + Cons.nu*(6*Vars.Sigma_ell**2 + 2*Vars.Sigma_lambda**2 + 2*Vars.Sigma_n**2)/(63*Cons.M**4) + (-192*Vars.S_ell**2 - 64*Vars.S_lambda**2 - 64*Vars.S_n**2 - 53*Vars.Sigma_ell**2 - 12*Vars.Sigma_lambda**2 - 12*Vars.Sigma_n**2)/(2016*Cons.M**4))/24 + 0.0*I
    Vars.hHat_spin_Asymm_2_2_2 = (-Vars.Sigma_lambda - I*Vars.Sigma_n)/(2*Cons.M**2)
    Vars.hHat_spin_Asymm_2_2_4 = -(-19*Cons.M**2*Vars.S_lambda*Cons.delta - 182*I*Cons.M**2*Vars.S_n*Cons.delta + Cons.M**2*Vars.Sigma_lambda*(43*Cons.nu - 5) + 14*I*Cons.M**2*Vars.Sigma_n*(20*Cons.nu - 7))/(4*84**Cons.M)
    Vars.hHat_spin_Asymm_2_1_3 = 0.139508928571429*Cons.delta*(-I*Vars.Sigma_lambda + Vars.Sigma_n)/Cons.M**2 + 0.000543375553080522*sqrt(30)*(-61*I*Vars.S_lambda + 61*Vars.S_n)/Cons.M**2 + (4*I*Vars.S_lambda + 25*Vars.S_n + 4*I*Vars.Sigma_lambda*Cons.delta + 13*Vars.Sigma_n*Cons.delta)/(6*Cons.M**2)
    Vars.hHat_spin_Asymm_2_1_4 = 0.0892857142857143*Vars.Sigma_ell*Cons.nu*(-I*Vars.Sigma_lambda + Vars.Sigma_n)/Cons.M**4 - 0.0446428571428571*Cons.delta*(Vars.S_ell*(-I*Vars.Sigma_lambda + Vars.Sigma_n) + Vars.Sigma_ell*(-I*Vars.S_lambda + Vars.S_n))/Cons.M**4 - (126*Vars.S_ell + 63*Vars.Sigma_ell*Cons.delta)*(2*Vars.S_n + Vars.Sigma_n*Cons.delta)/(42*Cons.M**4) - 0.0326025331848313*(2.73861278752583*Vars.S_ell*(-I*Vars.S_lambda + Vars.S_n) + 0.912870929175277*Vars.Sigma_ell*(-I*Vars.Sigma_lambda + Vars.Sigma_n))/Cons.M**4
    Vars.hHat_spin_Asymm_2_0_2 = sqrt(6)*I*Vars.Sigma_n/(6*Cons.M**2)
    Vars.hHat_spin_Asymm_2_0_4 = sqrt(6)*(255*I*Cons.M**2*Vars.S_n*Cons.delta + I*Cons.M**2*Vars.Sigma_n*(45 - 506*Cons.nu))/(126*Cons.M**4)
    Vars.hHat_spin_Asymm_3_3_3 = sqrt(210)*I*(Vars.S_lambda + I*Vars.S_n + Cons.delta*(Vars.Sigma_lambda + I*Vars.Sigma_n))/(21*Cons.M**2)
    Vars.hHat_spin_Asymm_3_2_4 = sqrt(35)*(-Vars.Sigma_lambda*(83*Cons.nu - 17) + 4*I*Vars.Sigma_n*(55*Cons.nu - 13) + 25*Cons.delta*(Vars.S_lambda - 4*I*Vars.S_n))/(168*Cons.M**2)
    Vars.hHat_spin_Asymm_3_1_3 = sqrt(14)*(I*Vars.S_lambda + Vars.S_n + Cons.delta*(I*Vars.Sigma_lambda + Vars.Sigma_n))/(21*Cons.M**2)
    Vars.hHat_spin_Asymm_3_0_4 = sqrt(42)*(-17*Vars.S_lambda*Cons.delta + Vars.Sigma_lambda*(35*Cons.nu - 9))/(168*Cons.M**2) + 0.0*I
    Vars.hHat_spin_Asymm_4_4_4 = 9*sqrt(35)*(-3*Vars.Sigma_lambda*Cons.nu + Vars.Sigma_lambda - I*Vars.Sigma_n*(3*Cons.nu - 1) + Cons.delta*(Vars.S_lambda + I*Vars.S_n))/(56*Cons.M**2)
    Vars.hHat_spin_Asymm_4_2_4 = sqrt(5)*(-13*Vars.Sigma_lambda*(3*Cons.nu - 1) + 14*I*Vars.Sigma_n*(3*Cons.nu - 1) + Cons.delta*(13*Vars.S_lambda - 14*I*Vars.S_n))/(168*Cons.M**2)
    Vars.hHat_spin_Asymm_4_1_3 = -sqrt(2)*(-17*sqrt(5)*Cons.delta*(-I*Vars.Sigma_lambda + Vars.Sigma_n)/(420*Cons.M**2) - sqrt(5)*(-13*I*Vars.S_lambda + 13*Vars.S_n)/(280*Cons.M**2))/24
    Vars.hHat_spin_Asymm_4_1_4 = -sqrt(2)*(-sqrt(5)*Vars.Sigma_ell*Cons.nu*(-I*Vars.Sigma_lambda + Vars.Sigma_n)/(84*Cons.M**4) + sqrt(5)*Cons.delta*(Vars.S_ell*(-I*Vars.Sigma_lambda + Vars.Sigma_n) + Vars.Sigma_ell*(-I*Vars.S_lambda + Vars.S_n))/(168*Cons.M**4) + sqrt(5)*(3*Vars.S_ell*(-I*Vars.S_lambda + Vars.S_n) + Vars.Sigma_ell*(-I*Vars.Sigma_lambda + Vars.Sigma_n))/(252*Cons.M**4))/24
    Vars.hHat_spin_Asymm_4_0_4 = sqrt(2)*I*(Vars.S_n*Cons.delta - 3*Vars.Sigma_n*Cons.nu + Vars.Sigma_n)/(168*Cons.M**2)

@njit(cache=True)
def Modes_2p0(modes,Cons,Vars):
    # (ell, m) = (2, +/- 0)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_2_0_0 + Vars.v**2*(Cons.hHat_2_0_2 + Vars.v*(Vars.hHat_spin_Symm_2_0_3 + Vars.v*(Cons.hHat_2_0_4 + Vars.hHat_spin_Symm_2_0_4))))
    Asymm = Vars.rhOverM_coeff*Vars.v**2*(Vars.hHat_spin_Asymm_2_0_2 + Vars.hHat_spin_Asymm_2_0_4*Vars.v**2)
    modes[2] = (Symm + Asymm)[0]
    # (ell, m) = (2, +/- 1)
    Symm = Vars.rhOverM_coeff*Vars.v*(Cons.hHat_2_1_1 + Vars.v*(Vars.hHat_spin_Symm_2_1_2 + Vars.v*(Cons.hHat_2_1_3 + Vars.v*(Cons.hHat_2_1_4 + Vars.hHat_spin_Symm_2_1_4))))
    Asymm = Vars.rhOverM_coeff*Vars.v**3*(Vars.hHat_spin_Asymm_2_1_3 + Vars.hHat_spin_Asymm_2_1_4*Vars.v)
    modes[3] = (Symm + Asymm)[0]
    modes[1] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (2, +/- 2)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_2_2_0 + Vars.v**2*(Cons.hHat_2_2_2 + Vars.v*(Cons.hHat_2_2_3 + Vars.hHat_spin_Symm_2_2_3 + Vars.v*(Cons.hHat_2_2_4 + Vars.hHat_spin_Symm_2_2_4))))
    Asymm = Vars.rhOverM_coeff*Vars.v**2*(Vars.hHat_spin_Asymm_2_2_2 + Vars.hHat_spin_Asymm_2_2_4*Vars.v**2)
    modes[4] = (Symm + Asymm)[0]
    modes[0] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (3, +/- 0)
    Symm = 0
    Asymm = Vars.hHat_spin_Asymm_3_0_4*Vars.rhOverM_coeff*Vars.v**4
    modes[8] = (Symm + Asymm)[0]
    # (ell, m) = (3, +/- 1)
    Symm = Vars.rhOverM_coeff*Vars.v*(Cons.hHat_3_1_1 + Vars.v**2*(Cons.hHat_3_1_3 + Vars.v*(Cons.hHat_3_1_4 + Vars.hHat_spin_Symm_3_1_4)))
    Asymm = Vars.hHat_spin_Asymm_3_1_3*Vars.rhOverM_coeff*Vars.v**3
    modes[9] = (Symm + Asymm)[0]
    modes[7] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (3, +/- 2)
    Symm = Vars.rhOverM_coeff*Vars.v**2*(Cons.hHat_3_2_2 + Vars.v*(Cons.hHat_3_2_4*Vars.v + Vars.hHat_spin_Symm_3_2_3))
    Asymm = Vars.hHat_spin_Asymm_3_2_4*Vars.rhOverM_coeff*Vars.v**4
    modes[10] = (Symm + Asymm)[0]
    modes[6] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (3, +/- 3)
    Symm = Vars.rhOverM_coeff*Vars.v*(Cons.hHat_3_3_1 + Vars.v**2*(Cons.hHat_3_3_3 + Vars.v*(Cons.hHat_3_3_4 + Vars.hHat_spin_Symm_3_3_4)))
    Asymm = Vars.hHat_spin_Asymm_3_3_3*Vars.rhOverM_coeff*Vars.v**3
    modes[11] = (Symm + Asymm)[0]
    modes[5] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (4, +/- 0)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_4_0_0 + Vars.v**2*(Cons.hHat_4_0_2 + Vars.v*(Vars.hHat_spin_Symm_4_0_3 + Vars.v*(Cons.hHat_4_0_4 + Vars.hHat_spin_Symm_4_0_4))))
    Asymm = Vars.hHat_spin_Asymm_4_0_4*Vars.rhOverM_coeff*Vars.v**4
    modes[16] = (Symm + Asymm)[0]
    # (ell, m) = (4, +/- 1)
    Symm = Vars.rhOverM_coeff*Vars.v**3*(Cons.hHat_4_1_3 + Vars.hHat_spin_Symm_4_1_4*Vars.v)
    Asymm = Vars.rhOverM_coeff*Vars.v**3*(Vars.hHat_spin_Asymm_4_1_3 + Vars.hHat_spin_Asymm_4_1_4*Vars.v)
    modes[17] = (Symm + Asymm)[0]
    modes[15] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (4, +/- 2)
    Symm = Vars.rhOverM_coeff*Vars.v**2*(Cons.hHat_4_2_2 + Cons.hHat_4_2_4*Vars.v**2)
    Asymm = Vars.hHat_spin_Asymm_4_2_4*Vars.rhOverM_coeff*Vars.v**4
    modes[18] = (Symm + Asymm)[0]
    modes[14] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (4, +/- 3)
    Symm = Vars.rhOverM_coeff*Vars.v**3*(Cons.hHat_4_3_3 + Vars.hHat_spin_Symm_4_3_4*Vars.v)
    Asymm = 0
    modes[19] = (Symm + Asymm)[0]
    modes[13] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (4, +/- 4)
    Symm = Vars.rhOverM_coeff*Vars.v**2*(Cons.hHat_4_4_2 + Cons.hHat_4_4_4*Vars.v**2)
    Asymm = Vars.hHat_spin_Asymm_4_4_4*Vars.rhOverM_coeff*Vars.v**4
    modes[20] = (Symm + Asymm)[0]
    modes[12] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (5, +/- 1)
    Symm = Cons.hHat_5_1_3*Vars.rhOverM_coeff*Vars.v**3
    Asymm = 0
    modes[27] = (Symm + Asymm)[0]
    modes[25] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (5, +/- 2)
    Symm = Cons.hHat_5_2_4*Vars.rhOverM_coeff*Vars.v**4
    Asymm = 0
    modes[28] = (Symm + Asymm)[0]
    modes[24] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (5, +/- 3)
    Symm = Cons.hHat_5_3_3*Vars.rhOverM_coeff*Vars.v**3
    Asymm = 0
    modes[29] = (Symm + Asymm)[0]
    modes[23] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (5, +/- 4)
    Symm = Cons.hHat_5_4_4*Vars.rhOverM_coeff*Vars.v**4
    Asymm = 0
    modes[30] = (Symm + Asymm)[0]
    modes[22] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (5, +/- 5)
    Symm = Cons.hHat_5_5_3*Vars.rhOverM_coeff*Vars.v**3
    Asymm = 0
    modes[31] = (Symm + Asymm)[0]
    modes[21] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (6, +/- 0)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_6_0_0 + Vars.v**2*(Cons.hHat_6_0_2 + Cons.hHat_6_0_4*Vars.v**2))
    Asymm = 0
    modes[38] = (Symm + Asymm)[0]
    # (ell, m) = (6, +/- 2)
    Symm = Cons.hHat_6_2_4*Vars.rhOverM_coeff*Vars.v**4
    Asymm = 0
    modes[40] = (Symm + Asymm)[0]
    modes[36] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (6, +/- 4)
    Symm = Cons.hHat_6_4_4*Vars.rhOverM_coeff*Vars.v**4
    Asymm = 0
    modes[42] = (Symm + Asymm)[0]
    modes[34] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (6, +/- 6)
    Symm = Cons.hHat_6_6_4*Vars.rhOverM_coeff*Vars.v**4
    Asymm = 0
    modes[44] = (Symm + Asymm)[0]
    modes[32] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (8, +/- 0)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_8_0_0 + Vars.v**2*(Cons.hHat_8_0_2 + Cons.hHat_8_0_4*Vars.v**2))
    Asymm = 0
    modes[68] = (Symm + Asymm)[0]

@njit(cache=True)
def Recalculate_2p5(Cons,Vars,y):
    Vars.v = np.array([y[0]])
    Vars.rfrak_chi1 = np.array([y[1],y[2]])
    Vars.rfrak_chi2 = np.array([y[3],y[4]])
    Vars.R = y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat
    Vars.R_S1 = exp(Vars.rfrak_chi1[0]*Cons.xHat + Vars.rfrak_chi1[1]*Cons.yHat)
    Vars.R_S2 = exp(Vars.rfrak_chi2[0]*Cons.xHat + Vars.rfrak_chi2[1]*Cons.yHat)
    Vars.chiVec1 = mul(mul(conjugate(normalized(y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat)),mul(mul(mul(Cons.S_chi1,Vars.R_S1),Cons.zHat),mul(conjugate(Vars.R_S1),conjugate(Cons.S_chi1)))),normalized(y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat))
    Vars.chiVec2 = mul(mul(conjugate(normalized(y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat)),mul(mul(mul(Cons.S_chi2,Vars.R_S2),Cons.zHat),mul(conjugate(Vars.R_S2),conjugate(Cons.S_chi2)))),normalized(y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat))
    Vars.chi1_n = np.array([Vars.chiVec1[1]])
    Vars.chi1_lambda = np.array([Vars.chiVec1[2]])
    Vars.chi1_ell = np.array([Vars.chiVec1[3]])
    Vars.chi2_n = np.array([Vars.chiVec2[1]])
    Vars.chi2_lambda = np.array([Vars.chiVec2[2]])
    Vars.chi2_ell = np.array([Vars.chiVec2[3]])
    Vars.S_ell = Cons.M1**2*Vars.chi1_ell + Cons.M2**2*Vars.chi2_ell
    Vars.S_n = Cons.M1**2*Vars.chi1_n + Cons.M2**2*Vars.chi2_n
    Vars.S_lambda = Cons.M1**2*Vars.chi1_lambda + Cons.M2**2*Vars.chi2_lambda
    Vars.Sigma_ell = Cons.M*(-Cons.M1*Vars.chi1_ell + Cons.M2*Vars.chi2_ell)
    Vars.Sigma_n = Cons.M*(-Cons.M1*Vars.chi1_n + Cons.M2*Vars.chi2_n)
    Vars.Sigma_lambda = Cons.M*(-Cons.M1*Vars.chi1_lambda + Cons.M2*Vars.chi2_lambda)
    Vars.rhOverM_coeff = -8*sqrt(5)*Cons.nu*Vars.v**2*sqrt(pi)/5
    Vars.hHat_spin_Symm_2_2_3 = (-6*Vars.S_ell - 2*Vars.Sigma_ell*Cons.delta)/(3*Cons.M**2) + 0.0*I
    Vars.hHat_spin_Symm_2_2_4 = -(-336*Vars.S_ell**2 - 336*Vars.S_ell*Vars.Sigma_ell*Cons.delta - 280*Vars.S_lambda**2 + 840*I*Vars.S_lambda*Vars.S_n + 616*Vars.S_n**2 + 14*Cons.delta*(-6*Vars.Sigma_ell**2*Cons.delta - 5*Vars.Sigma_lambda**2*Cons.delta + 5*I*Vars.Sigma_lambda*(4*I*Vars.S_lambda + 6*Vars.S_n + 3*Vars.Sigma_n*Cons.delta) + Vars.Sigma_n*(30*I*Vars.S_lambda + 44*Vars.S_n + 11*Vars.Sigma_n*Cons.delta)))/(4*84**Cons.M)
    Vars.hHat_spin_Symm_2_1_2 = I*Vars.Sigma_ell/(2*Cons.M**2)
    Vars.hHat_spin_Symm_2_1_4 = -I*(86*Vars.S_ell*Cons.delta + Vars.Sigma_ell*(79 - 139*Cons.nu))/(42*Cons.M**2)
    Vars.hHat_spin_Symm_2_0_3 = -0.347760353971534*sqrt(5)*Vars.S_ell/Cons.M**2 - 0.170755767555554*sqrt(5)*Vars.Sigma_ell*Cons.delta/Cons.M**2 + 0.0*I
    Vars.hHat_spin_Symm_2_0_4 = 0.0869400884928835*sqrt(5)*Cons.delta*(3*Vars.S_ell*Vars.Sigma_ell + Vars.S_lambda*Vars.Sigma_lambda + Vars.S_n*Vars.Sigma_n)/Cons.M**4 - 0.0869400884928835*sqrt(5)*Cons.nu*(3*Vars.Sigma_ell**2 + Vars.Sigma_lambda**2 + Vars.Sigma_n**2)/Cons.M**4 + sqrt(6)*(-42*Vars.S_lambda + 42*Vars.S_n - 21*Cons.delta*(Vars.Sigma_lambda - Vars.Sigma_n))*(2*Vars.S_lambda + 2*Vars.S_n + Cons.delta*(Vars.Sigma_lambda + Vars.Sigma_n))/(126*Cons.M**4) + 0.000679219441350652*sqrt(5)*(384*Vars.S_ell**2 + 128*Vars.S_lambda**2 + 128*Vars.S_n**2 + 99*Vars.Sigma_ell**2 + 24*Vars.Sigma_lambda**2 + 24*Vars.Sigma_n**2)/Cons.M**4 + 0.0*I
    Vars.hHat_spin_Symm_2_0_5 = -0.228217732293819*Cons.nu*(319*sqrt(5)*Vars.S_ell/(882*Cons.M**2) + 1775*sqrt(5)*Vars.Sigma_ell*Cons.delta/(9408*Cons.M**2)) - 0.554061322885717*sqrt(5)*Vars.S_ell/Cons.M**2 - 0.083495186827972*sqrt(5)*Vars.Sigma_ell*Cons.delta/Cons.M**2 + 0.0*I
    Vars.hHat_spin_Symm_3_3_4 = 3*sqrt(210)*I*(7*Vars.S_ell*Cons.delta - 3*Vars.Sigma_ell*(3*Cons.nu - 1))/(112*Cons.M**2)
    Vars.hHat_spin_Symm_3_2_3 = 2*sqrt(35)*(Vars.S_ell + Vars.Sigma_ell*Cons.delta)/(21*Cons.M**2) + 0.0*I
    Vars.hHat_spin_Symm_3_1_4 = sqrt(14)*I*(Vars.S_ell*Cons.delta - 5*Vars.Sigma_ell*(3*Cons.nu - 1))/(336*Cons.M**2)
    Vars.hHat_spin_Symm_4_3_4 = 9*sqrt(70)*I*(-Vars.S_ell*Cons.delta + 3*Vars.Sigma_ell*Cons.nu - Vars.Sigma_ell)/(112*Cons.M**2)
    Vars.hHat_spin_Symm_4_1_4 = sqrt(10)*I*(Vars.S_ell*Cons.delta - 3*Vars.Sigma_ell*Cons.nu + Vars.Sigma_ell)/(336*Cons.M**2)
    Vars.hHat_spin_Symm_4_0_3 = -sqrt(2)*(5*Vars.S_ell/(21*Cons.M**2) + 19*Vars.Sigma_ell*Cons.delta/(112*Cons.M**2))/24 + 0.0*I
    Vars.hHat_spin_Symm_4_0_4 = -sqrt(2)*(-2*Cons.delta*(3*Vars.S_ell*Vars.Sigma_ell + Vars.S_lambda*Vars.Sigma_lambda + Vars.S_n*Vars.Sigma_n)/(63*Cons.M**4) + Cons.nu*(6*Vars.Sigma_ell**2 + 2*Vars.Sigma_lambda**2 + 2*Vars.Sigma_n**2)/(63*Cons.M**4) + (-192*Vars.S_ell**2 - 64*Vars.S_lambda**2 - 64*Vars.S_n**2 - 53*Vars.Sigma_ell**2 - 12*Vars.Sigma_lambda**2 - 12*Vars.Sigma_n**2)/(2016*Cons.M**4))/24 + 0.0*I
    Vars.hHat_spin_Symm_4_0_5 = -0.228217732293819*Cons.nu*(989419*Vars.S_ell/(232848*Cons.M**2) + 361055*Vars.Sigma_ell*Cons.delta/(155232*Cons.M**2)) + 0.197237323832325*Vars.S_ell/Cons.M**2 + 0.151042105850186*Vars.Sigma_ell*Cons.delta/Cons.M**2 + 0.0*I
    Vars.hHat_spin_Symm_6_0_5 = -0.228217732293819*Cons.nu*(19135*sqrt(13)*Vars.S_ell/(144144*Cons.M**2) + 16655*sqrt(13)*Vars.Sigma_ell*Cons.delta/(192192*Cons.M**2)) + 0.0070371288302107*sqrt(13)*Vars.S_ell/Cons.M**2 + 0.00575536978134986*sqrt(13)*Vars.Sigma_ell*Cons.delta/Cons.M**2 + 0.0*I
    Vars.hHat_spin_Asymm_2_2_2 = (-Vars.Sigma_lambda - I*Vars.Sigma_n)/(2*Cons.M**2)
    Vars.hHat_spin_Asymm_2_2_4 = -(-19*Cons.M**2*Vars.S_lambda*Cons.delta - 182*I*Cons.M**2*Vars.S_n*Cons.delta + Cons.M**2*Vars.Sigma_lambda*(43*Cons.nu - 5) + 14*I*Cons.M**2*Vars.Sigma_n*(20*Cons.nu - 7))/(4*84**Cons.M)
    Vars.hHat_spin_Asymm_2_1_3 = 0.139508928571429*Cons.delta*(-I*Vars.Sigma_lambda + Vars.Sigma_n)/Cons.M**2 + 0.000543375553080522*sqrt(30)*(-61*I*Vars.S_lambda + 61*Vars.S_n)/Cons.M**2 + (4*I*Vars.S_lambda + 25*Vars.S_n + 4*I*Vars.Sigma_lambda*Cons.delta + 13*Vars.Sigma_n*Cons.delta)/(6*Cons.M**2)
    Vars.hHat_spin_Asymm_2_1_4 = 0.0892857142857143*Vars.Sigma_ell*Cons.nu*(-I*Vars.Sigma_lambda + Vars.Sigma_n)/Cons.M**4 - 0.0446428571428571*Cons.delta*(Vars.S_ell*(-I*Vars.Sigma_lambda + Vars.Sigma_n) + Vars.Sigma_ell*(-I*Vars.S_lambda + Vars.S_n))/Cons.M**4 - (126*Vars.S_ell + 63*Vars.Sigma_ell*Cons.delta)*(2*Vars.S_n + Vars.Sigma_n*Cons.delta)/(42*Cons.M**4) - 0.0326025331848313*(2.73861278752583*Vars.S_ell*(-I*Vars.S_lambda + Vars.S_n) + 0.912870929175277*Vars.Sigma_ell*(-I*Vars.Sigma_lambda + Vars.Sigma_n))/Cons.M**4
    Vars.hHat_spin_Asymm_2_0_2 = sqrt(6)*I*Vars.Sigma_n/(6*Cons.M**2)
    Vars.hHat_spin_Asymm_2_0_4 = sqrt(6)*(255*I*Cons.M**2*Vars.S_n*Cons.delta + I*Cons.M**2*Vars.Sigma_n*(45 - 506*Cons.nu))/(126*Cons.M**4)
    Vars.hHat_spin_Asymm_3_3_3 = sqrt(210)*I*(Vars.S_lambda + I*Vars.S_n + Cons.delta*(Vars.Sigma_lambda + I*Vars.Sigma_n))/(21*Cons.M**2)
    Vars.hHat_spin_Asymm_3_2_4 = sqrt(35)*(-Vars.Sigma_lambda*(83*Cons.nu - 17) + 4*I*Vars.Sigma_n*(55*Cons.nu - 13) + 25*Cons.delta*(Vars.S_lambda - 4*I*Vars.S_n))/(168*Cons.M**2)
    Vars.hHat_spin_Asymm_3_1_3 = sqrt(14)*(I*Vars.S_lambda + Vars.S_n + Cons.delta*(I*Vars.Sigma_lambda + Vars.Sigma_n))/(21*Cons.M**2)
    Vars.hHat_spin_Asymm_3_0_4 = sqrt(42)*(-17*Vars.S_lambda*Cons.delta + Vars.Sigma_lambda*(35*Cons.nu - 9))/(168*Cons.M**2) + 0.0*I
    Vars.hHat_spin_Asymm_4_4_4 = 9*sqrt(35)*(-3*Vars.Sigma_lambda*Cons.nu + Vars.Sigma_lambda - I*Vars.Sigma_n*(3*Cons.nu - 1) + Cons.delta*(Vars.S_lambda + I*Vars.S_n))/(56*Cons.M**2)
    Vars.hHat_spin_Asymm_4_2_4 = sqrt(5)*(-13*Vars.Sigma_lambda*(3*Cons.nu - 1) + 14*I*Vars.Sigma_n*(3*Cons.nu - 1) + Cons.delta*(13*Vars.S_lambda - 14*I*Vars.S_n))/(168*Cons.M**2)
    Vars.hHat_spin_Asymm_4_1_3 = -sqrt(2)*(-17*sqrt(5)*Cons.delta*(-I*Vars.Sigma_lambda + Vars.Sigma_n)/(420*Cons.M**2) - sqrt(5)*(-13*I*Vars.S_lambda + 13*Vars.S_n)/(280*Cons.M**2))/24
    Vars.hHat_spin_Asymm_4_1_4 = -sqrt(2)*(-sqrt(5)*Vars.Sigma_ell*Cons.nu*(-I*Vars.Sigma_lambda + Vars.Sigma_n)/(84*Cons.M**4) + sqrt(5)*Cons.delta*(Vars.S_ell*(-I*Vars.Sigma_lambda + Vars.Sigma_n) + Vars.Sigma_ell*(-I*Vars.S_lambda + Vars.S_n))/(168*Cons.M**4) + sqrt(5)*(3*Vars.S_ell*(-I*Vars.S_lambda + Vars.S_n) + Vars.Sigma_ell*(-I*Vars.Sigma_lambda + Vars.Sigma_n))/(252*Cons.M**4))/24
    Vars.hHat_spin_Asymm_4_0_4 = sqrt(2)*I*(Vars.S_n*Cons.delta - 3*Vars.Sigma_n*Cons.nu + Vars.Sigma_n)/(168*Cons.M**2)

@njit(cache=True)
def Modes_2p5(modes,Cons,Vars):
    # (ell, m) = (2, +/- 0)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_2_0_0 + Vars.v**2*(Cons.hHat_2_0_2 + Vars.v*(Vars.hHat_spin_Symm_2_0_3 + Vars.v*(Cons.hHat_2_0_4 + Vars.hHat_spin_Symm_2_0_4 + Vars.v*(Cons.hHat_2_0_5 + Vars.hHat_spin_Symm_2_0_5)))))
    Asymm = Vars.rhOverM_coeff*Vars.v**2*(Vars.hHat_spin_Asymm_2_0_2 + Vars.hHat_spin_Asymm_2_0_4*Vars.v**2)
    modes[2] = (Symm + Asymm)[0]
    # (ell, m) = (2, +/- 1)
    Symm = Vars.rhOverM_coeff*Vars.v*(Cons.hHat_2_1_1 + Vars.v*(Vars.hHat_spin_Symm_2_1_2 + Vars.v*(Cons.hHat_2_1_3 + Vars.v*(Cons.hHat_2_1_4 + Cons.hHat_2_1_5*Vars.v + Vars.hHat_spin_Symm_2_1_4))))
    Asymm = Vars.rhOverM_coeff*Vars.v**3*(Vars.hHat_spin_Asymm_2_1_3 + Vars.hHat_spin_Asymm_2_1_4*Vars.v)
    modes[3] = (Symm + Asymm)[0]
    modes[1] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (2, +/- 2)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_2_2_0 + Vars.v**2*(Cons.hHat_2_2_2 + Vars.v*(Cons.hHat_2_2_3 + Vars.hHat_spin_Symm_2_2_3 + Vars.v*(Cons.hHat_2_2_4 + Cons.hHat_2_2_5*Vars.v + Vars.hHat_spin_Symm_2_2_4))))
    Asymm = Vars.rhOverM_coeff*Vars.v**2*(Vars.hHat_spin_Asymm_2_2_2 + Vars.hHat_spin_Asymm_2_2_4*Vars.v**2)
    modes[4] = (Symm + Asymm)[0]
    modes[0] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (3, +/- 0)
    Symm = Cons.hHat_3_0_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = Vars.hHat_spin_Asymm_3_0_4*Vars.rhOverM_coeff*Vars.v**4
    modes[8] = (Symm + Asymm)[0]
    # (ell, m) = (3, +/- 1)
    Symm = Vars.rhOverM_coeff*Vars.v*(Cons.hHat_3_1_1 + Vars.v**2*(Cons.hHat_3_1_3 + Vars.v*(Cons.hHat_3_1_4 + Cons.hHat_3_1_5*Vars.v + Vars.hHat_spin_Symm_3_1_4)))
    Asymm = Vars.hHat_spin_Asymm_3_1_3*Vars.rhOverM_coeff*Vars.v**3
    modes[9] = (Symm + Asymm)[0]
    modes[7] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (3, +/- 2)
    Symm = Vars.rhOverM_coeff*Vars.v**2*(Cons.hHat_3_2_2 + Vars.v*(Vars.hHat_spin_Symm_3_2_3 + Vars.v*(Cons.hHat_3_2_4 + Cons.hHat_3_2_5*Vars.v)))
    Asymm = Vars.hHat_spin_Asymm_3_2_4*Vars.rhOverM_coeff*Vars.v**4
    modes[10] = (Symm + Asymm)[0]
    modes[6] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (3, +/- 3)
    Symm = Vars.rhOverM_coeff*Vars.v*(Cons.hHat_3_3_1 + Vars.v**2*(Cons.hHat_3_3_3 + Vars.v*(Cons.hHat_3_3_4 + Cons.hHat_3_3_5*Vars.v + Vars.hHat_spin_Symm_3_3_4)))
    Asymm = Vars.hHat_spin_Asymm_3_3_3*Vars.rhOverM_coeff*Vars.v**3
    modes[11] = (Symm + Asymm)[0]
    modes[5] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (4, +/- 0)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_4_0_0 + Vars.v**2*(Cons.hHat_4_0_2 + Vars.v*(Vars.hHat_spin_Symm_4_0_3 + Vars.v*(Cons.hHat_4_0_4 + Vars.hHat_spin_Symm_4_0_4 + Vars.v*(Cons.hHat_4_0_5 + Vars.hHat_spin_Symm_4_0_5)))))
    Asymm = Vars.hHat_spin_Asymm_4_0_4*Vars.rhOverM_coeff*Vars.v**4
    modes[16] = (Symm + Asymm)[0]
    # (ell, m) = (4, +/- 1)
    Symm = Vars.rhOverM_coeff*Vars.v**3*(Cons.hHat_4_1_3 + Vars.v*(Cons.hHat_4_1_5*Vars.v + Vars.hHat_spin_Symm_4_1_4))
    Asymm = Vars.rhOverM_coeff*Vars.v**3*(Vars.hHat_spin_Asymm_4_1_3 + Vars.hHat_spin_Asymm_4_1_4*Vars.v)
    modes[17] = (Symm + Asymm)[0]
    modes[15] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (4, +/- 2)
    Symm = Vars.rhOverM_coeff*Vars.v**2*(Cons.hHat_4_2_2 + Vars.v**2*(Cons.hHat_4_2_4 + Cons.hHat_4_2_5*Vars.v))
    Asymm = Vars.hHat_spin_Asymm_4_2_4*Vars.rhOverM_coeff*Vars.v**4
    modes[18] = (Symm + Asymm)[0]
    modes[14] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (4, +/- 3)
    Symm = Vars.rhOverM_coeff*Vars.v**3*(Cons.hHat_4_3_3 + Vars.v*(Cons.hHat_4_3_5*Vars.v + Vars.hHat_spin_Symm_4_3_4))
    Asymm = 0
    modes[19] = (Symm + Asymm)[0]
    modes[13] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (4, +/- 4)
    Symm = Vars.rhOverM_coeff*Vars.v**2*(Cons.hHat_4_4_2 + Vars.v**2*(Cons.hHat_4_4_4 + Cons.hHat_4_4_5*Vars.v))
    Asymm = Vars.hHat_spin_Asymm_4_4_4*Vars.rhOverM_coeff*Vars.v**4
    modes[20] = (Symm + Asymm)[0]
    modes[12] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (5, +/- 1)
    Symm = Vars.rhOverM_coeff*Vars.v**3*(Cons.hHat_5_1_3 + Cons.hHat_5_1_5*Vars.v**2)
    Asymm = 0
    modes[27] = (Symm + Asymm)[0]
    modes[25] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (5, +/- 2)
    Symm = Cons.hHat_5_2_4*Vars.rhOverM_coeff*Vars.v**4
    Asymm = 0
    modes[28] = (Symm + Asymm)[0]
    modes[24] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (5, +/- 3)
    Symm = Vars.rhOverM_coeff*Vars.v**3*(Cons.hHat_5_3_3 + Cons.hHat_5_3_5*Vars.v**2)
    Asymm = 0
    modes[29] = (Symm + Asymm)[0]
    modes[23] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (5, +/- 4)
    Symm = Cons.hHat_5_4_4*Vars.rhOverM_coeff*Vars.v**4
    Asymm = 0
    modes[30] = (Symm + Asymm)[0]
    modes[22] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (5, +/- 5)
    Symm = Vars.rhOverM_coeff*Vars.v**3*(Cons.hHat_5_5_3 + Cons.hHat_5_5_5*Vars.v**2)
    Asymm = 0
    modes[31] = (Symm + Asymm)[0]
    modes[21] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (6, +/- 0)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_6_0_0 + Vars.v**2*(Cons.hHat_6_0_2 + Vars.v**2*(Cons.hHat_6_0_4 + Vars.v*(Cons.hHat_6_0_5 + Vars.hHat_spin_Symm_6_0_5))))
    Asymm = 0
    modes[38] = (Symm + Asymm)[0]
    # (ell, m) = (6, +/- 1)
    Symm = Cons.hHat_6_1_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = 0
    modes[39] = (Symm + Asymm)[0]
    modes[37] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (6, +/- 2)
    Symm = Cons.hHat_6_2_4*Vars.rhOverM_coeff*Vars.v**4
    Asymm = 0
    modes[40] = (Symm + Asymm)[0]
    modes[36] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (6, +/- 3)
    Symm = Cons.hHat_6_3_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = 0
    modes[41] = (Symm + Asymm)[0]
    modes[35] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (6, +/- 4)
    Symm = Cons.hHat_6_4_4*Vars.rhOverM_coeff*Vars.v**4
    Asymm = 0
    modes[42] = (Symm + Asymm)[0]
    modes[34] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (6, +/- 5)
    Symm = Cons.hHat_6_5_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = 0
    modes[43] = (Symm + Asymm)[0]
    modes[33] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (6, +/- 6)
    Symm = Cons.hHat_6_6_4*Vars.rhOverM_coeff*Vars.v**4
    Asymm = 0
    modes[44] = (Symm + Asymm)[0]
    modes[32] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (7, +/- 1)
    Symm = Cons.hHat_7_1_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = 0
    modes[53] = (Symm + Asymm)[0]
    modes[51] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (7, +/- 3)
    Symm = Cons.hHat_7_3_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = 0
    modes[55] = (Symm + Asymm)[0]
    modes[49] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (7, +/- 5)
    Symm = Cons.hHat_7_5_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = 0
    modes[57] = (Symm + Asymm)[0]
    modes[47] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (7, +/- 7)
    Symm = Cons.hHat_7_7_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = 0
    modes[59] = (Symm + Asymm)[0]
    modes[45] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (8, +/- 0)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_8_0_0 + Vars.v**2*(Cons.hHat_8_0_2 + Cons.hHat_8_0_4*Vars.v**2))
    Asymm = 0
    modes[68] = (Symm + Asymm)[0]

@njit(cache=True)
def Recalculate_3p0(Cons,Vars,y):
    Vars.v = np.array([y[0]])
    Vars.rfrak_chi1 = np.array([y[1],y[2]])
    Vars.rfrak_chi2 = np.array([y[3],y[4]])
    Vars.R = y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat
    Vars.R_S1 = exp(Vars.rfrak_chi1[0]*Cons.xHat + Vars.rfrak_chi1[1]*Cons.yHat)
    Vars.R_S2 = exp(Vars.rfrak_chi2[0]*Cons.xHat + Vars.rfrak_chi2[1]*Cons.yHat)
    Vars.chiVec1 = mul(mul(conjugate(normalized(y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat)),mul(mul(mul(Cons.S_chi1,Vars.R_S1),Cons.zHat),mul(conjugate(Vars.R_S1),conjugate(Cons.S_chi1)))),normalized(y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat))
    Vars.chiVec2 = mul(mul(conjugate(normalized(y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat)),mul(mul(mul(Cons.S_chi2,Vars.R_S2),Cons.zHat),mul(conjugate(Vars.R_S2),conjugate(Cons.S_chi2)))),normalized(y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat))
    Vars.chi1_n = np.array([Vars.chiVec1[1]])
    Vars.chi1_lambda = np.array([Vars.chiVec1[2]])
    Vars.chi1_ell = np.array([Vars.chiVec1[3]])
    Vars.chi2_n = np.array([Vars.chiVec2[1]])
    Vars.chi2_lambda = np.array([Vars.chiVec2[2]])
    Vars.chi2_ell = np.array([Vars.chiVec2[3]])
    Vars.S_ell = Cons.M1**2*Vars.chi1_ell + Cons.M2**2*Vars.chi2_ell
    Vars.S_n = Cons.M1**2*Vars.chi1_n + Cons.M2**2*Vars.chi2_n
    Vars.S_lambda = Cons.M1**2*Vars.chi1_lambda + Cons.M2**2*Vars.chi2_lambda
    Vars.Sigma_ell = Cons.M*(-Cons.M1*Vars.chi1_ell + Cons.M2*Vars.chi2_ell)
    Vars.Sigma_n = Cons.M*(-Cons.M1*Vars.chi1_n + Cons.M2*Vars.chi2_n)
    Vars.Sigma_lambda = Cons.M*(-Cons.M1*Vars.chi1_lambda + Cons.M2*Vars.chi2_lambda)
    Vars.logv = log(Vars.v)
    Vars.rhOverM_coeff = -8*sqrt(5)*Cons.nu*Vars.v**2*sqrt(pi)/5
    Vars.hHat_spin_Symm_2_2_3 = (-6*Vars.S_ell - 2*Vars.Sigma_ell*Cons.delta)/(3*Cons.M**2) + 0.0*I
    Vars.hHat_spin_Symm_2_2_4 = -(-336*Vars.S_ell**2 - 336*Vars.S_ell*Vars.Sigma_ell*Cons.delta - 280*Vars.S_lambda**2 + 840*I*Vars.S_lambda*Vars.S_n + 616*Vars.S_n**2 + 14*Cons.delta*(-6*Vars.Sigma_ell**2*Cons.delta - 5*Vars.Sigma_lambda**2*Cons.delta + 5*I*Vars.Sigma_lambda*(4*I*Vars.S_lambda + 6*Vars.S_n + 3*Vars.Sigma_n*Cons.delta) + Vars.Sigma_n*(30*I*Vars.S_lambda + 44*Vars.S_n + 11*Vars.Sigma_n*Cons.delta)))/(4*84**Cons.M)
    Vars.hHat_spin_Symm_2_1_2 = I*Vars.Sigma_ell/(2*Cons.M**2)
    Vars.hHat_spin_Symm_2_1_4 = -I*(86*Vars.S_ell*Cons.delta + Vars.Sigma_ell*(79 - 139*Cons.nu))/(42*Cons.M**2)
    Vars.hHat_spin_Symm_2_0_3 = -0.347760353971534*sqrt(5)*Vars.S_ell/Cons.M**2 - 0.170755767555554*sqrt(5)*Vars.Sigma_ell*Cons.delta/Cons.M**2 + 0.0*I
    Vars.hHat_spin_Symm_2_0_4 = 0.0869400884928835*sqrt(5)*Cons.delta*(3*Vars.S_ell*Vars.Sigma_ell + Vars.S_lambda*Vars.Sigma_lambda + Vars.S_n*Vars.Sigma_n)/Cons.M**4 - 0.0869400884928835*sqrt(5)*Cons.nu*(3*Vars.Sigma_ell**2 + Vars.Sigma_lambda**2 + Vars.Sigma_n**2)/Cons.M**4 + sqrt(6)*(-42*Vars.S_lambda + 42*Vars.S_n - 21*Cons.delta*(Vars.Sigma_lambda - Vars.Sigma_n))*(2*Vars.S_lambda + 2*Vars.S_n + Cons.delta*(Vars.Sigma_lambda + Vars.Sigma_n))/(126*Cons.M**4) + 0.000679219441350652*sqrt(5)*(384*Vars.S_ell**2 + 128*Vars.S_lambda**2 + 128*Vars.S_n**2 + 99*Vars.Sigma_ell**2 + 24*Vars.Sigma_lambda**2 + 24*Vars.Sigma_n**2)/Cons.M**4 + 0.0*I
    Vars.hHat_spin_Symm_2_0_5 = -0.228217732293819*Cons.nu*(319*sqrt(5)*Vars.S_ell/(882*Cons.M**2) + 1775*sqrt(5)*Vars.Sigma_ell*Cons.delta/(9408*Cons.M**2)) - 0.554061322885717*sqrt(5)*Vars.S_ell/Cons.M**2 - 0.083495186827972*sqrt(5)*Vars.Sigma_ell*Cons.delta/Cons.M**2 + 0.0*I
    Vars.hHat_spin_Symm_2_0_6 = -0.228217732293819*Cons.delta*(23*sqrt(5)*Vars.Sigma_ell*pi/(1344*Cons.M**2) + 173191*sqrt(5)*Vars.S_ell*Vars.Sigma_ell/(56448*Cons.M**4)) - 0.228217732293819*Cons.nu*(-31*sqrt(5)*Vars.S_ell*Vars.Sigma_ell*Cons.delta/(42*Cons.M**4) - sqrt(5)*(20832*Vars.S_ell**2 + 142529*Vars.Sigma_ell**2)/(28224*Cons.M**4)) - 0.168446421454962*sqrt(5)*Vars.Sigma_ell**2*Cons.nu**2/Cons.M**4 - 3.03222964888684e-6*sqrt(5)*(63808*Vars.S_ell**2 + 99197*Vars.Sigma_ell**2)/Cons.M**4 + 0.0*I
    Vars.hHat_spin_Symm_3_3_4 = 3*sqrt(210)*I*(7*Vars.S_ell*Cons.delta - 3*Vars.Sigma_ell*(3*Cons.nu - 1))/(112*Cons.M**2)
    Vars.hHat_spin_Symm_3_2_3 = 2*sqrt(35)*(Vars.S_ell + Vars.Sigma_ell*Cons.delta)/(21*Cons.M**2) + 0.0*I
    Vars.hHat_spin_Symm_3_1_4 = sqrt(14)*I*(Vars.S_ell*Cons.delta - 5*Vars.Sigma_ell*(3*Cons.nu - 1))/(336*Cons.M**2)
    Vars.hHat_spin_Symm_4_3_4 = 9*sqrt(70)*I*(-Vars.S_ell*Cons.delta + 3*Vars.Sigma_ell*Cons.nu - Vars.Sigma_ell)/(112*Cons.M**2)
    Vars.hHat_spin_Symm_4_1_4 = sqrt(10)*I*(Vars.S_ell*Cons.delta - 3*Vars.Sigma_ell*Cons.nu + Vars.Sigma_ell)/(336*Cons.M**2)
    Vars.hHat_spin_Symm_4_0_3 = -sqrt(2)*(5*Vars.S_ell/(21*Cons.M**2) + 19*Vars.Sigma_ell*Cons.delta/(112*Cons.M**2))/24 + 0.0*I
    Vars.hHat_spin_Symm_4_0_4 = -sqrt(2)*(-2*Cons.delta*(3*Vars.S_ell*Vars.Sigma_ell + Vars.S_lambda*Vars.Sigma_lambda + Vars.S_n*Vars.Sigma_n)/(63*Cons.M**4) + Cons.nu*(6*Vars.Sigma_ell**2 + 2*Vars.Sigma_lambda**2 + 2*Vars.Sigma_n**2)/(63*Cons.M**4) + (-192*Vars.S_ell**2 - 64*Vars.S_lambda**2 - 64*Vars.S_n**2 - 53*Vars.Sigma_ell**2 - 12*Vars.Sigma_lambda**2 - 12*Vars.Sigma_n**2)/(2016*Cons.M**4))/24 + 0.0*I
    Vars.hHat_spin_Symm_4_0_5 = -0.228217732293819*Cons.nu*(989419*Vars.S_ell/(232848*Cons.M**2) + 361055*Vars.Sigma_ell*Cons.delta/(155232*Cons.M**2)) + 0.197237323832325*Vars.S_ell/Cons.M**2 + 0.151042105850186*Vars.Sigma_ell*Cons.delta/Cons.M**2 + 0.0*I
    Vars.hHat_spin_Symm_4_0_6 = -0.228217732293819*Cons.delta*(25*Vars.Sigma_ell*pi/(4032*Cons.M**2) + 1303525*Vars.S_ell*Vars.Sigma_ell/(620928*Cons.M**4)) - 0.228217732293819*Cons.nu*(-26435*Vars.S_ell*Vars.Sigma_ell*Cons.delta/(11088*Cons.M**4) - (23685760*Vars.S_ell**2 + 32586265*Vars.Sigma_ell**2)/(9934848*Cons.M**4)) - 0.5440959373365*Vars.Sigma_ell**2*Cons.nu**2/Cons.M**4 - 0.228217732293819*(1380815*Vars.S_ell**2/931392 + 352565*Vars.Sigma_ell**2/516096)/Cons.M**4 + 0.0*I
    Vars.hHat_spin_Symm_6_0_5 = -0.228217732293819*Cons.nu*(19135*sqrt(13)*Vars.S_ell/(144144*Cons.M**2) + 16655*sqrt(13)*Vars.Sigma_ell*Cons.delta/(192192*Cons.M**2)) + 0.0070371288302107*sqrt(13)*Vars.S_ell/Cons.M**2 + 0.00575536978134986*sqrt(13)*Vars.Sigma_ell*Cons.delta/Cons.M**2 + 0.0*I
    Vars.hHat_spin_Symm_6_0_6 = -0.228217732293819*Cons.nu*(-215*sqrt(13)*Vars.S_ell*Vars.Sigma_ell*Cons.delta/(6864*Cons.M**4) - sqrt(13)*(577920*Vars.S_ell**2 + 495875*Vars.Sigma_ell**2)/(18450432*Cons.M**4)) - 0.00316850327972726*sqrt(13)*Vars.S_ell*Vars.Sigma_ell*Cons.delta/Cons.M**4 - 0.00714842838624288*sqrt(13)*Vars.Sigma_ell**2*Cons.nu**2/Cons.M**4 - 3.0923087911142e-9*sqrt(13)*(782720*Vars.S_ell**2 + 381315*Vars.Sigma_ell**2)/Cons.M**4 + 0.0*I
    Vars.hHat_spin_Asymm_2_2_2 = (-Vars.Sigma_lambda - I*Vars.Sigma_n)/(2*Cons.M**2)
    Vars.hHat_spin_Asymm_2_2_4 = -(-19*Cons.M**2*Vars.S_lambda*Cons.delta - 182*I*Cons.M**2*Vars.S_n*Cons.delta + Cons.M**2*Vars.Sigma_lambda*(43*Cons.nu - 5) + 14*I*Cons.M**2*Vars.Sigma_n*(20*Cons.nu - 7))/(4*84**Cons.M)
    Vars.hHat_spin_Asymm_2_1_3 = 0.139508928571429*Cons.delta*(-I*Vars.Sigma_lambda + Vars.Sigma_n)/Cons.M**2 + 0.000543375553080522*sqrt(30)*(-61*I*Vars.S_lambda + 61*Vars.S_n)/Cons.M**2 + (4*I*Vars.S_lambda + 25*Vars.S_n + 4*I*Vars.Sigma_lambda*Cons.delta + 13*Vars.Sigma_n*Cons.delta)/(6*Cons.M**2)
    Vars.hHat_spin_Asymm_2_1_4 = 0.0892857142857143*Vars.Sigma_ell*Cons.nu*(-I*Vars.Sigma_lambda + Vars.Sigma_n)/Cons.M**4 - 0.0446428571428571*Cons.delta*(Vars.S_ell*(-I*Vars.Sigma_lambda + Vars.Sigma_n) + Vars.Sigma_ell*(-I*Vars.S_lambda + Vars.S_n))/Cons.M**4 - (126*Vars.S_ell + 63*Vars.Sigma_ell*Cons.delta)*(2*Vars.S_n + Vars.Sigma_n*Cons.delta)/(42*Cons.M**4) - 0.0326025331848313*(2.73861278752583*Vars.S_ell*(-I*Vars.S_lambda + Vars.S_n) + 0.912870929175277*Vars.Sigma_ell*(-I*Vars.Sigma_lambda + Vars.Sigma_n))/Cons.M**4
    Vars.hHat_spin_Asymm_2_0_2 = sqrt(6)*I*Vars.Sigma_n/(6*Cons.M**2)
    Vars.hHat_spin_Asymm_2_0_4 = sqrt(6)*(255*I*Cons.M**2*Vars.S_n*Cons.delta + I*Cons.M**2*Vars.Sigma_n*(45 - 506*Cons.nu))/(126*Cons.M**4)
    Vars.hHat_spin_Asymm_3_3_3 = sqrt(210)*I*(Vars.S_lambda + I*Vars.S_n + Cons.delta*(Vars.Sigma_lambda + I*Vars.Sigma_n))/(21*Cons.M**2)
    Vars.hHat_spin_Asymm_3_2_4 = sqrt(35)*(-Vars.Sigma_lambda*(83*Cons.nu - 17) + 4*I*Vars.Sigma_n*(55*Cons.nu - 13) + 25*Cons.delta*(Vars.S_lambda - 4*I*Vars.S_n))/(168*Cons.M**2)
    Vars.hHat_spin_Asymm_3_1_3 = sqrt(14)*(I*Vars.S_lambda + Vars.S_n + Cons.delta*(I*Vars.Sigma_lambda + Vars.Sigma_n))/(21*Cons.M**2)
    Vars.hHat_spin_Asymm_3_0_4 = sqrt(42)*(-17*Vars.S_lambda*Cons.delta + Vars.Sigma_lambda*(35*Cons.nu - 9))/(168*Cons.M**2) + 0.0*I
    Vars.hHat_spin_Asymm_4_4_4 = 9*sqrt(35)*(-3*Vars.Sigma_lambda*Cons.nu + Vars.Sigma_lambda - I*Vars.Sigma_n*(3*Cons.nu - 1) + Cons.delta*(Vars.S_lambda + I*Vars.S_n))/(56*Cons.M**2)
    Vars.hHat_spin_Asymm_4_2_4 = sqrt(5)*(-13*Vars.Sigma_lambda*(3*Cons.nu - 1) + 14*I*Vars.Sigma_n*(3*Cons.nu - 1) + Cons.delta*(13*Vars.S_lambda - 14*I*Vars.S_n))/(168*Cons.M**2)
    Vars.hHat_spin_Asymm_4_1_3 = -sqrt(2)*(-17*sqrt(5)*Cons.delta*(-I*Vars.Sigma_lambda + Vars.Sigma_n)/(420*Cons.M**2) - sqrt(5)*(-13*I*Vars.S_lambda + 13*Vars.S_n)/(280*Cons.M**2))/24
    Vars.hHat_spin_Asymm_4_1_4 = -sqrt(2)*(-sqrt(5)*Vars.Sigma_ell*Cons.nu*(-I*Vars.Sigma_lambda + Vars.Sigma_n)/(84*Cons.M**4) + sqrt(5)*Cons.delta*(Vars.S_ell*(-I*Vars.Sigma_lambda + Vars.Sigma_n) + Vars.Sigma_ell*(-I*Vars.S_lambda + Vars.S_n))/(168*Cons.M**4) + sqrt(5)*(3*Vars.S_ell*(-I*Vars.S_lambda + Vars.S_n) + Vars.Sigma_ell*(-I*Vars.Sigma_lambda + Vars.Sigma_n))/(252*Cons.M**4))/24
    Vars.hHat_spin_Asymm_4_0_4 = sqrt(2)*I*(Vars.S_n*Cons.delta - 3*Vars.Sigma_n*Cons.nu + Vars.Sigma_n)/(168*Cons.M**2)

@njit(cache=True)
def Modes_3p0(modes,Cons,Vars):
    # (ell, m) = (2, +/- 0)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_2_0_0 + Vars.v**2*(Cons.hHat_2_0_2 + Vars.v*(Vars.hHat_spin_Symm_2_0_3 + Vars.v*(Cons.hHat_2_0_4 + Vars.hHat_spin_Symm_2_0_4 + Vars.v*(Cons.hHat_2_0_5 + Vars.hHat_spin_Symm_2_0_5 + Vars.v*(Cons.hHat_2_0_6 + Vars.hHat_spin_Symm_2_0_6))))))
    Asymm = Vars.rhOverM_coeff*Vars.v**2*(Vars.hHat_spin_Asymm_2_0_2 + Vars.hHat_spin_Asymm_2_0_4*Vars.v**2)
    modes[2] = (Symm + Asymm)[0]
    # (ell, m) = (2, +/- 1)
    Symm = Vars.rhOverM_coeff*Vars.v*(Cons.hHat_2_1_1 + Vars.v*(Vars.hHat_spin_Symm_2_1_2 + Vars.v*(Cons.hHat_2_1_3 + Vars.v*(Cons.hHat_2_1_4 + Vars.hHat_spin_Symm_2_1_4 + Vars.v*(Cons.hHat_2_1_5 + Cons.hHat_2_1_6*Vars.v)))))
    Asymm = Vars.rhOverM_coeff*Vars.v**3*(Vars.hHat_spin_Asymm_2_1_3 + Vars.hHat_spin_Asymm_2_1_4*Vars.v)
    modes[3] = (Symm + Asymm)[0]
    modes[1] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (2, +/- 2)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_2_2_0 + Vars.v**2*(Cons.hHat_2_2_2 + Vars.v*(Cons.hHat_2_2_3 + Vars.hHat_spin_Symm_2_2_3 + Vars.v*(Cons.hHat_2_2_4 + Vars.hHat_spin_Symm_2_2_4 + Vars.v*(Cons.hHat_2_2_5 + Vars.v*(Cons.hHat_2_2_6 + Cons.hHat_2_2_lnv_6*Vars.logv))))))
    Asymm = Vars.rhOverM_coeff*Vars.v**2*(Vars.hHat_spin_Asymm_2_2_2 + Vars.hHat_spin_Asymm_2_2_4*Vars.v**2)
    modes[4] = (Symm + Asymm)[0]
    modes[0] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (3, +/- 0)
    Symm = Cons.hHat_3_0_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = Vars.hHat_spin_Asymm_3_0_4*Vars.rhOverM_coeff*Vars.v**4
    modes[8] = (Symm + Asymm)[0]
    # (ell, m) = (3, +/- 1)
    Symm = Vars.rhOverM_coeff*Vars.v*(Cons.hHat_3_1_1 + Vars.v**2*(Cons.hHat_3_1_3 + Vars.v*(Cons.hHat_3_1_4 + Vars.hHat_spin_Symm_3_1_4 + Vars.v*(Cons.hHat_3_1_5 + Cons.hHat_3_1_6*Vars.v))))
    Asymm = Vars.hHat_spin_Asymm_3_1_3*Vars.rhOverM_coeff*Vars.v**3
    modes[9] = (Symm + Asymm)[0]
    modes[7] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (3, +/- 2)
    Symm = Vars.rhOverM_coeff*Vars.v**2*(Cons.hHat_3_2_2 + Vars.v*(Vars.hHat_spin_Symm_3_2_3 + Vars.v*(Cons.hHat_3_2_4 + Vars.v*(Cons.hHat_3_2_5 + Cons.hHat_3_2_6*Vars.v))))
    Asymm = Vars.hHat_spin_Asymm_3_2_4*Vars.rhOverM_coeff*Vars.v**4
    modes[10] = (Symm + Asymm)[0]
    modes[6] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (3, +/- 3)
    Symm = Vars.rhOverM_coeff*Vars.v*(Cons.hHat_3_3_1 + Vars.v**2*(Cons.hHat_3_3_3 + Vars.v*(Cons.hHat_3_3_4 + Vars.hHat_spin_Symm_3_3_4 + Vars.v*(Cons.hHat_3_3_5 + Cons.hHat_3_3_6*Vars.v))))
    Asymm = Vars.hHat_spin_Asymm_3_3_3*Vars.rhOverM_coeff*Vars.v**3
    modes[11] = (Symm + Asymm)[0]
    modes[5] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (4, +/- 0)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_4_0_0 + Vars.v**2*(Cons.hHat_4_0_2 + Vars.v*(Vars.hHat_spin_Symm_4_0_3 + Vars.v*(Cons.hHat_4_0_4 + Vars.hHat_spin_Symm_4_0_4 + Vars.v*(Cons.hHat_4_0_5 + Vars.hHat_spin_Symm_4_0_5 + Vars.v*(Cons.hHat_4_0_6 + Vars.hHat_spin_Symm_4_0_6))))))
    Asymm = Vars.hHat_spin_Asymm_4_0_4*Vars.rhOverM_coeff*Vars.v**4
    modes[16] = (Symm + Asymm)[0]
    # (ell, m) = (4, +/- 1)
    Symm = Vars.rhOverM_coeff*Vars.v**3*(Cons.hHat_4_1_3 + Vars.v*(Vars.hHat_spin_Symm_4_1_4 + Vars.v*(Cons.hHat_4_1_5 + Cons.hHat_4_1_6*Vars.v)))
    Asymm = Vars.rhOverM_coeff*Vars.v**3*(Vars.hHat_spin_Asymm_4_1_3 + Vars.hHat_spin_Asymm_4_1_4*Vars.v)
    modes[17] = (Symm + Asymm)[0]
    modes[15] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (4, +/- 2)
    Symm = Vars.rhOverM_coeff*Vars.v**2*(Cons.hHat_4_2_2 + Vars.v**2*(Cons.hHat_4_2_4 + Vars.v*(Cons.hHat_4_2_5 + Cons.hHat_4_2_6*Vars.v)))
    Asymm = Vars.hHat_spin_Asymm_4_2_4*Vars.rhOverM_coeff*Vars.v**4
    modes[18] = (Symm + Asymm)[0]
    modes[14] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (4, +/- 3)
    Symm = Vars.rhOverM_coeff*Vars.v**3*(Cons.hHat_4_3_3 + Vars.v*(Vars.hHat_spin_Symm_4_3_4 + Vars.v*(Cons.hHat_4_3_5 + Cons.hHat_4_3_6*Vars.v)))
    Asymm = 0
    modes[19] = (Symm + Asymm)[0]
    modes[13] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (4, +/- 4)
    Symm = Vars.rhOverM_coeff*Vars.v**2*(Cons.hHat_4_4_2 + Vars.v**2*(Cons.hHat_4_4_4 + Vars.v*(Cons.hHat_4_4_5 + Cons.hHat_4_4_6*Vars.v)))
    Asymm = Vars.hHat_spin_Asymm_4_4_4*Vars.rhOverM_coeff*Vars.v**4
    modes[20] = (Symm + Asymm)[0]
    modes[12] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (5, +/- 1)
    Symm = Vars.rhOverM_coeff*Vars.v**3*(Cons.hHat_5_1_3 + Vars.v**2*(Cons.hHat_5_1_5 + Cons.hHat_5_1_6*Vars.v))
    Asymm = 0
    modes[27] = (Symm + Asymm)[0]
    modes[25] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (5, +/- 2)
    Symm = Vars.rhOverM_coeff*Vars.v**4*(Cons.hHat_5_2_4 + Cons.hHat_5_2_6*Vars.v**2)
    Asymm = 0
    modes[28] = (Symm + Asymm)[0]
    modes[24] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (5, +/- 3)
    Symm = Vars.rhOverM_coeff*Vars.v**3*(Cons.hHat_5_3_3 + Vars.v**2*(Cons.hHat_5_3_5 + Cons.hHat_5_3_6*Vars.v))
    Asymm = 0
    modes[29] = (Symm + Asymm)[0]
    modes[23] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (5, +/- 4)
    Symm = Vars.rhOverM_coeff*Vars.v**4*(Cons.hHat_5_4_4 + Cons.hHat_5_4_6*Vars.v**2)
    Asymm = 0
    modes[30] = (Symm + Asymm)[0]
    modes[22] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (5, +/- 5)
    Symm = Vars.rhOverM_coeff*Vars.v**3*(Cons.hHat_5_5_3 + Vars.v**2*(Cons.hHat_5_5_5 + Cons.hHat_5_5_6*Vars.v))
    Asymm = 0
    modes[31] = (Symm + Asymm)[0]
    modes[21] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (6, +/- 0)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_6_0_0 + Vars.v**2*(Cons.hHat_6_0_2 + Vars.v**2*(Cons.hHat_6_0_4 + Vars.v*(Cons.hHat_6_0_5 + Vars.hHat_spin_Symm_6_0_5 + Vars.v*(Cons.hHat_6_0_6 + Vars.hHat_spin_Symm_6_0_6)))))
    Asymm = 0
    modes[38] = (Symm + Asymm)[0]
    # (ell, m) = (6, +/- 1)
    Symm = Cons.hHat_6_1_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = 0
    modes[39] = (Symm + Asymm)[0]
    modes[37] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (6, +/- 2)
    Symm = Vars.rhOverM_coeff*Vars.v**4*(Cons.hHat_6_2_4 + Cons.hHat_6_2_6*Vars.v**2)
    Asymm = 0
    modes[40] = (Symm + Asymm)[0]
    modes[36] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (6, +/- 3)
    Symm = Cons.hHat_6_3_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = 0
    modes[41] = (Symm + Asymm)[0]
    modes[35] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (6, +/- 4)
    Symm = Vars.rhOverM_coeff*Vars.v**4*(Cons.hHat_6_4_4 + Cons.hHat_6_4_6*Vars.v**2)
    Asymm = 0
    modes[42] = (Symm + Asymm)[0]
    modes[34] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (6, +/- 5)
    Symm = Cons.hHat_6_5_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = 0
    modes[43] = (Symm + Asymm)[0]
    modes[33] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (6, +/- 6)
    Symm = Vars.rhOverM_coeff*Vars.v**4*(Cons.hHat_6_6_4 + Cons.hHat_6_6_6*Vars.v**2)
    Asymm = 0
    modes[44] = (Symm + Asymm)[0]
    modes[32] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (7, +/- 1)
    Symm = Cons.hHat_7_1_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = 0
    modes[53] = (Symm + Asymm)[0]
    modes[51] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (7, +/- 2)
    Symm = Cons.hHat_7_2_6*Vars.rhOverM_coeff*Vars.v**6
    Asymm = 0
    modes[54] = (Symm + Asymm)[0]
    modes[50] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (7, +/- 3)
    Symm = Cons.hHat_7_3_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = 0
    modes[55] = (Symm + Asymm)[0]
    modes[49] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (7, +/- 4)
    Symm = Cons.hHat_7_4_6*Vars.rhOverM_coeff*Vars.v**6
    Asymm = 0
    modes[56] = (Symm + Asymm)[0]
    modes[48] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (7, +/- 5)
    Symm = Cons.hHat_7_5_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = 0
    modes[57] = (Symm + Asymm)[0]
    modes[47] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (7, +/- 6)
    Symm = Cons.hHat_7_6_6*Vars.rhOverM_coeff*Vars.v**6
    Asymm = 0
    modes[58] = (Symm + Asymm)[0]
    modes[46] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (7, +/- 7)
    Symm = Cons.hHat_7_7_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = 0
    modes[59] = (Symm + Asymm)[0]
    modes[45] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (8, +/- 0)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_8_0_0 + Vars.v**2*(Cons.hHat_8_0_2 + Vars.v**2*(Cons.hHat_8_0_4 + Cons.hHat_8_0_6*Vars.v**2)))
    Asymm = 0
    modes[68] = (Symm + Asymm)[0]
    # (ell, m) = (8, +/- 2)
    Symm = Cons.hHat_8_2_6*Vars.rhOverM_coeff*Vars.v**6
    Asymm = 0
    modes[70] = (Symm + Asymm)[0]
    modes[66] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (8, +/- 4)
    Symm = Cons.hHat_8_4_6*Vars.rhOverM_coeff*Vars.v**6
    Asymm = 0
    modes[72] = (Symm + Asymm)[0]
    modes[64] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (8, +/- 6)
    Symm = Cons.hHat_8_6_6*Vars.rhOverM_coeff*Vars.v**6
    Asymm = 0
    modes[74] = (Symm + Asymm)[0]
    modes[62] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (8, +/- 8)
    Symm = Cons.hHat_8_8_6*Vars.rhOverM_coeff*Vars.v**6
    Asymm = 0
    modes[76] = (Symm + Asymm)[0]
    modes[60] = (np.conjugate(Symm - Asymm))[0]

@njit(cache=True)
def Recalculate_3p5(Cons,Vars,y):
    Vars.v = np.array([y[0]])
    Vars.rfrak_chi1 = np.array([y[1],y[2]])
    Vars.rfrak_chi2 = np.array([y[3],y[4]])
    Vars.R = y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat
    Vars.R_S1 = exp(Vars.rfrak_chi1[0]*Cons.xHat + Vars.rfrak_chi1[1]*Cons.yHat)
    Vars.R_S2 = exp(Vars.rfrak_chi2[0]*Cons.xHat + Vars.rfrak_chi2[1]*Cons.yHat)
    Vars.chiVec1 = mul(mul(conjugate(normalized(y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat)),mul(mul(mul(Cons.S_chi1,Vars.R_S1),Cons.zHat),mul(conjugate(Vars.R_S1),conjugate(Cons.S_chi1)))),normalized(y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat))
    Vars.chiVec2 = mul(mul(conjugate(normalized(y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat)),mul(mul(mul(Cons.S_chi2,Vars.R_S2),Cons.zHat),mul(conjugate(Vars.R_S2),conjugate(Cons.S_chi2)))),normalized(y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat))
    Vars.chi1_n = np.array([Vars.chiVec1[1]])
    Vars.chi1_lambda = np.array([Vars.chiVec1[2]])
    Vars.chi1_ell = np.array([Vars.chiVec1[3]])
    Vars.chi2_n = np.array([Vars.chiVec2[1]])
    Vars.chi2_lambda = np.array([Vars.chiVec2[2]])
    Vars.chi2_ell = np.array([Vars.chiVec2[3]])
    Vars.S_ell = Cons.M1**2*Vars.chi1_ell + Cons.M2**2*Vars.chi2_ell
    Vars.S_n = Cons.M1**2*Vars.chi1_n + Cons.M2**2*Vars.chi2_n
    Vars.S_lambda = Cons.M1**2*Vars.chi1_lambda + Cons.M2**2*Vars.chi2_lambda
    Vars.Sigma_ell = Cons.M*(-Cons.M1*Vars.chi1_ell + Cons.M2*Vars.chi2_ell)
    Vars.Sigma_n = Cons.M*(-Cons.M1*Vars.chi1_n + Cons.M2*Vars.chi2_n)
    Vars.Sigma_lambda = Cons.M*(-Cons.M1*Vars.chi1_lambda + Cons.M2*Vars.chi2_lambda)
    Vars.x = Vars.v**2
    Vars.logv = log(Vars.v)
    Vars.rhOverM_coeff = -8*sqrt(5)*Cons.nu*Vars.v**2*sqrt(pi)/5
    Vars.hHat_spin_Symm_2_2_3 = (-6*Vars.S_ell - 2*Vars.Sigma_ell*Cons.delta)/(3*Cons.M**2) + 0.0*I
    Vars.hHat_spin_Symm_2_2_4 = -(-336*Vars.S_ell**2 - 336*Vars.S_ell*Vars.Sigma_ell*Cons.delta - 280*Vars.S_lambda**2 + 840*I*Vars.S_lambda*Vars.S_n + 616*Vars.S_n**2 + 14*Cons.delta*(-6*Vars.Sigma_ell**2*Cons.delta - 5*Vars.Sigma_lambda**2*Cons.delta + 5*I*Vars.Sigma_lambda*(4*I*Vars.S_lambda + 6*Vars.S_n + 3*Vars.Sigma_n*Cons.delta) + Vars.Sigma_n*(30*I*Vars.S_lambda + 44*Vars.S_n + 11*Vars.Sigma_n*Cons.delta)))/(4*84**Cons.M)
    Vars.hHat_spin_Symm_2_1_2 = I*Vars.Sigma_ell/(2*Cons.M**2)
    Vars.hHat_spin_Symm_2_1_4 = -I*(86*Vars.S_ell*Cons.delta + Vars.Sigma_ell*(79 - 139*Cons.nu))/(42*Cons.M**2)
    Vars.hHat_spin_Symm_2_0_3 = -0.347760353971534*sqrt(5)*Vars.S_ell/Cons.M**2 - 0.170755767555554*sqrt(5)*Vars.Sigma_ell*Cons.delta/Cons.M**2 + 0.0*I
    Vars.hHat_spin_Symm_2_0_4 = 0.0869400884928835*sqrt(5)*Cons.delta*(3*Vars.S_ell*Vars.Sigma_ell + Vars.S_lambda*Vars.Sigma_lambda + Vars.S_n*Vars.Sigma_n)/Cons.M**4 - 0.0869400884928835*sqrt(5)*Cons.nu*(3*Vars.Sigma_ell**2 + Vars.Sigma_lambda**2 + Vars.Sigma_n**2)/Cons.M**4 + sqrt(6)*(-42*Vars.S_lambda + 42*Vars.S_n - 21*Cons.delta*(Vars.Sigma_lambda - Vars.Sigma_n))*(2*Vars.S_lambda + 2*Vars.S_n + Cons.delta*(Vars.Sigma_lambda + Vars.Sigma_n))/(126*Cons.M**4) + 0.000679219441350652*sqrt(5)*(384*Vars.S_ell**2 + 128*Vars.S_lambda**2 + 128*Vars.S_n**2 + 99*Vars.Sigma_ell**2 + 24*Vars.Sigma_lambda**2 + 24*Vars.Sigma_n**2)/Cons.M**4 + 0.0*I
    Vars.hHat_spin_Symm_2_0_5 = -0.228217732293819*Cons.nu*(319*sqrt(5)*Vars.S_ell/(882*Cons.M**2) + 1775*sqrt(5)*Vars.Sigma_ell*Cons.delta/(9408*Cons.M**2)) - 0.554061322885717*sqrt(5)*Vars.S_ell/Cons.M**2 - 0.083495186827972*sqrt(5)*Vars.Sigma_ell*Cons.delta/Cons.M**2 + 0.0*I
    Vars.hHat_spin_Symm_2_0_6 = -0.228217732293819*Cons.delta*(23*sqrt(5)*Vars.Sigma_ell*pi/(1344*Cons.M**2) + 173191*sqrt(5)*Vars.S_ell*Vars.Sigma_ell/(56448*Cons.M**4)) - 0.228217732293819*Cons.nu*(-31*sqrt(5)*Vars.S_ell*Vars.Sigma_ell*Cons.delta/(42*Cons.M**4) - sqrt(5)*(20832*Vars.S_ell**2 + 142529*Vars.Sigma_ell**2)/(28224*Cons.M**4)) - 0.168446421454962*sqrt(5)*Vars.Sigma_ell**2*Cons.nu**2/Cons.M**4 - 3.03222964888684e-6*sqrt(5)*(63808*Vars.S_ell**2 + 99197*Vars.Sigma_ell**2)/Cons.M**4 + 0.0*I
    Vars.hHat_spin_Symm_2_0_7 = -0.228217732293819*Cons.delta*(14713254113*sqrt(5)*Vars.Sigma_ell/(11266117632*Cons.M**2) - 256*sqrt(5)*Vars.S_ell*Vars.Sigma_ell*pi/(21*Cons.M**4) + sqrt(5)*(1605952*Vars.S_ell**2*Vars.Sigma_ell + 106463*Vars.Sigma_ell**3)/(48384*Cons.M**6)) - 0.228217732293819*Cons.nu**2*(-34739*sqrt(5)*Vars.S_ell/(49896*Cons.M**2) - 66403*sqrt(5)*Vars.Sigma_ell*Cons.delta/(177408*Cons.M**2)) - 0.228217732293819*Cons.nu*(Cons.delta*(-66021037*sqrt(5)*Vars.Sigma_ell/(5588352*Cons.M**2) - 733*sqrt(5)*Vars.Sigma_ell**3/(84*Cons.M**6)) - 53090267*sqrt(5)*Vars.S_ell/(2095632*Cons.M**2) + 256*sqrt(5)*Vars.Sigma_ell**2*pi/(21*Cons.M**4) - 1603*sqrt(5)*Vars.S_ell*Vars.Sigma_ell**2/(27*Cons.M**6)) - 2.10130423266165*sqrt(5)*Vars.S_ell/Cons.M**2 + 0.00090562592180087*sqrt(5)*pi*(3072*Vars.S_ell**2 + 779*Vars.Sigma_ell**2)/Cons.M**4 - 0.000150937653633478*sqrt(5)*(36992*Vars.S_ell**3 + 22539*Vars.S_ell*Vars.Sigma_ell**2)/Cons.M**6 + 0.0*I
    Vars.hHat_spin_Symm_3_3_4 = 3*sqrt(210)*I*(7*Vars.S_ell*Cons.delta - 3*Vars.Sigma_ell*(3*Cons.nu - 1))/(112*Cons.M**2)
    Vars.hHat_spin_Symm_3_2_3 = 2*sqrt(35)*(Vars.S_ell + Vars.Sigma_ell*Cons.delta)/(21*Cons.M**2) + 0.0*I
    Vars.hHat_spin_Symm_3_1_4 = sqrt(14)*I*(Vars.S_ell*Cons.delta - 5*Vars.Sigma_ell*(3*Cons.nu - 1))/(336*Cons.M**2)
    Vars.hHat_spin_Symm_3_3_7 = 0.0173880176985767*sqrt(35)*Vars.Sigma_ell*Cons.nu*Vars.x**3.5/Cons.M**2 + 0.0*I
    Vars.hHat_spin_Symm_3_1_7 = 0.239045721866879*Vars.Sigma_ell*Cons.nu*Vars.x**3.5/Cons.M**2 + 0.0*I
    Vars.hHat_spin_Symm_4_3_4 = 9*sqrt(70)*I*(-Vars.S_ell*Cons.delta + 3*Vars.Sigma_ell*Cons.nu - Vars.Sigma_ell)/(112*Cons.M**2)
    Vars.hHat_spin_Symm_4_1_4 = sqrt(10)*I*(Vars.S_ell*Cons.delta - 3*Vars.Sigma_ell*Cons.nu + Vars.Sigma_ell)/(336*Cons.M**2)
    Vars.hHat_spin_Symm_4_0_3 = -sqrt(2)*(5*Vars.S_ell/(21*Cons.M**2) + 19*Vars.Sigma_ell*Cons.delta/(112*Cons.M**2))/24 + 0.0*I
    Vars.hHat_spin_Symm_4_0_4 = -sqrt(2)*(-2*Cons.delta*(3*Vars.S_ell*Vars.Sigma_ell + Vars.S_lambda*Vars.Sigma_lambda + Vars.S_n*Vars.Sigma_n)/(63*Cons.M**4) + Cons.nu*(6*Vars.Sigma_ell**2 + 2*Vars.Sigma_lambda**2 + 2*Vars.Sigma_n**2)/(63*Cons.M**4) + (-192*Vars.S_ell**2 - 64*Vars.S_lambda**2 - 64*Vars.S_n**2 - 53*Vars.Sigma_ell**2 - 12*Vars.Sigma_lambda**2 - 12*Vars.Sigma_n**2)/(2016*Cons.M**4))/24 + 0.0*I
    Vars.hHat_spin_Symm_4_0_5 = -0.228217732293819*Cons.nu*(989419*Vars.S_ell/(232848*Cons.M**2) + 361055*Vars.Sigma_ell*Cons.delta/(155232*Cons.M**2)) + 0.197237323832325*Vars.S_ell/Cons.M**2 + 0.151042105850186*Vars.Sigma_ell*Cons.delta/Cons.M**2 + 0.0*I
    Vars.hHat_spin_Symm_4_0_6 = -0.228217732293819*Cons.delta*(25*Vars.Sigma_ell*pi/(4032*Cons.M**2) + 1303525*Vars.S_ell*Vars.Sigma_ell/(620928*Cons.M**4)) - 0.228217732293819*Cons.nu*(-26435*Vars.S_ell*Vars.Sigma_ell*Cons.delta/(11088*Cons.M**4) - (23685760*Vars.S_ell**2 + 32586265*Vars.Sigma_ell**2)/(9934848*Cons.M**4)) - 0.5440959373365*Vars.Sigma_ell**2*Cons.nu**2/Cons.M**4 - 0.228217732293819*(1380815*Vars.S_ell**2/931392 + 352565*Vars.Sigma_ell**2/516096)/Cons.M**4 + 0.0*I
    Vars.hHat_spin_Symm_4_0_7 = -0.228217732293819*Cons.delta*(25969272883*Vars.Sigma_ell/(39943507968*Cons.M**2) - 64*Vars.S_ell*Vars.Sigma_ell*pi/(63*Cons.M**4) + (2971*Vars.S_ell**2*Vars.Sigma_ell/2268 - 55*Vars.Sigma_ell**3/6912)/Cons.M**6) - 0.228217732293819*Cons.nu**2*(4773259*Vars.S_ell/(5189184*Cons.M**2) + 5099915*Vars.Sigma_ell*Cons.delta/(6918912*Cons.M**2)) - 0.228217732293819*Cons.nu*(Cons.delta*(-160373197*Vars.Sigma_ell/(32288256*Cons.M**2) - Vars.Sigma_ell**3/(84*Cons.M**6)) - 712823899*Vars.S_ell/(163459296*Cons.M**2) + 64*Vars.Sigma_ell**2*pi/(63*Cons.M**4) - 109*Vars.S_ell*Vars.Sigma_ell**2/(81*Cons.M**6)) - 0.241332286766118*Vars.S_ell/Cons.M**2 - 0.000301875307266957*pi*(-768*Vars.S_ell**2 - 193*Vars.Sigma_ell**2)/Cons.M**4 - 2.51562756055797e-5*(11776*Vars.S_ell**3 + 2887*Vars.S_ell*Vars.Sigma_ell**2)/Cons.M**6 + 0.0*I
    Vars.hHat_spin_Symm_6_0_5 = -0.228217732293819*Cons.nu*(19135*sqrt(13)*Vars.S_ell/(144144*Cons.M**2) + 16655*sqrt(13)*Vars.Sigma_ell*Cons.delta/(192192*Cons.M**2)) + 0.0070371288302107*sqrt(13)*Vars.S_ell/Cons.M**2 + 0.00575536978134986*sqrt(13)*Vars.Sigma_ell*Cons.delta/Cons.M**2 + 0.0*I
    Vars.hHat_spin_Symm_6_0_6 = -0.228217732293819*Cons.nu*(-215*sqrt(13)*Vars.S_ell*Vars.Sigma_ell*Cons.delta/(6864*Cons.M**4) - sqrt(13)*(577920*Vars.S_ell**2 + 495875*Vars.Sigma_ell**2)/(18450432*Cons.M**4)) - 0.00316850327972726*sqrt(13)*Vars.S_ell*Vars.Sigma_ell*Cons.delta/Cons.M**4 - 0.00714842838624288*sqrt(13)*Vars.Sigma_ell**2*Cons.nu**2/Cons.M**4 - 3.0923087911142e-9*sqrt(13)*(782720*Vars.S_ell**2 + 381315*Vars.Sigma_ell**2)/Cons.M**4 + 0.0*I
    Vars.hHat_spin_Symm_6_0_7 = -0.228217732293819*Cons.nu**2*(198335*sqrt(13)*Vars.S_ell/(247104*Cons.M**2) + 10165*sqrt(13)*Vars.Sigma_ell*Cons.delta/(20592*Cons.M**2)) - 0.228217732293819*Cons.nu*(-10654115*sqrt(13)*Vars.S_ell/(15567552*Cons.M**2) - 7026595*sqrt(13)*Vars.Sigma_ell*Cons.delta/(13837824*Cons.M**2)) - 0.0288965073752077*sqrt(13)*Vars.S_ell/Cons.M**2 - 0.0256726130097283*sqrt(13)*Vars.Sigma_ell*Cons.delta/Cons.M**2 + 0.0*I
    Vars.hHat_spin_Symm_8_0_7 = -0.228217732293819*Cons.nu**2*(349685*sqrt(17)*Vars.S_ell/(3150576*Cons.M**2) + 99085*sqrt(17)*Vars.Sigma_ell*Cons.delta/(1400256*Cons.M**2)) - 0.228217732293819*Cons.nu*(-2586845*sqrt(17)*Vars.S_ell/(37806912*Cons.M**2) - 2640475*sqrt(17)*Vars.Sigma_ell*Cons.delta/(50409216*Cons.M**2)) - 0.00261138219653817*sqrt(17)*Vars.S_ell/Cons.M**2 - 0.00230079009672073*sqrt(17)*Vars.Sigma_ell*Cons.delta/Cons.M**2 + 0.0*I
    Vars.hHat_spin_Asymm_2_2_2 = (-Vars.Sigma_lambda - I*Vars.Sigma_n)/(2*Cons.M**2)
    Vars.hHat_spin_Asymm_2_2_4 = -(-19*Cons.M**2*Vars.S_lambda*Cons.delta - 182*I*Cons.M**2*Vars.S_n*Cons.delta + Cons.M**2*Vars.Sigma_lambda*(43*Cons.nu - 5) + 14*I*Cons.M**2*Vars.Sigma_n*(20*Cons.nu - 7))/(4*84**Cons.M)
    Vars.hHat_spin_Asymm_2_1_3 = 0.139508928571429*Cons.delta*(-I*Vars.Sigma_lambda + Vars.Sigma_n)/Cons.M**2 + 0.000543375553080522*sqrt(30)*(-61*I*Vars.S_lambda + 61*Vars.S_n)/Cons.M**2 + (4*I*Vars.S_lambda + 25*Vars.S_n + 4*I*Vars.Sigma_lambda*Cons.delta + 13*Vars.Sigma_n*Cons.delta)/(6*Cons.M**2)
    Vars.hHat_spin_Asymm_2_1_4 = 0.0892857142857143*Vars.Sigma_ell*Cons.nu*(-I*Vars.Sigma_lambda + Vars.Sigma_n)/Cons.M**4 - 0.0446428571428571*Cons.delta*(Vars.S_ell*(-I*Vars.Sigma_lambda + Vars.Sigma_n) + Vars.Sigma_ell*(-I*Vars.S_lambda + Vars.S_n))/Cons.M**4 - (126*Vars.S_ell + 63*Vars.Sigma_ell*Cons.delta)*(2*Vars.S_n + Vars.Sigma_n*Cons.delta)/(42*Cons.M**4) - 0.0326025331848313*(2.73861278752583*Vars.S_ell*(-I*Vars.S_lambda + Vars.S_n) + 0.912870929175277*Vars.Sigma_ell*(-I*Vars.Sigma_lambda + Vars.Sigma_n))/Cons.M**4
    Vars.hHat_spin_Asymm_2_0_2 = sqrt(6)*I*Vars.Sigma_n/(6*Cons.M**2)
    Vars.hHat_spin_Asymm_2_0_4 = sqrt(6)*(255*I*Cons.M**2*Vars.S_n*Cons.delta + I*Cons.M**2*Vars.Sigma_n*(45 - 506*Cons.nu))/(126*Cons.M**4)
    Vars.hHat_spin_Asymm_3_3_3 = sqrt(210)*I*(Vars.S_lambda + I*Vars.S_n + Cons.delta*(Vars.Sigma_lambda + I*Vars.Sigma_n))/(21*Cons.M**2)
    Vars.hHat_spin_Asymm_3_2_4 = sqrt(35)*(-Vars.Sigma_lambda*(83*Cons.nu - 17) + 4*I*Vars.Sigma_n*(55*Cons.nu - 13) + 25*Cons.delta*(Vars.S_lambda - 4*I*Vars.S_n))/(168*Cons.M**2)
    Vars.hHat_spin_Asymm_3_1_3 = sqrt(14)*(I*Vars.S_lambda + Vars.S_n + Cons.delta*(I*Vars.Sigma_lambda + Vars.Sigma_n))/(21*Cons.M**2)
    Vars.hHat_spin_Asymm_3_0_4 = sqrt(42)*(-17*Vars.S_lambda*Cons.delta + Vars.Sigma_lambda*(35*Cons.nu - 9))/(168*Cons.M**2) + 0.0*I
    Vars.hHat_spin_Asymm_4_4_4 = 9*sqrt(35)*(-3*Vars.Sigma_lambda*Cons.nu + Vars.Sigma_lambda - I*Vars.Sigma_n*(3*Cons.nu - 1) + Cons.delta*(Vars.S_lambda + I*Vars.S_n))/(56*Cons.M**2)
    Vars.hHat_spin_Asymm_4_2_4 = sqrt(5)*(-13*Vars.Sigma_lambda*(3*Cons.nu - 1) + 14*I*Vars.Sigma_n*(3*Cons.nu - 1) + Cons.delta*(13*Vars.S_lambda - 14*I*Vars.S_n))/(168*Cons.M**2)
    Vars.hHat_spin_Asymm_4_1_3 = -sqrt(2)*(-17*sqrt(5)*Cons.delta*(-I*Vars.Sigma_lambda + Vars.Sigma_n)/(420*Cons.M**2) - sqrt(5)*(-13*I*Vars.S_lambda + 13*Vars.S_n)/(280*Cons.M**2))/24
    Vars.hHat_spin_Asymm_4_1_4 = -sqrt(2)*(-sqrt(5)*Vars.Sigma_ell*Cons.nu*(-I*Vars.Sigma_lambda + Vars.Sigma_n)/(84*Cons.M**4) + sqrt(5)*Cons.delta*(Vars.S_ell*(-I*Vars.Sigma_lambda + Vars.Sigma_n) + Vars.Sigma_ell*(-I*Vars.S_lambda + Vars.S_n))/(168*Cons.M**4) + sqrt(5)*(3*Vars.S_ell*(-I*Vars.S_lambda + Vars.S_n) + Vars.Sigma_ell*(-I*Vars.Sigma_lambda + Vars.Sigma_n))/(252*Cons.M**4))/24
    Vars.hHat_spin_Asymm_4_0_4 = sqrt(2)*I*(Vars.S_n*Cons.delta - 3*Vars.Sigma_n*Cons.nu + Vars.Sigma_n)/(168*Cons.M**2)

@njit(cache=True)
def Modes_3p5(modes,Cons,Vars):
    # (ell, m) = (2, +/- 0)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_2_0_0 + Vars.v**2*(Cons.hHat_2_0_2 + Vars.v*(Vars.hHat_spin_Symm_2_0_3 + Vars.v*(Cons.hHat_2_0_4 + Vars.hHat_spin_Symm_2_0_4 + Vars.v*(Cons.hHat_2_0_5 + Vars.hHat_spin_Symm_2_0_5 + Vars.v*(Cons.hHat_2_0_6 + Vars.hHat_spin_Symm_2_0_6 + Vars.hHat_spin_Symm_2_0_7*Vars.v))))))
    Asymm = Vars.rhOverM_coeff*Vars.v**2*(Vars.hHat_spin_Asymm_2_0_2 + Vars.hHat_spin_Asymm_2_0_4*Vars.v**2)
    modes[2] = (Symm + Asymm)[0]
    # (ell, m) = (2, +/- 1)
    Symm = Vars.rhOverM_coeff*Vars.v*(Cons.hHat_2_1_1 + Vars.v*(Vars.hHat_spin_Symm_2_1_2 + Vars.v*(Cons.hHat_2_1_3 + Vars.v*(Cons.hHat_2_1_4 + Vars.hHat_spin_Symm_2_1_4 + Vars.v*(Cons.hHat_2_1_5 + Cons.hHat_2_1_6*Vars.v)))))
    Asymm = Vars.rhOverM_coeff*Vars.v**3*(Vars.hHat_spin_Asymm_2_1_3 + Vars.hHat_spin_Asymm_2_1_4*Vars.v)
    modes[3] = (Symm + Asymm)[0]
    modes[1] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (2, +/- 2)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_2_2_0 + Vars.v**2*(Cons.hHat_2_2_2 + Vars.v*(Cons.hHat_2_2_3 + Vars.hHat_spin_Symm_2_2_3 + Vars.v*(Cons.hHat_2_2_4 + Vars.hHat_spin_Symm_2_2_4 + Vars.v*(Cons.hHat_2_2_5 + Vars.v*(Cons.hHat_2_2_6 + Cons.hHat_2_2_7*Vars.v + Cons.hHat_2_2_lnv_6*Vars.logv))))))
    Asymm = Vars.rhOverM_coeff*Vars.v**2*(Vars.hHat_spin_Asymm_2_2_2 + Vars.hHat_spin_Asymm_2_2_4*Vars.v**2)
    modes[4] = (Symm + Asymm)[0]
    modes[0] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (3, +/- 0)
    Symm = Cons.hHat_3_0_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = Vars.hHat_spin_Asymm_3_0_4*Vars.rhOverM_coeff*Vars.v**4
    modes[8] = (Symm + Asymm)[0]
    # (ell, m) = (3, +/- 1)
    Symm = Vars.rhOverM_coeff*Vars.v*(Cons.hHat_3_1_1 + Vars.v**2*(Cons.hHat_3_1_3 + Vars.v*(Cons.hHat_3_1_4 + Vars.hHat_spin_Symm_3_1_4 + Vars.v*(Cons.hHat_3_1_5 + Vars.v*(Cons.hHat_3_1_6 + Vars.v*(Cons.hHat_3_1_7 + Cons.hHat_3_1_lnv_7*Vars.logv + Vars.hHat_spin_Symm_3_1_7))))))
    Asymm = Vars.hHat_spin_Asymm_3_1_3*Vars.rhOverM_coeff*Vars.v**3
    modes[9] = (Symm + Asymm)[0]
    modes[7] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (3, +/- 2)
    Symm = Vars.rhOverM_coeff*Vars.v**2*(Cons.hHat_3_2_2 + Vars.v*(Vars.hHat_spin_Symm_3_2_3 + Vars.v*(Cons.hHat_3_2_4 + Vars.v*(Cons.hHat_3_2_5 + Cons.hHat_3_2_6*Vars.v))))
    Asymm = Vars.hHat_spin_Asymm_3_2_4*Vars.rhOverM_coeff*Vars.v**4
    modes[10] = (Symm + Asymm)[0]
    modes[6] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (3, +/- 3)
    Symm = Vars.rhOverM_coeff*Vars.v*(Cons.hHat_3_3_1 + Vars.v**2*(Cons.hHat_3_3_3 + Vars.v*(Cons.hHat_3_3_4 + Vars.hHat_spin_Symm_3_3_4 + Vars.v*(Cons.hHat_3_3_5 + Vars.v*(Cons.hHat_3_3_6 + Vars.v*(Cons.hHat_3_3_7 + Cons.hHat_3_3_lnv_7*Vars.logv + Vars.hHat_spin_Symm_3_3_7))))))
    Asymm = Vars.hHat_spin_Asymm_3_3_3*Vars.rhOverM_coeff*Vars.v**3
    modes[11] = (Symm + Asymm)[0]
    modes[5] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (4, +/- 0)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_4_0_0 + Vars.v**2*(Cons.hHat_4_0_2 + Vars.v*(Vars.hHat_spin_Symm_4_0_3 + Vars.v*(Cons.hHat_4_0_4 + Vars.hHat_spin_Symm_4_0_4 + Vars.v*(Cons.hHat_4_0_5 + Vars.hHat_spin_Symm_4_0_5 + Vars.v*(Cons.hHat_4_0_6 + Vars.hHat_spin_Symm_4_0_6 + Vars.hHat_spin_Symm_4_0_7*Vars.v))))))
    Asymm = Vars.hHat_spin_Asymm_4_0_4*Vars.rhOverM_coeff*Vars.v**4
    modes[16] = (Symm + Asymm)[0]
    # (ell, m) = (4, +/- 1)
    Symm = Vars.rhOverM_coeff*Vars.v**3*(Cons.hHat_4_1_3 + Vars.v*(Vars.hHat_spin_Symm_4_1_4 + Vars.v*(Cons.hHat_4_1_5 + Cons.hHat_4_1_6*Vars.v)))
    Asymm = Vars.rhOverM_coeff*Vars.v**3*(Vars.hHat_spin_Asymm_4_1_3 + Vars.hHat_spin_Asymm_4_1_4*Vars.v)
    modes[17] = (Symm + Asymm)[0]
    modes[15] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (4, +/- 2)
    Symm = Vars.rhOverM_coeff*Vars.v**2*(Cons.hHat_4_2_2 + Vars.v**2*(Cons.hHat_4_2_4 + Vars.v*(Cons.hHat_4_2_5 + Cons.hHat_4_2_6*Vars.v)))
    Asymm = Vars.hHat_spin_Asymm_4_2_4*Vars.rhOverM_coeff*Vars.v**4
    modes[18] = (Symm + Asymm)[0]
    modes[14] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (4, +/- 3)
    Symm = Vars.rhOverM_coeff*Vars.v**3*(Cons.hHat_4_3_3 + Vars.v*(Vars.hHat_spin_Symm_4_3_4 + Vars.v*(Cons.hHat_4_3_5 + Cons.hHat_4_3_6*Vars.v)))
    Asymm = 0
    modes[19] = (Symm + Asymm)[0]
    modes[13] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (4, +/- 4)
    Symm = Vars.rhOverM_coeff*Vars.v**2*(Cons.hHat_4_4_2 + Vars.v**2*(Cons.hHat_4_4_4 + Vars.v*(Cons.hHat_4_4_5 + Cons.hHat_4_4_6*Vars.v)))
    Asymm = Vars.hHat_spin_Asymm_4_4_4*Vars.rhOverM_coeff*Vars.v**4
    modes[20] = (Symm + Asymm)[0]
    modes[12] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (5, +/- 1)
    Symm = Vars.rhOverM_coeff*Vars.v**3*(Cons.hHat_5_1_3 + Vars.v**2*(Cons.hHat_5_1_5 + Cons.hHat_5_1_6*Vars.v))
    Asymm = 0
    modes[27] = (Symm + Asymm)[0]
    modes[25] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (5, +/- 2)
    Symm = Vars.rhOverM_coeff*Vars.v**4*(Cons.hHat_5_2_4 + Cons.hHat_5_2_6*Vars.v**2)
    Asymm = 0
    modes[28] = (Symm + Asymm)[0]
    modes[24] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (5, +/- 3)
    Symm = Vars.rhOverM_coeff*Vars.v**3*(Cons.hHat_5_3_3 + Vars.v**2*(Cons.hHat_5_3_5 + Cons.hHat_5_3_6*Vars.v))
    Asymm = 0
    modes[29] = (Symm + Asymm)[0]
    modes[23] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (5, +/- 4)
    Symm = Vars.rhOverM_coeff*Vars.v**4*(Cons.hHat_5_4_4 + Cons.hHat_5_4_6*Vars.v**2)
    Asymm = 0
    modes[30] = (Symm + Asymm)[0]
    modes[22] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (5, +/- 5)
    Symm = Vars.rhOverM_coeff*Vars.v**3*(Cons.hHat_5_5_3 + Vars.v**2*(Cons.hHat_5_5_5 + Cons.hHat_5_5_6*Vars.v))
    Asymm = 0
    modes[31] = (Symm + Asymm)[0]
    modes[21] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (6, +/- 0)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_6_0_0 + Vars.v**2*(Cons.hHat_6_0_2 + Vars.v**2*(Cons.hHat_6_0_4 + Vars.v*(Cons.hHat_6_0_5 + Vars.hHat_spin_Symm_6_0_5 + Vars.v*(Cons.hHat_6_0_6 + Vars.hHat_spin_Symm_6_0_6 + Vars.hHat_spin_Symm_6_0_7*Vars.v)))))
    Asymm = 0
    modes[38] = (Symm + Asymm)[0]
    # (ell, m) = (6, +/- 1)
    Symm = Cons.hHat_6_1_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = 0
    modes[39] = (Symm + Asymm)[0]
    modes[37] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (6, +/- 2)
    Symm = Vars.rhOverM_coeff*Vars.v**4*(Cons.hHat_6_2_4 + Cons.hHat_6_2_6*Vars.v**2)
    Asymm = 0
    modes[40] = (Symm + Asymm)[0]
    modes[36] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (6, +/- 3)
    Symm = Cons.hHat_6_3_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = 0
    modes[41] = (Symm + Asymm)[0]
    modes[35] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (6, +/- 4)
    Symm = Vars.rhOverM_coeff*Vars.v**4*(Cons.hHat_6_4_4 + Cons.hHat_6_4_6*Vars.v**2)
    Asymm = 0
    modes[42] = (Symm + Asymm)[0]
    modes[34] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (6, +/- 5)
    Symm = Cons.hHat_6_5_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = 0
    modes[43] = (Symm + Asymm)[0]
    modes[33] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (6, +/- 6)
    Symm = Vars.rhOverM_coeff*Vars.v**4*(Cons.hHat_6_6_4 + Cons.hHat_6_6_6*Vars.v**2)
    Asymm = 0
    modes[44] = (Symm + Asymm)[0]
    modes[32] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (7, +/- 1)
    Symm = Cons.hHat_7_1_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = 0
    modes[53] = (Symm + Asymm)[0]
    modes[51] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (7, +/- 2)
    Symm = Cons.hHat_7_2_6*Vars.rhOverM_coeff*Vars.v**6
    Asymm = 0
    modes[54] = (Symm + Asymm)[0]
    modes[50] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (7, +/- 3)
    Symm = Cons.hHat_7_3_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = 0
    modes[55] = (Symm + Asymm)[0]
    modes[49] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (7, +/- 4)
    Symm = Cons.hHat_7_4_6*Vars.rhOverM_coeff*Vars.v**6
    Asymm = 0
    modes[56] = (Symm + Asymm)[0]
    modes[48] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (7, +/- 5)
    Symm = Cons.hHat_7_5_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = 0
    modes[57] = (Symm + Asymm)[0]
    modes[47] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (7, +/- 6)
    Symm = Cons.hHat_7_6_6*Vars.rhOverM_coeff*Vars.v**6
    Asymm = 0
    modes[58] = (Symm + Asymm)[0]
    modes[46] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (7, +/- 7)
    Symm = Cons.hHat_7_7_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = 0
    modes[59] = (Symm + Asymm)[0]
    modes[45] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (8, +/- 0)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_8_0_0 + Vars.v**2*(Cons.hHat_8_0_2 + Vars.v**2*(Cons.hHat_8_0_4 + Vars.v**2*(Cons.hHat_8_0_6 + Vars.hHat_spin_Symm_8_0_7*Vars.v))))
    Asymm = 0
    modes[68] = (Symm + Asymm)[0]
    # (ell, m) = (8, +/- 2)
    Symm = Cons.hHat_8_2_6*Vars.rhOverM_coeff*Vars.v**6
    Asymm = 0
    modes[70] = (Symm + Asymm)[0]
    modes[66] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (8, +/- 4)
    Symm = Cons.hHat_8_4_6*Vars.rhOverM_coeff*Vars.v**6
    Asymm = 0
    modes[72] = (Symm + Asymm)[0]
    modes[64] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (8, +/- 6)
    Symm = Cons.hHat_8_6_6*Vars.rhOverM_coeff*Vars.v**6
    Asymm = 0
    modes[74] = (Symm + Asymm)[0]
    modes[62] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (8, +/- 8)
    Symm = Cons.hHat_8_8_6*Vars.rhOverM_coeff*Vars.v**6
    Asymm = 0
    modes[76] = (Symm + Asymm)[0]
    modes[60] = (np.conjugate(Symm - Asymm))[0]

@njit(cache=True)
def Recalculate_4p0(Cons,Vars,y):
    Vars.v = np.array([y[0]])
    Vars.rfrak_chi1 = np.array([y[1],y[2]])
    Vars.rfrak_chi2 = np.array([y[3],y[4]])
    Vars.R = y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat
    Vars.R_S1 = exp(Vars.rfrak_chi1[0]*Cons.xHat + Vars.rfrak_chi1[1]*Cons.yHat)
    Vars.R_S2 = exp(Vars.rfrak_chi2[0]*Cons.xHat + Vars.rfrak_chi2[1]*Cons.yHat)
    Vars.chiVec1 = mul(mul(conjugate(normalized(y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat)),mul(mul(mul(Cons.S_chi1,Vars.R_S1),Cons.zHat),mul(conjugate(Vars.R_S1),conjugate(Cons.S_chi1)))),normalized(y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat))
    Vars.chiVec2 = mul(mul(conjugate(normalized(y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat)),mul(mul(mul(Cons.S_chi2,Vars.R_S2),Cons.zHat),mul(conjugate(Vars.R_S2),conjugate(Cons.S_chi2)))),normalized(y[5]*Cons.wHat + y[6]*Cons.xHat + y[7]*Cons.yHat + y[8]*Cons.zHat))
    Vars.chi1_n = np.array([Vars.chiVec1[1]])
    Vars.chi1_lambda = np.array([Vars.chiVec1[2]])
    Vars.chi1_ell = np.array([Vars.chiVec1[3]])
    Vars.chi2_n = np.array([Vars.chiVec2[1]])
    Vars.chi2_lambda = np.array([Vars.chiVec2[2]])
    Vars.chi2_ell = np.array([Vars.chiVec2[3]])
    Vars.S_ell = Cons.M1**2*Vars.chi1_ell + Cons.M2**2*Vars.chi2_ell
    Vars.S_n = Cons.M1**2*Vars.chi1_n + Cons.M2**2*Vars.chi2_n
    Vars.S_lambda = Cons.M1**2*Vars.chi1_lambda + Cons.M2**2*Vars.chi2_lambda
    Vars.Sigma_ell = Cons.M*(-Cons.M1*Vars.chi1_ell + Cons.M2*Vars.chi2_ell)
    Vars.Sigma_n = Cons.M*(-Cons.M1*Vars.chi1_n + Cons.M2*Vars.chi2_n)
    Vars.Sigma_lambda = Cons.M*(-Cons.M1*Vars.chi1_lambda + Cons.M2*Vars.chi2_lambda)
    Vars.x = Vars.v**2
    Vars.logv = log(Vars.v)
    Vars.rhOverM_coeff = -8*sqrt(5)*Cons.nu*Vars.v**2*sqrt(pi)/5
    Vars.hHat_spin_Symm_2_2_3 = (-6*Vars.S_ell - 2*Vars.Sigma_ell*Cons.delta)/(3*Cons.M**2) + 0.0*I
    Vars.hHat_spin_Symm_2_2_4 = -(-336*Vars.S_ell**2 - 336*Vars.S_ell*Vars.Sigma_ell*Cons.delta - 280*Vars.S_lambda**2 + 840*I*Vars.S_lambda*Vars.S_n + 616*Vars.S_n**2 + 14*Cons.delta*(-6*Vars.Sigma_ell**2*Cons.delta - 5*Vars.Sigma_lambda**2*Cons.delta + 5*I*Vars.Sigma_lambda*(4*I*Vars.S_lambda + 6*Vars.S_n + 3*Vars.Sigma_n*Cons.delta) + Vars.Sigma_n*(30*I*Vars.S_lambda + 44*Vars.S_n + 11*Vars.Sigma_n*Cons.delta)))/(4*84**Cons.M)
    Vars.hHat_spin_Symm_2_1_2 = I*Vars.Sigma_ell/(2*Cons.M**2)
    Vars.hHat_spin_Symm_2_1_4 = -I*(86*Vars.S_ell*Cons.delta + Vars.Sigma_ell*(79 - 139*Cons.nu))/(42*Cons.M**2)
    Vars.hHat_spin_Symm_2_0_3 = -0.347760353971534*sqrt(5)*Vars.S_ell/Cons.M**2 - 0.170755767555554*sqrt(5)*Vars.Sigma_ell*Cons.delta/Cons.M**2 + 0.0*I
    Vars.hHat_spin_Symm_2_0_4 = 0.0869400884928835*sqrt(5)*Cons.delta*(3*Vars.S_ell*Vars.Sigma_ell + Vars.S_lambda*Vars.Sigma_lambda + Vars.S_n*Vars.Sigma_n)/Cons.M**4 - 0.0869400884928835*sqrt(5)*Cons.nu*(3*Vars.Sigma_ell**2 + Vars.Sigma_lambda**2 + Vars.Sigma_n**2)/Cons.M**4 + sqrt(6)*(-42*Vars.S_lambda + 42*Vars.S_n - 21*Cons.delta*(Vars.Sigma_lambda - Vars.Sigma_n))*(2*Vars.S_lambda + 2*Vars.S_n + Cons.delta*(Vars.Sigma_lambda + Vars.Sigma_n))/(126*Cons.M**4) + 0.000679219441350652*sqrt(5)*(384*Vars.S_ell**2 + 128*Vars.S_lambda**2 + 128*Vars.S_n**2 + 99*Vars.Sigma_ell**2 + 24*Vars.Sigma_lambda**2 + 24*Vars.Sigma_n**2)/Cons.M**4 + 0.0*I
    Vars.hHat_spin_Symm_2_0_5 = -0.228217732293819*Cons.nu*(319*sqrt(5)*Vars.S_ell/(882*Cons.M**2) + 1775*sqrt(5)*Vars.Sigma_ell*Cons.delta/(9408*Cons.M**2)) - 0.554061322885717*sqrt(5)*Vars.S_ell/Cons.M**2 - 0.083495186827972*sqrt(5)*Vars.Sigma_ell*Cons.delta/Cons.M**2 + 0.0*I
    Vars.hHat_spin_Symm_2_0_6 = -0.228217732293819*Cons.delta*(23*sqrt(5)*Vars.Sigma_ell*pi/(1344*Cons.M**2) + 173191*sqrt(5)*Vars.S_ell*Vars.Sigma_ell/(56448*Cons.M**4)) - 0.228217732293819*Cons.nu*(-31*sqrt(5)*Vars.S_ell*Vars.Sigma_ell*Cons.delta/(42*Cons.M**4) - sqrt(5)*(20832*Vars.S_ell**2 + 142529*Vars.Sigma_ell**2)/(28224*Cons.M**4)) - 0.168446421454962*sqrt(5)*Vars.Sigma_ell**2*Cons.nu**2/Cons.M**4 - 3.03222964888684e-6*sqrt(5)*(63808*Vars.S_ell**2 + 99197*Vars.Sigma_ell**2)/Cons.M**4 + 0.0*I
    Vars.hHat_spin_Symm_2_0_7 = -0.228217732293819*Cons.delta*(14713254113*sqrt(5)*Vars.Sigma_ell/(11266117632*Cons.M**2) - 256*sqrt(5)*Vars.S_ell*Vars.Sigma_ell*pi/(21*Cons.M**4) + sqrt(5)*(1605952*Vars.S_ell**2*Vars.Sigma_ell + 106463*Vars.Sigma_ell**3)/(48384*Cons.M**6)) - 0.228217732293819*Cons.nu**2*(-34739*sqrt(5)*Vars.S_ell/(49896*Cons.M**2) - 66403*sqrt(5)*Vars.Sigma_ell*Cons.delta/(177408*Cons.M**2)) - 0.228217732293819*Cons.nu*(Cons.delta*(-66021037*sqrt(5)*Vars.Sigma_ell/(5588352*Cons.M**2) - 733*sqrt(5)*Vars.Sigma_ell**3/(84*Cons.M**6)) - 53090267*sqrt(5)*Vars.S_ell/(2095632*Cons.M**2) + 256*sqrt(5)*Vars.Sigma_ell**2*pi/(21*Cons.M**4) - 1603*sqrt(5)*Vars.S_ell*Vars.Sigma_ell**2/(27*Cons.M**6)) - 2.10130423266165*sqrt(5)*Vars.S_ell/Cons.M**2 + 0.00090562592180087*sqrt(5)*pi*(3072*Vars.S_ell**2 + 779*Vars.Sigma_ell**2)/Cons.M**4 - 0.000150937653633478*sqrt(5)*(36992*Vars.S_ell**3 + 22539*Vars.S_ell*Vars.Sigma_ell**2)/Cons.M**6 + 0.0*I
    Vars.hHat_spin_Symm_3_3_4 = 3*sqrt(210)*I*(7*Vars.S_ell*Cons.delta - 3*Vars.Sigma_ell*(3*Cons.nu - 1))/(112*Cons.M**2)
    Vars.hHat_spin_Symm_3_2_3 = 2*sqrt(35)*(Vars.S_ell + Vars.Sigma_ell*Cons.delta)/(21*Cons.M**2) + 0.0*I
    Vars.hHat_spin_Symm_3_1_4 = sqrt(14)*I*(Vars.S_ell*Cons.delta - 5*Vars.Sigma_ell*(3*Cons.nu - 1))/(336*Cons.M**2)
    Vars.hHat_spin_Symm_3_3_7 = 0.0173880176985767*sqrt(35)*Vars.Sigma_ell*Cons.nu*Vars.x**3.5/Cons.M**2 + 0.0*I
    Vars.hHat_spin_Symm_3_1_7 = 0.239045721866879*Vars.Sigma_ell*Cons.nu*Vars.x**3.5/Cons.M**2 + 0.0*I
    Vars.hHat_spin_Symm_4_3_4 = 9*sqrt(70)*I*(-Vars.S_ell*Cons.delta + 3*Vars.Sigma_ell*Cons.nu - Vars.Sigma_ell)/(112*Cons.M**2)
    Vars.hHat_spin_Symm_4_1_4 = sqrt(10)*I*(Vars.S_ell*Cons.delta - 3*Vars.Sigma_ell*Cons.nu + Vars.Sigma_ell)/(336*Cons.M**2)
    Vars.hHat_spin_Symm_4_0_3 = -sqrt(2)*(5*Vars.S_ell/(21*Cons.M**2) + 19*Vars.Sigma_ell*Cons.delta/(112*Cons.M**2))/24 + 0.0*I
    Vars.hHat_spin_Symm_4_0_4 = -sqrt(2)*(-2*Cons.delta*(3*Vars.S_ell*Vars.Sigma_ell + Vars.S_lambda*Vars.Sigma_lambda + Vars.S_n*Vars.Sigma_n)/(63*Cons.M**4) + Cons.nu*(6*Vars.Sigma_ell**2 + 2*Vars.Sigma_lambda**2 + 2*Vars.Sigma_n**2)/(63*Cons.M**4) + (-192*Vars.S_ell**2 - 64*Vars.S_lambda**2 - 64*Vars.S_n**2 - 53*Vars.Sigma_ell**2 - 12*Vars.Sigma_lambda**2 - 12*Vars.Sigma_n**2)/(2016*Cons.M**4))/24 + 0.0*I
    Vars.hHat_spin_Symm_4_0_5 = -0.228217732293819*Cons.nu*(989419*Vars.S_ell/(232848*Cons.M**2) + 361055*Vars.Sigma_ell*Cons.delta/(155232*Cons.M**2)) + 0.197237323832325*Vars.S_ell/Cons.M**2 + 0.151042105850186*Vars.Sigma_ell*Cons.delta/Cons.M**2 + 0.0*I
    Vars.hHat_spin_Symm_4_0_6 = -0.228217732293819*Cons.delta*(25*Vars.Sigma_ell*pi/(4032*Cons.M**2) + 1303525*Vars.S_ell*Vars.Sigma_ell/(620928*Cons.M**4)) - 0.228217732293819*Cons.nu*(-26435*Vars.S_ell*Vars.Sigma_ell*Cons.delta/(11088*Cons.M**4) - (23685760*Vars.S_ell**2 + 32586265*Vars.Sigma_ell**2)/(9934848*Cons.M**4)) - 0.5440959373365*Vars.Sigma_ell**2*Cons.nu**2/Cons.M**4 - 0.228217732293819*(1380815*Vars.S_ell**2/931392 + 352565*Vars.Sigma_ell**2/516096)/Cons.M**4 + 0.0*I
    Vars.hHat_spin_Symm_4_0_7 = -0.228217732293819*Cons.delta*(25969272883*Vars.Sigma_ell/(39943507968*Cons.M**2) - 64*Vars.S_ell*Vars.Sigma_ell*pi/(63*Cons.M**4) + (2971*Vars.S_ell**2*Vars.Sigma_ell/2268 - 55*Vars.Sigma_ell**3/6912)/Cons.M**6) - 0.228217732293819*Cons.nu**2*(4773259*Vars.S_ell/(5189184*Cons.M**2) + 5099915*Vars.Sigma_ell*Cons.delta/(6918912*Cons.M**2)) - 0.228217732293819*Cons.nu*(Cons.delta*(-160373197*Vars.Sigma_ell/(32288256*Cons.M**2) - Vars.Sigma_ell**3/(84*Cons.M**6)) - 712823899*Vars.S_ell/(163459296*Cons.M**2) + 64*Vars.Sigma_ell**2*pi/(63*Cons.M**4) - 109*Vars.S_ell*Vars.Sigma_ell**2/(81*Cons.M**6)) - 0.241332286766118*Vars.S_ell/Cons.M**2 - 0.000301875307266957*pi*(-768*Vars.S_ell**2 - 193*Vars.Sigma_ell**2)/Cons.M**4 - 2.51562756055797e-5*(11776*Vars.S_ell**3 + 2887*Vars.S_ell*Vars.Sigma_ell**2)/Cons.M**6 + 0.0*I
    Vars.hHat_spin_Symm_6_0_5 = -0.228217732293819*Cons.nu*(19135*sqrt(13)*Vars.S_ell/(144144*Cons.M**2) + 16655*sqrt(13)*Vars.Sigma_ell*Cons.delta/(192192*Cons.M**2)) + 0.0070371288302107*sqrt(13)*Vars.S_ell/Cons.M**2 + 0.00575536978134986*sqrt(13)*Vars.Sigma_ell*Cons.delta/Cons.M**2 + 0.0*I
    Vars.hHat_spin_Symm_6_0_6 = -0.228217732293819*Cons.nu*(-215*sqrt(13)*Vars.S_ell*Vars.Sigma_ell*Cons.delta/(6864*Cons.M**4) - sqrt(13)*(577920*Vars.S_ell**2 + 495875*Vars.Sigma_ell**2)/(18450432*Cons.M**4)) - 0.00316850327972726*sqrt(13)*Vars.S_ell*Vars.Sigma_ell*Cons.delta/Cons.M**4 - 0.00714842838624288*sqrt(13)*Vars.Sigma_ell**2*Cons.nu**2/Cons.M**4 - 3.0923087911142e-9*sqrt(13)*(782720*Vars.S_ell**2 + 381315*Vars.Sigma_ell**2)/Cons.M**4 + 0.0*I
    Vars.hHat_spin_Symm_6_0_7 = -0.228217732293819*Cons.nu**2*(198335*sqrt(13)*Vars.S_ell/(247104*Cons.M**2) + 10165*sqrt(13)*Vars.Sigma_ell*Cons.delta/(20592*Cons.M**2)) - 0.228217732293819*Cons.nu*(-10654115*sqrt(13)*Vars.S_ell/(15567552*Cons.M**2) - 7026595*sqrt(13)*Vars.Sigma_ell*Cons.delta/(13837824*Cons.M**2)) - 0.0288965073752077*sqrt(13)*Vars.S_ell/Cons.M**2 - 0.0256726130097283*sqrt(13)*Vars.Sigma_ell*Cons.delta/Cons.M**2 + 0.0*I
    Vars.hHat_spin_Symm_8_0_7 = -0.228217732293819*Cons.nu**2*(349685*sqrt(17)*Vars.S_ell/(3150576*Cons.M**2) + 99085*sqrt(17)*Vars.Sigma_ell*Cons.delta/(1400256*Cons.M**2)) - 0.228217732293819*Cons.nu*(-2586845*sqrt(17)*Vars.S_ell/(37806912*Cons.M**2) - 2640475*sqrt(17)*Vars.Sigma_ell*Cons.delta/(50409216*Cons.M**2)) - 0.00261138219653817*sqrt(17)*Vars.S_ell/Cons.M**2 - 0.00230079009672073*sqrt(17)*Vars.Sigma_ell*Cons.delta/Cons.M**2 + 0.0*I
    Vars.hHat_spin_Asymm_2_2_2 = (-Vars.Sigma_lambda - I*Vars.Sigma_n)/(2*Cons.M**2)
    Vars.hHat_spin_Asymm_2_2_4 = -(-19*Cons.M**2*Vars.S_lambda*Cons.delta - 182*I*Cons.M**2*Vars.S_n*Cons.delta + Cons.M**2*Vars.Sigma_lambda*(43*Cons.nu - 5) + 14*I*Cons.M**2*Vars.Sigma_n*(20*Cons.nu - 7))/(4*84**Cons.M)
    Vars.hHat_spin_Asymm_2_1_3 = 0.139508928571429*Cons.delta*(-I*Vars.Sigma_lambda + Vars.Sigma_n)/Cons.M**2 + 0.000543375553080522*sqrt(30)*(-61*I*Vars.S_lambda + 61*Vars.S_n)/Cons.M**2 + (4*I*Vars.S_lambda + 25*Vars.S_n + 4*I*Vars.Sigma_lambda*Cons.delta + 13*Vars.Sigma_n*Cons.delta)/(6*Cons.M**2)
    Vars.hHat_spin_Asymm_2_1_4 = 0.0892857142857143*Vars.Sigma_ell*Cons.nu*(-I*Vars.Sigma_lambda + Vars.Sigma_n)/Cons.M**4 - 0.0446428571428571*Cons.delta*(Vars.S_ell*(-I*Vars.Sigma_lambda + Vars.Sigma_n) + Vars.Sigma_ell*(-I*Vars.S_lambda + Vars.S_n))/Cons.M**4 - (126*Vars.S_ell + 63*Vars.Sigma_ell*Cons.delta)*(2*Vars.S_n + Vars.Sigma_n*Cons.delta)/(42*Cons.M**4) - 0.0326025331848313*(2.73861278752583*Vars.S_ell*(-I*Vars.S_lambda + Vars.S_n) + 0.912870929175277*Vars.Sigma_ell*(-I*Vars.Sigma_lambda + Vars.Sigma_n))/Cons.M**4
    Vars.hHat_spin_Asymm_2_0_2 = sqrt(6)*I*Vars.Sigma_n/(6*Cons.M**2)
    Vars.hHat_spin_Asymm_2_0_4 = sqrt(6)*(255*I*Cons.M**2*Vars.S_n*Cons.delta + I*Cons.M**2*Vars.Sigma_n*(45 - 506*Cons.nu))/(126*Cons.M**4)
    Vars.hHat_spin_Asymm_3_3_3 = sqrt(210)*I*(Vars.S_lambda + I*Vars.S_n + Cons.delta*(Vars.Sigma_lambda + I*Vars.Sigma_n))/(21*Cons.M**2)
    Vars.hHat_spin_Asymm_3_2_4 = sqrt(35)*(-Vars.Sigma_lambda*(83*Cons.nu - 17) + 4*I*Vars.Sigma_n*(55*Cons.nu - 13) + 25*Cons.delta*(Vars.S_lambda - 4*I*Vars.S_n))/(168*Cons.M**2)
    Vars.hHat_spin_Asymm_3_1_3 = sqrt(14)*(I*Vars.S_lambda + Vars.S_n + Cons.delta*(I*Vars.Sigma_lambda + Vars.Sigma_n))/(21*Cons.M**2)
    Vars.hHat_spin_Asymm_3_0_4 = sqrt(42)*(-17*Vars.S_lambda*Cons.delta + Vars.Sigma_lambda*(35*Cons.nu - 9))/(168*Cons.M**2) + 0.0*I
    Vars.hHat_spin_Asymm_4_4_4 = 9*sqrt(35)*(-3*Vars.Sigma_lambda*Cons.nu + Vars.Sigma_lambda - I*Vars.Sigma_n*(3*Cons.nu - 1) + Cons.delta*(Vars.S_lambda + I*Vars.S_n))/(56*Cons.M**2)
    Vars.hHat_spin_Asymm_4_2_4 = sqrt(5)*(-13*Vars.Sigma_lambda*(3*Cons.nu - 1) + 14*I*Vars.Sigma_n*(3*Cons.nu - 1) + Cons.delta*(13*Vars.S_lambda - 14*I*Vars.S_n))/(168*Cons.M**2)
    Vars.hHat_spin_Asymm_4_1_3 = -sqrt(2)*(-17*sqrt(5)*Cons.delta*(-I*Vars.Sigma_lambda + Vars.Sigma_n)/(420*Cons.M**2) - sqrt(5)*(-13*I*Vars.S_lambda + 13*Vars.S_n)/(280*Cons.M**2))/24
    Vars.hHat_spin_Asymm_4_1_4 = -sqrt(2)*(-sqrt(5)*Vars.Sigma_ell*Cons.nu*(-I*Vars.Sigma_lambda + Vars.Sigma_n)/(84*Cons.M**4) + sqrt(5)*Cons.delta*(Vars.S_ell*(-I*Vars.Sigma_lambda + Vars.Sigma_n) + Vars.Sigma_ell*(-I*Vars.S_lambda + Vars.S_n))/(168*Cons.M**4) + sqrt(5)*(3*Vars.S_ell*(-I*Vars.S_lambda + Vars.S_n) + Vars.Sigma_ell*(-I*Vars.Sigma_lambda + Vars.Sigma_n))/(252*Cons.M**4))/24
    Vars.hHat_spin_Asymm_4_0_4 = sqrt(2)*I*(Vars.S_n*Cons.delta - 3*Vars.Sigma_n*Cons.nu + Vars.Sigma_n)/(168*Cons.M**2)

@njit(cache=True)
def Modes_4p0(modes,Cons,Vars):
    # (ell, m) = (2, +/- 0)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_2_0_0 + Vars.v**2*(Cons.hHat_2_0_2 + Vars.v*(Vars.hHat_spin_Symm_2_0_3 + Vars.v*(Cons.hHat_2_0_4 + Vars.hHat_spin_Symm_2_0_4 + Vars.v*(Cons.hHat_2_0_5 + Vars.hHat_spin_Symm_2_0_5 + Vars.v*(Cons.hHat_2_0_6 + Vars.hHat_spin_Symm_2_0_6 + Vars.hHat_spin_Symm_2_0_7*Vars.v))))))
    Asymm = Vars.rhOverM_coeff*Vars.v**2*(Vars.hHat_spin_Asymm_2_0_2 + Vars.hHat_spin_Asymm_2_0_4*Vars.v**2)
    modes[2] = (Symm + Asymm)[0]
    # (ell, m) = (2, +/- 1)
    Symm = Vars.rhOverM_coeff*Vars.v*(Cons.hHat_2_1_1 + Vars.v*(Vars.hHat_spin_Symm_2_1_2 + Vars.v*(Cons.hHat_2_1_3 + Vars.v*(Cons.hHat_2_1_4 + Vars.hHat_spin_Symm_2_1_4 + Vars.v*(Cons.hHat_2_1_5 + Cons.hHat_2_1_6*Vars.v)))))
    Asymm = Vars.rhOverM_coeff*Vars.v**3*(Vars.hHat_spin_Asymm_2_1_3 + Vars.hHat_spin_Asymm_2_1_4*Vars.v)
    modes[3] = (Symm + Asymm)[0]
    modes[1] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (2, +/- 2)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_2_2_0 + Vars.v**2*(Cons.hHat_2_2_2 + Vars.v*(Cons.hHat_2_2_3 + Vars.hHat_spin_Symm_2_2_3 + Vars.v*(Cons.hHat_2_2_4 + Vars.hHat_spin_Symm_2_2_4 + Vars.v*(Cons.hHat_2_2_5 + Vars.v*(Cons.hHat_2_2_6 + Cons.hHat_2_2_7*Vars.v + Cons.hHat_2_2_lnv_6*Vars.logv))))))
    Asymm = Vars.rhOverM_coeff*Vars.v**2*(Vars.hHat_spin_Asymm_2_2_2 + Vars.hHat_spin_Asymm_2_2_4*Vars.v**2)
    modes[4] = (Symm + Asymm)[0]
    modes[0] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (3, +/- 0)
    Symm = Cons.hHat_3_0_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = Vars.hHat_spin_Asymm_3_0_4*Vars.rhOverM_coeff*Vars.v**4
    modes[8] = (Symm + Asymm)[0]
    # (ell, m) = (3, +/- 1)
    Symm = Vars.rhOverM_coeff*Vars.v*(Cons.hHat_3_1_1 + Vars.v**2*(Cons.hHat_3_1_3 + Vars.v*(Cons.hHat_3_1_4 + Vars.hHat_spin_Symm_3_1_4 + Vars.v*(Cons.hHat_3_1_5 + Vars.v*(Cons.hHat_3_1_6 + Vars.v*(Cons.hHat_3_1_7 + Cons.hHat_3_1_lnv_7*Vars.logv + Vars.hHat_spin_Symm_3_1_7))))))
    Asymm = Vars.hHat_spin_Asymm_3_1_3*Vars.rhOverM_coeff*Vars.v**3
    modes[9] = (Symm + Asymm)[0]
    modes[7] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (3, +/- 2)
    Symm = Vars.rhOverM_coeff*Vars.v**2*(Cons.hHat_3_2_2 + Vars.v*(Vars.hHat_spin_Symm_3_2_3 + Vars.v*(Cons.hHat_3_2_4 + Vars.v*(Cons.hHat_3_2_5 + Cons.hHat_3_2_6*Vars.v))))
    Asymm = Vars.hHat_spin_Asymm_3_2_4*Vars.rhOverM_coeff*Vars.v**4
    modes[10] = (Symm + Asymm)[0]
    modes[6] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (3, +/- 3)
    Symm = Vars.rhOverM_coeff*Vars.v*(Cons.hHat_3_3_1 + Vars.v**2*(Cons.hHat_3_3_3 + Vars.v*(Cons.hHat_3_3_4 + Vars.hHat_spin_Symm_3_3_4 + Vars.v*(Cons.hHat_3_3_5 + Vars.v*(Cons.hHat_3_3_6 + Vars.v*(Cons.hHat_3_3_7 + Cons.hHat_3_3_lnv_7*Vars.logv + Vars.hHat_spin_Symm_3_3_7))))))
    Asymm = Vars.hHat_spin_Asymm_3_3_3*Vars.rhOverM_coeff*Vars.v**3
    modes[11] = (Symm + Asymm)[0]
    modes[5] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (4, +/- 0)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_4_0_0 + Vars.v**2*(Cons.hHat_4_0_2 + Vars.v*(Vars.hHat_spin_Symm_4_0_3 + Vars.v*(Cons.hHat_4_0_4 + Vars.hHat_spin_Symm_4_0_4 + Vars.v*(Cons.hHat_4_0_5 + Vars.hHat_spin_Symm_4_0_5 + Vars.v*(Cons.hHat_4_0_6 + Vars.hHat_spin_Symm_4_0_6 + Vars.hHat_spin_Symm_4_0_7*Vars.v))))))
    Asymm = Vars.hHat_spin_Asymm_4_0_4*Vars.rhOverM_coeff*Vars.v**4
    modes[16] = (Symm + Asymm)[0]
    # (ell, m) = (4, +/- 1)
    Symm = Vars.rhOverM_coeff*Vars.v**3*(Cons.hHat_4_1_3 + Vars.v*(Vars.hHat_spin_Symm_4_1_4 + Vars.v*(Cons.hHat_4_1_5 + Cons.hHat_4_1_6*Vars.v)))
    Asymm = Vars.rhOverM_coeff*Vars.v**3*(Vars.hHat_spin_Asymm_4_1_3 + Vars.hHat_spin_Asymm_4_1_4*Vars.v)
    modes[17] = (Symm + Asymm)[0]
    modes[15] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (4, +/- 2)
    Symm = Vars.rhOverM_coeff*Vars.v**2*(Cons.hHat_4_2_2 + Vars.v**2*(Cons.hHat_4_2_4 + Vars.v*(Cons.hHat_4_2_5 + Cons.hHat_4_2_6*Vars.v)))
    Asymm = Vars.hHat_spin_Asymm_4_2_4*Vars.rhOverM_coeff*Vars.v**4
    modes[18] = (Symm + Asymm)[0]
    modes[14] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (4, +/- 3)
    Symm = Vars.rhOverM_coeff*Vars.v**3*(Cons.hHat_4_3_3 + Vars.v*(Vars.hHat_spin_Symm_4_3_4 + Vars.v*(Cons.hHat_4_3_5 + Cons.hHat_4_3_6*Vars.v)))
    Asymm = 0
    modes[19] = (Symm + Asymm)[0]
    modes[13] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (4, +/- 4)
    Symm = Vars.rhOverM_coeff*Vars.v**2*(Cons.hHat_4_4_2 + Vars.v**2*(Cons.hHat_4_4_4 + Vars.v*(Cons.hHat_4_4_5 + Cons.hHat_4_4_6*Vars.v)))
    Asymm = Vars.hHat_spin_Asymm_4_4_4*Vars.rhOverM_coeff*Vars.v**4
    modes[20] = (Symm + Asymm)[0]
    modes[12] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (5, +/- 1)
    Symm = Vars.rhOverM_coeff*Vars.v**3*(Cons.hHat_5_1_3 + Vars.v**2*(Cons.hHat_5_1_5 + Cons.hHat_5_1_6*Vars.v))
    Asymm = 0
    modes[27] = (Symm + Asymm)[0]
    modes[25] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (5, +/- 2)
    Symm = Vars.rhOverM_coeff*Vars.v**4*(Cons.hHat_5_2_4 + Cons.hHat_5_2_6*Vars.v**2)
    Asymm = 0
    modes[28] = (Symm + Asymm)[0]
    modes[24] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (5, +/- 3)
    Symm = Vars.rhOverM_coeff*Vars.v**3*(Cons.hHat_5_3_3 + Vars.v**2*(Cons.hHat_5_3_5 + Cons.hHat_5_3_6*Vars.v))
    Asymm = 0
    modes[29] = (Symm + Asymm)[0]
    modes[23] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (5, +/- 4)
    Symm = Vars.rhOverM_coeff*Vars.v**4*(Cons.hHat_5_4_4 + Cons.hHat_5_4_6*Vars.v**2)
    Asymm = 0
    modes[30] = (Symm + Asymm)[0]
    modes[22] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (5, +/- 5)
    Symm = Vars.rhOverM_coeff*Vars.v**3*(Cons.hHat_5_5_3 + Vars.v**2*(Cons.hHat_5_5_5 + Cons.hHat_5_5_6*Vars.v))
    Asymm = 0
    modes[31] = (Symm + Asymm)[0]
    modes[21] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (6, +/- 0)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_6_0_0 + Vars.v**2*(Cons.hHat_6_0_2 + Vars.v**2*(Cons.hHat_6_0_4 + Vars.v*(Cons.hHat_6_0_5 + Vars.hHat_spin_Symm_6_0_5 + Vars.v*(Cons.hHat_6_0_6 + Vars.hHat_spin_Symm_6_0_6 + Vars.hHat_spin_Symm_6_0_7*Vars.v)))))
    Asymm = 0
    modes[38] = (Symm + Asymm)[0]
    # (ell, m) = (6, +/- 1)
    Symm = Cons.hHat_6_1_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = 0
    modes[39] = (Symm + Asymm)[0]
    modes[37] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (6, +/- 2)
    Symm = Vars.rhOverM_coeff*Vars.v**4*(Cons.hHat_6_2_4 + Cons.hHat_6_2_6*Vars.v**2)
    Asymm = 0
    modes[40] = (Symm + Asymm)[0]
    modes[36] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (6, +/- 3)
    Symm = Cons.hHat_6_3_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = 0
    modes[41] = (Symm + Asymm)[0]
    modes[35] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (6, +/- 4)
    Symm = Vars.rhOverM_coeff*Vars.v**4*(Cons.hHat_6_4_4 + Cons.hHat_6_4_6*Vars.v**2)
    Asymm = 0
    modes[42] = (Symm + Asymm)[0]
    modes[34] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (6, +/- 5)
    Symm = Cons.hHat_6_5_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = 0
    modes[43] = (Symm + Asymm)[0]
    modes[33] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (6, +/- 6)
    Symm = Vars.rhOverM_coeff*Vars.v**4*(Cons.hHat_6_6_4 + Cons.hHat_6_6_6*Vars.v**2)
    Asymm = 0
    modes[44] = (Symm + Asymm)[0]
    modes[32] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (7, +/- 1)
    Symm = Cons.hHat_7_1_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = 0
    modes[53] = (Symm + Asymm)[0]
    modes[51] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (7, +/- 2)
    Symm = Cons.hHat_7_2_6*Vars.rhOverM_coeff*Vars.v**6
    Asymm = 0
    modes[54] = (Symm + Asymm)[0]
    modes[50] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (7, +/- 3)
    Symm = Cons.hHat_7_3_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = 0
    modes[55] = (Symm + Asymm)[0]
    modes[49] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (7, +/- 4)
    Symm = Cons.hHat_7_4_6*Vars.rhOverM_coeff*Vars.v**6
    Asymm = 0
    modes[56] = (Symm + Asymm)[0]
    modes[48] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (7, +/- 5)
    Symm = Cons.hHat_7_5_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = 0
    modes[57] = (Symm + Asymm)[0]
    modes[47] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (7, +/- 6)
    Symm = Cons.hHat_7_6_6*Vars.rhOverM_coeff*Vars.v**6
    Asymm = 0
    modes[58] = (Symm + Asymm)[0]
    modes[46] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (7, +/- 7)
    Symm = Cons.hHat_7_7_5*Vars.rhOverM_coeff*Vars.v**5
    Asymm = 0
    modes[59] = (Symm + Asymm)[0]
    modes[45] = (-np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (8, +/- 0)
    Symm = Vars.rhOverM_coeff*(Cons.hHat_8_0_0 + Vars.v**2*(Cons.hHat_8_0_2 + Vars.v**2*(Cons.hHat_8_0_4 + Vars.v**2*(Cons.hHat_8_0_6 + Vars.hHat_spin_Symm_8_0_7*Vars.v))))
    Asymm = 0
    modes[68] = (Symm + Asymm)[0]
    # (ell, m) = (8, +/- 2)
    Symm = Cons.hHat_8_2_6*Vars.rhOverM_coeff*Vars.v**6
    Asymm = 0
    modes[70] = (Symm + Asymm)[0]
    modes[66] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (8, +/- 4)
    Symm = Cons.hHat_8_4_6*Vars.rhOverM_coeff*Vars.v**6
    Asymm = 0
    modes[72] = (Symm + Asymm)[0]
    modes[64] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (8, +/- 6)
    Symm = Cons.hHat_8_6_6*Vars.rhOverM_coeff*Vars.v**6
    Asymm = 0
    modes[74] = (Symm + Asymm)[0]
    modes[62] = (np.conjugate(Symm - Asymm))[0]
    # (ell, m) = (8, +/- 8)
    Symm = Cons.hHat_8_8_6*Vars.rhOverM_coeff*Vars.v**6
    Asymm = 0
    modes[76] = (Symm + Asymm)[0]
    modes[60] = (np.conjugate(Symm - Asymm))[0]

def Modes(wHat_i, xHat_i, yHat_i, zHat_i, M1_i, M2_i, v_i, S_chi1_i, S_chi2_i, frame, y, PNWaveformModeOrder=3.5) :
    Recalculate={        0:Recalculate_0,
        1:Recalculate_0p50,
        2:Recalculate_1p0,
        3:Recalculate_1p5,
        4:Recalculate_2p0,
        5:Recalculate_2p5,
        6:Recalculate_3p0,
        7:Recalculate_3p5,
        8:Recalculate_4p0}
    WaveformModes={        0:Modes_0,
        1:Modes_0p50,
        2:Modes_1p0,
        3:Modes_1p5,
        4:Modes_2p0,
        5:Modes_2p5,
        6:Modes_3p0,
        7:Modes_3p5,
        8:Modes_4p0}
    ModeData=np.zeros((len(y[0]),77), dtype=complex)
    zz=np.array([0.0])
    z=np.array([0.0*1j])
    Cons=Constants(zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z)
    Vars=Variables(zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,zz,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z)
    Initialization(Cons, wHat_i, xHat_i, yHat_i, zHat_i, M1_i, M2_i, v_i, S_chi1_i, S_chi2_i)
    for i in range(len(y[0])):
        Recalculate.get(2*PNWaveformModeOrder)(Cons,Vars,y[:,i])
        WaveformModes.get(2*PNWaveformModeOrder)(ModeData[i,:],Cons,Vars)
    return ModeData, [2,8]
